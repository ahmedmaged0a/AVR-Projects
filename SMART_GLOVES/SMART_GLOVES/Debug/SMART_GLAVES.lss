
SMART_GLAVES.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004af2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000012a  00800060  00004af2  00004b66  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00002220  00000000  00000000  00004c90  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000de6  00000000  00000000  00006eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000220  00000000  00000000  00007c96  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000275  00000000  00000000  00007eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003510  00000000  00000000  0000812b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001823  00000000  00000000  0000b63b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000179c  00000000  00000000  0000ce5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000240  00000000  00000000  0000e5fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b7  00000000  00000000  0000e83c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002420  00000000  00000000  0000ebf3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00011013  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ef       	ldi	r30, 0xF2	; 242
      68:	fa e4       	ldi	r31, 0x4A	; 74
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	aa 38       	cpi	r26, 0x8A	; 138
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 c1 23 	call	0x4782	; 0x4782 <main>
      7a:	0c 94 77 25 	jmp	0x4aee	; 0x4aee <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__subsf3>
      ae:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <__fixunssfdi>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 40 25 	jmp	0x4a80	; 0x4a80 <__prologue_saves__>
      e6:	7b 01       	movw	r14, r22
      e8:	8c 01       	movw	r16, r24
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	40 e8       	ldi	r20, 0x80	; 128
      f0:	5f e3       	ldi	r21, 0x3F	; 63
      f2:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
      f6:	88 23       	and	r24, r24
      f8:	4c f4       	brge	.+18     	; 0x10c <__fixunssfdi+0x32>
      fa:	aa 24       	eor	r10, r10
      fc:	bb 24       	eor	r11, r11
      fe:	cc 24       	eor	r12, r12
     100:	dd 24       	eor	r13, r13
     102:	ee 24       	eor	r14, r14
     104:	ff 24       	eor	r15, r15
     106:	00 e0       	ldi	r16, 0x00	; 0
     108:	10 e0       	ldi	r17, 0x00	; 0
     10a:	86 c0       	rjmp	.+268    	; 0x218 <__fixunssfdi+0x13e>
     10c:	c8 01       	movw	r24, r16
     10e:	b7 01       	movw	r22, r14
     110:	20 e0       	ldi	r18, 0x00	; 0
     112:	30 e0       	ldi	r19, 0x00	; 0
     114:	40 e8       	ldi	r20, 0x80	; 128
     116:	5f e4       	ldi	r21, 0x4F	; 79
     118:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
     11c:	88 23       	and	r24, r24
     11e:	54 f4       	brge	.+20     	; 0x134 <__fixunssfdi+0x5a>
     120:	c8 01       	movw	r24, r16
     122:	b7 01       	movw	r22, r14
     124:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     128:	5b 01       	movw	r10, r22
     12a:	6c 01       	movw	r12, r24
     12c:	ee 24       	eor	r14, r14
     12e:	ff 24       	eor	r15, r15
     130:	87 01       	movw	r16, r14
     132:	72 c0       	rjmp	.+228    	; 0x218 <__fixunssfdi+0x13e>
     134:	c8 01       	movw	r24, r16
     136:	b7 01       	movw	r22, r14
     138:	20 e0       	ldi	r18, 0x00	; 0
     13a:	30 e0       	ldi	r19, 0x00	; 0
     13c:	40 e8       	ldi	r20, 0x80	; 128
     13e:	5f e5       	ldi	r21, 0x5F	; 95
     140:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
     144:	87 fd       	sbrc	r24, 7
     146:	0f c0       	rjmp	.+30     	; 0x166 <__fixunssfdi+0x8c>
     148:	aa 24       	eor	r10, r10
     14a:	aa 94       	dec	r10
     14c:	bb 24       	eor	r11, r11
     14e:	ba 94       	dec	r11
     150:	cc 24       	eor	r12, r12
     152:	ca 94       	dec	r12
     154:	dd 24       	eor	r13, r13
     156:	da 94       	dec	r13
     158:	ee 24       	eor	r14, r14
     15a:	ea 94       	dec	r14
     15c:	ff 24       	eor	r15, r15
     15e:	fa 94       	dec	r15
     160:	0f ef       	ldi	r16, 0xFF	; 255
     162:	1f ef       	ldi	r17, 0xFF	; 255
     164:	59 c0       	rjmp	.+178    	; 0x218 <__fixunssfdi+0x13e>
     166:	c8 01       	movw	r24, r16
     168:	b7 01       	movw	r22, r14
     16a:	20 e0       	ldi	r18, 0x00	; 0
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	40 e8       	ldi	r20, 0x80	; 128
     170:	5f e2       	ldi	r21, 0x2F	; 47
     172:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
     176:	7b 01       	movw	r14, r22
     178:	8c 01       	movw	r16, r24
     17a:	22 24       	eor	r2, r2
     17c:	33 24       	eor	r3, r3
     17e:	21 01       	movw	r4, r2
     180:	90 e1       	ldi	r25, 0x10	; 16
     182:	a9 2e       	mov	r10, r25
     184:	b1 2c       	mov	r11, r1
     186:	c1 2c       	mov	r12, r1
     188:	d1 2c       	mov	r13, r1
     18a:	c0 e0       	ldi	r28, 0x00	; 0
     18c:	d0 e0       	ldi	r29, 0x00	; 0
     18e:	61 e0       	ldi	r22, 0x01	; 1
     190:	70 e0       	ldi	r23, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	0a 2c       	mov	r0, r10
     198:	04 c0       	rjmp	.+8      	; 0x1a2 <__fixunssfdi+0xc8>
     19a:	66 0f       	add	r22, r22
     19c:	77 1f       	adc	r23, r23
     19e:	88 1f       	adc	r24, r24
     1a0:	99 1f       	adc	r25, r25
     1a2:	0a 94       	dec	r0
     1a4:	d2 f7       	brpl	.-12     	; 0x19a <__fixunssfdi+0xc0>
     1a6:	0e 94 2e 12 	call	0x245c	; 0x245c <__floatunsisf>
     1aa:	3b 01       	movw	r6, r22
     1ac:	4c 01       	movw	r8, r24
     1ae:	c8 01       	movw	r24, r16
     1b0:	b7 01       	movw	r22, r14
     1b2:	a4 01       	movw	r20, r8
     1b4:	93 01       	movw	r18, r6
     1b6:	0e 94 7a 11 	call	0x22f4	; 0x22f4 <__gesf2>
     1ba:	88 23       	and	r24, r24
     1bc:	64 f0       	brlt	.+24     	; 0x1d6 <__fixunssfdi+0xfc>
     1be:	2a 28       	or	r2, r10
     1c0:	3b 28       	or	r3, r11
     1c2:	4c 28       	or	r4, r12
     1c4:	5d 28       	or	r5, r13
     1c6:	c8 01       	movw	r24, r16
     1c8:	b7 01       	movw	r22, r14
     1ca:	a4 01       	movw	r20, r8
     1cc:	93 01       	movw	r18, r6
     1ce:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3>
     1d2:	7b 01       	movw	r14, r22
     1d4:	8c 01       	movw	r16, r24
     1d6:	d6 94       	lsr	r13
     1d8:	c7 94       	ror	r12
     1da:	b7 94       	ror	r11
     1dc:	a7 94       	ror	r10
     1de:	21 96       	adiw	r28, 0x01	; 1
     1e0:	c5 30       	cpi	r28, 0x05	; 5
     1e2:	d1 05       	cpc	r29, r1
     1e4:	a1 f6       	brne	.-88     	; 0x18e <__fixunssfdi+0xb4>
     1e6:	c8 01       	movw	r24, r16
     1e8:	b7 01       	movw	r22, r14
     1ea:	20 e0       	ldi	r18, 0x00	; 0
     1ec:	30 e0       	ldi	r19, 0x00	; 0
     1ee:	40 e8       	ldi	r20, 0x80	; 128
     1f0:	5f e4       	ldi	r21, 0x4F	; 79
     1f2:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
     1f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     1fa:	5b 01       	movw	r10, r22
     1fc:	6c 01       	movw	r12, r24
     1fe:	9b 01       	movw	r18, r22
     200:	a6 01       	movw	r20, r12
     202:	60 e0       	ldi	r22, 0x00	; 0
     204:	70 e0       	ldi	r23, 0x00	; 0
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	02 2d       	mov	r16, r2
     20c:	0e 94 a7 12 	call	0x254e	; 0x254e <__ashldi3>
     210:	59 01       	movw	r10, r18
     212:	6a 01       	movw	r12, r20
     214:	7b 01       	movw	r14, r22
     216:	8c 01       	movw	r16, r24
     218:	95 01       	movw	r18, r10
     21a:	a6 01       	movw	r20, r12
     21c:	b7 01       	movw	r22, r14
     21e:	c8 01       	movw	r24, r16
     220:	cd b7       	in	r28, 0x3d	; 61
     222:	de b7       	in	r29, 0x3e	; 62
     224:	e2 e1       	ldi	r30, 0x12	; 18
     226:	0c 94 5c 25 	jmp	0x4ab8	; 0x4ab8 <__epilogue_restores__>

0000022a <__udivdi3>:
     22a:	ae e5       	ldi	r26, 0x5E	; 94
     22c:	b0 e0       	ldi	r27, 0x00	; 0
     22e:	eb e1       	ldi	r30, 0x1B	; 27
     230:	f1 e0       	ldi	r31, 0x01	; 1
     232:	0c 94 40 25 	jmp	0x4a80	; 0x4a80 <__prologue_saves__>
     236:	a8 e0       	ldi	r26, 0x08	; 8
     238:	4e 01       	movw	r8, r28
     23a:	08 94       	sec
     23c:	81 1c       	adc	r8, r1
     23e:	91 1c       	adc	r9, r1
     240:	f4 01       	movw	r30, r8
     242:	6a 2e       	mov	r6, r26
     244:	11 92       	st	Z+, r1
     246:	6a 94       	dec	r6
     248:	e9 f7       	brne	.-6      	; 0x244 <__udivdi3+0x1a>
     24a:	29 83       	std	Y+1, r18	; 0x01
     24c:	3a 83       	std	Y+2, r19	; 0x02
     24e:	4b 83       	std	Y+3, r20	; 0x03
     250:	5c 83       	std	Y+4, r21	; 0x04
     252:	6d 83       	std	Y+5, r22	; 0x05
     254:	7e 83       	std	Y+6, r23	; 0x06
     256:	8f 83       	std	Y+7, r24	; 0x07
     258:	98 87       	std	Y+8, r25	; 0x08
     25a:	ce 01       	movw	r24, r28
     25c:	09 96       	adiw	r24, 0x09	; 9
     25e:	fc 01       	movw	r30, r24
     260:	11 92       	st	Z+, r1
     262:	aa 95       	dec	r26
     264:	e9 f7       	brne	.-6      	; 0x260 <__udivdi3+0x36>
     266:	a9 86       	std	Y+9, r10	; 0x09
     268:	ba 86       	std	Y+10, r11	; 0x0a
     26a:	cb 86       	std	Y+11, r12	; 0x0b
     26c:	dc 86       	std	Y+12, r13	; 0x0c
     26e:	ed 86       	std	Y+13, r14	; 0x0d
     270:	fe 86       	std	Y+14, r15	; 0x0e
     272:	0f 87       	std	Y+15, r16	; 0x0f
     274:	18 8b       	std	Y+16, r17	; 0x10
     276:	29 84       	ldd	r2, Y+9	; 0x09
     278:	3a 84       	ldd	r3, Y+10	; 0x0a
     27a:	4b 84       	ldd	r4, Y+11	; 0x0b
     27c:	5c 84       	ldd	r5, Y+12	; 0x0c
     27e:	ed 84       	ldd	r14, Y+13	; 0x0d
     280:	fe 84       	ldd	r15, Y+14	; 0x0e
     282:	0f 85       	ldd	r16, Y+15	; 0x0f
     284:	18 89       	ldd	r17, Y+16	; 0x10
     286:	69 80       	ldd	r6, Y+1	; 0x01
     288:	7a 80       	ldd	r7, Y+2	; 0x02
     28a:	8b 80       	ldd	r8, Y+3	; 0x03
     28c:	9c 80       	ldd	r9, Y+4	; 0x04
     28e:	6d a6       	std	Y+45, r6	; 0x2d
     290:	7e a6       	std	Y+46, r7	; 0x2e
     292:	8f a6       	std	Y+47, r8	; 0x2f
     294:	98 aa       	std	Y+48, r9	; 0x30
     296:	6d 80       	ldd	r6, Y+5	; 0x05
     298:	7e 80       	ldd	r7, Y+6	; 0x06
     29a:	8f 80       	ldd	r8, Y+7	; 0x07
     29c:	98 84       	ldd	r9, Y+8	; 0x08
     29e:	e1 14       	cp	r14, r1
     2a0:	f1 04       	cpc	r15, r1
     2a2:	01 05       	cpc	r16, r1
     2a4:	11 05       	cpc	r17, r1
     2a6:	09 f0       	breq	.+2      	; 0x2aa <__udivdi3+0x80>
     2a8:	b3 c3       	rjmp	.+1894   	; 0xa10 <__stack+0x1b1>
     2aa:	62 14       	cp	r6, r2
     2ac:	73 04       	cpc	r7, r3
     2ae:	84 04       	cpc	r8, r4
     2b0:	95 04       	cpc	r9, r5
     2b2:	08 f0       	brcs	.+2      	; 0x2b6 <__udivdi3+0x8c>
     2b4:	3d c1       	rjmp	.+634    	; 0x530 <__udivdi3+0x306>
     2b6:	00 e0       	ldi	r16, 0x00	; 0
     2b8:	20 16       	cp	r2, r16
     2ba:	00 e0       	ldi	r16, 0x00	; 0
     2bc:	30 06       	cpc	r3, r16
     2be:	01 e0       	ldi	r16, 0x01	; 1
     2c0:	40 06       	cpc	r4, r16
     2c2:	00 e0       	ldi	r16, 0x00	; 0
     2c4:	50 06       	cpc	r5, r16
     2c6:	88 f4       	brcc	.+34     	; 0x2ea <__udivdi3+0xc0>
     2c8:	1f ef       	ldi	r17, 0xFF	; 255
     2ca:	21 16       	cp	r2, r17
     2cc:	31 04       	cpc	r3, r1
     2ce:	41 04       	cpc	r4, r1
     2d0:	51 04       	cpc	r5, r1
     2d2:	39 f0       	breq	.+14     	; 0x2e2 <__udivdi3+0xb8>
     2d4:	30 f0       	brcs	.+12     	; 0x2e2 <__udivdi3+0xb8>
     2d6:	48 e0       	ldi	r20, 0x08	; 8
     2d8:	e4 2e       	mov	r14, r20
     2da:	f1 2c       	mov	r15, r1
     2dc:	01 2d       	mov	r16, r1
     2de:	11 2d       	mov	r17, r1
     2e0:	18 c0       	rjmp	.+48     	; 0x312 <__udivdi3+0xe8>
     2e2:	ee 24       	eor	r14, r14
     2e4:	ff 24       	eor	r15, r15
     2e6:	87 01       	movw	r16, r14
     2e8:	14 c0       	rjmp	.+40     	; 0x312 <__udivdi3+0xe8>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	22 16       	cp	r2, r18
     2ee:	20 e0       	ldi	r18, 0x00	; 0
     2f0:	32 06       	cpc	r3, r18
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	42 06       	cpc	r4, r18
     2f6:	21 e0       	ldi	r18, 0x01	; 1
     2f8:	52 06       	cpc	r5, r18
     2fa:	30 f0       	brcs	.+12     	; 0x308 <__udivdi3+0xde>
     2fc:	38 e1       	ldi	r19, 0x18	; 24
     2fe:	e3 2e       	mov	r14, r19
     300:	f1 2c       	mov	r15, r1
     302:	01 2d       	mov	r16, r1
     304:	11 2d       	mov	r17, r1
     306:	05 c0       	rjmp	.+10     	; 0x312 <__udivdi3+0xe8>
     308:	20 e1       	ldi	r18, 0x10	; 16
     30a:	e2 2e       	mov	r14, r18
     30c:	f1 2c       	mov	r15, r1
     30e:	01 2d       	mov	r16, r1
     310:	11 2d       	mov	r17, r1
     312:	d2 01       	movw	r26, r4
     314:	c1 01       	movw	r24, r2
     316:	0e 2c       	mov	r0, r14
     318:	04 c0       	rjmp	.+8      	; 0x322 <__udivdi3+0xf8>
     31a:	b6 95       	lsr	r27
     31c:	a7 95       	ror	r26
     31e:	97 95       	ror	r25
     320:	87 95       	ror	r24
     322:	0a 94       	dec	r0
     324:	d2 f7       	brpl	.-12     	; 0x31a <__udivdi3+0xf0>
     326:	87 57       	subi	r24, 0x77	; 119
     328:	9f 4f       	sbci	r25, 0xFF	; 255
     32a:	dc 01       	movw	r26, r24
     32c:	2c 91       	ld	r18, X
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	a0 e0       	ldi	r26, 0x00	; 0
     334:	b0 e0       	ldi	r27, 0x00	; 0
     336:	8e 19       	sub	r24, r14
     338:	9f 09       	sbc	r25, r15
     33a:	a0 0b       	sbc	r26, r16
     33c:	b1 0b       	sbc	r27, r17
     33e:	7c 01       	movw	r14, r24
     340:	8d 01       	movw	r16, r26
     342:	e2 1a       	sub	r14, r18
     344:	f1 08       	sbc	r15, r1
     346:	01 09       	sbc	r16, r1
     348:	11 09       	sbc	r17, r1
     34a:	e1 14       	cp	r14, r1
     34c:	f1 04       	cpc	r15, r1
     34e:	01 05       	cpc	r16, r1
     350:	11 05       	cpc	r17, r1
     352:	a1 f1       	breq	.+104    	; 0x3bc <__udivdi3+0x192>
     354:	0e 2c       	mov	r0, r14
     356:	04 c0       	rjmp	.+8      	; 0x360 <__udivdi3+0x136>
     358:	22 0c       	add	r2, r2
     35a:	33 1c       	adc	r3, r3
     35c:	44 1c       	adc	r4, r4
     35e:	55 1c       	adc	r5, r5
     360:	0a 94       	dec	r0
     362:	d2 f7       	brpl	.-12     	; 0x358 <__udivdi3+0x12e>
     364:	a4 01       	movw	r20, r8
     366:	93 01       	movw	r18, r6
     368:	0e 2c       	mov	r0, r14
     36a:	04 c0       	rjmp	.+8      	; 0x374 <__udivdi3+0x14a>
     36c:	22 0f       	add	r18, r18
     36e:	33 1f       	adc	r19, r19
     370:	44 1f       	adc	r20, r20
     372:	55 1f       	adc	r21, r21
     374:	0a 94       	dec	r0
     376:	d2 f7       	brpl	.-12     	; 0x36c <__udivdi3+0x142>
     378:	80 e2       	ldi	r24, 0x20	; 32
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	8e 19       	sub	r24, r14
     37e:	9f 09       	sbc	r25, r15
     380:	6d a4       	ldd	r6, Y+45	; 0x2d
     382:	7e a4       	ldd	r7, Y+46	; 0x2e
     384:	8f a4       	ldd	r8, Y+47	; 0x2f
     386:	98 a8       	ldd	r9, Y+48	; 0x30
     388:	04 c0       	rjmp	.+8      	; 0x392 <__udivdi3+0x168>
     38a:	96 94       	lsr	r9
     38c:	87 94       	ror	r8
     38e:	77 94       	ror	r7
     390:	67 94       	ror	r6
     392:	8a 95       	dec	r24
     394:	d2 f7       	brpl	.-12     	; 0x38a <__udivdi3+0x160>
     396:	62 2a       	or	r6, r18
     398:	73 2a       	or	r7, r19
     39a:	84 2a       	or	r8, r20
     39c:	95 2a       	or	r9, r21
     39e:	ad a4       	ldd	r10, Y+45	; 0x2d
     3a0:	be a4       	ldd	r11, Y+46	; 0x2e
     3a2:	cf a4       	ldd	r12, Y+47	; 0x2f
     3a4:	d8 a8       	ldd	r13, Y+48	; 0x30
     3a6:	04 c0       	rjmp	.+8      	; 0x3b0 <__udivdi3+0x186>
     3a8:	aa 0c       	add	r10, r10
     3aa:	bb 1c       	adc	r11, r11
     3ac:	cc 1c       	adc	r12, r12
     3ae:	dd 1c       	adc	r13, r13
     3b0:	ea 94       	dec	r14
     3b2:	d2 f7       	brpl	.-12     	; 0x3a8 <__udivdi3+0x17e>
     3b4:	ad a6       	std	Y+45, r10	; 0x2d
     3b6:	be a6       	std	Y+46, r11	; 0x2e
     3b8:	cf a6       	std	Y+47, r12	; 0x2f
     3ba:	d8 aa       	std	Y+48, r13	; 0x30
     3bc:	62 01       	movw	r12, r4
     3be:	ee 24       	eor	r14, r14
     3c0:	ff 24       	eor	r15, r15
     3c2:	cd aa       	std	Y+53, r12	; 0x35
     3c4:	de aa       	std	Y+54, r13	; 0x36
     3c6:	ef aa       	std	Y+55, r14	; 0x37
     3c8:	f8 ae       	std	Y+56, r15	; 0x38
     3ca:	92 01       	movw	r18, r4
     3cc:	81 01       	movw	r16, r2
     3ce:	20 70       	andi	r18, 0x00	; 0
     3d0:	30 70       	andi	r19, 0x00	; 0
     3d2:	09 af       	std	Y+57, r16	; 0x39
     3d4:	1a af       	std	Y+58, r17	; 0x3a
     3d6:	2b af       	std	Y+59, r18	; 0x3b
     3d8:	3c af       	std	Y+60, r19	; 0x3c
     3da:	c4 01       	movw	r24, r8
     3dc:	b3 01       	movw	r22, r6
     3de:	a7 01       	movw	r20, r14
     3e0:	96 01       	movw	r18, r12
     3e2:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     3e6:	7b 01       	movw	r14, r22
     3e8:	8c 01       	movw	r16, r24
     3ea:	c4 01       	movw	r24, r8
     3ec:	b3 01       	movw	r22, r6
     3ee:	2d a9       	ldd	r18, Y+53	; 0x35
     3f0:	3e a9       	ldd	r19, Y+54	; 0x36
     3f2:	4f a9       	ldd	r20, Y+55	; 0x37
     3f4:	58 ad       	ldd	r21, Y+56	; 0x38
     3f6:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     3fa:	c9 01       	movw	r24, r18
     3fc:	da 01       	movw	r26, r20
     3fe:	3c 01       	movw	r6, r24
     400:	4d 01       	movw	r8, r26
     402:	c4 01       	movw	r24, r8
     404:	b3 01       	movw	r22, r6
     406:	29 ad       	ldd	r18, Y+57	; 0x39
     408:	3a ad       	ldd	r19, Y+58	; 0x3a
     40a:	4b ad       	ldd	r20, Y+59	; 0x3b
     40c:	5c ad       	ldd	r21, Y+60	; 0x3c
     40e:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     412:	9b 01       	movw	r18, r22
     414:	ac 01       	movw	r20, r24
     416:	87 01       	movw	r16, r14
     418:	ff 24       	eor	r15, r15
     41a:	ee 24       	eor	r14, r14
     41c:	ad a4       	ldd	r10, Y+45	; 0x2d
     41e:	be a4       	ldd	r11, Y+46	; 0x2e
     420:	cf a4       	ldd	r12, Y+47	; 0x2f
     422:	d8 a8       	ldd	r13, Y+48	; 0x30
     424:	c6 01       	movw	r24, r12
     426:	aa 27       	eor	r26, r26
     428:	bb 27       	eor	r27, r27
     42a:	57 01       	movw	r10, r14
     42c:	68 01       	movw	r12, r16
     42e:	a8 2a       	or	r10, r24
     430:	b9 2a       	or	r11, r25
     432:	ca 2a       	or	r12, r26
     434:	db 2a       	or	r13, r27
     436:	a2 16       	cp	r10, r18
     438:	b3 06       	cpc	r11, r19
     43a:	c4 06       	cpc	r12, r20
     43c:	d5 06       	cpc	r13, r21
     43e:	e0 f4       	brcc	.+56     	; 0x478 <__udivdi3+0x24e>
     440:	08 94       	sec
     442:	61 08       	sbc	r6, r1
     444:	71 08       	sbc	r7, r1
     446:	81 08       	sbc	r8, r1
     448:	91 08       	sbc	r9, r1
     44a:	a2 0c       	add	r10, r2
     44c:	b3 1c       	adc	r11, r3
     44e:	c4 1c       	adc	r12, r4
     450:	d5 1c       	adc	r13, r5
     452:	a2 14       	cp	r10, r2
     454:	b3 04       	cpc	r11, r3
     456:	c4 04       	cpc	r12, r4
     458:	d5 04       	cpc	r13, r5
     45a:	70 f0       	brcs	.+28     	; 0x478 <__udivdi3+0x24e>
     45c:	a2 16       	cp	r10, r18
     45e:	b3 06       	cpc	r11, r19
     460:	c4 06       	cpc	r12, r20
     462:	d5 06       	cpc	r13, r21
     464:	48 f4       	brcc	.+18     	; 0x478 <__udivdi3+0x24e>
     466:	08 94       	sec
     468:	61 08       	sbc	r6, r1
     46a:	71 08       	sbc	r7, r1
     46c:	81 08       	sbc	r8, r1
     46e:	91 08       	sbc	r9, r1
     470:	a2 0c       	add	r10, r2
     472:	b3 1c       	adc	r11, r3
     474:	c4 1c       	adc	r12, r4
     476:	d5 1c       	adc	r13, r5
     478:	a2 1a       	sub	r10, r18
     47a:	b3 0a       	sbc	r11, r19
     47c:	c4 0a       	sbc	r12, r20
     47e:	d5 0a       	sbc	r13, r21
     480:	c6 01       	movw	r24, r12
     482:	b5 01       	movw	r22, r10
     484:	2d a9       	ldd	r18, Y+53	; 0x35
     486:	3e a9       	ldd	r19, Y+54	; 0x36
     488:	4f a9       	ldd	r20, Y+55	; 0x37
     48a:	58 ad       	ldd	r21, Y+56	; 0x38
     48c:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     490:	7b 01       	movw	r14, r22
     492:	8c 01       	movw	r16, r24
     494:	c6 01       	movw	r24, r12
     496:	b5 01       	movw	r22, r10
     498:	2d a9       	ldd	r18, Y+53	; 0x35
     49a:	3e a9       	ldd	r19, Y+54	; 0x36
     49c:	4f a9       	ldd	r20, Y+55	; 0x37
     49e:	58 ad       	ldd	r21, Y+56	; 0x38
     4a0:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     4a4:	c9 01       	movw	r24, r18
     4a6:	da 01       	movw	r26, r20
     4a8:	5c 01       	movw	r10, r24
     4aa:	6d 01       	movw	r12, r26
     4ac:	c6 01       	movw	r24, r12
     4ae:	b5 01       	movw	r22, r10
     4b0:	29 ad       	ldd	r18, Y+57	; 0x39
     4b2:	3a ad       	ldd	r19, Y+58	; 0x3a
     4b4:	4b ad       	ldd	r20, Y+59	; 0x3b
     4b6:	5c ad       	ldd	r21, Y+60	; 0x3c
     4b8:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     4bc:	9b 01       	movw	r18, r22
     4be:	ac 01       	movw	r20, r24
     4c0:	87 01       	movw	r16, r14
     4c2:	ff 24       	eor	r15, r15
     4c4:	ee 24       	eor	r14, r14
     4c6:	8d a5       	ldd	r24, Y+45	; 0x2d
     4c8:	9e a5       	ldd	r25, Y+46	; 0x2e
     4ca:	af a5       	ldd	r26, Y+47	; 0x2f
     4cc:	b8 a9       	ldd	r27, Y+48	; 0x30
     4ce:	a0 70       	andi	r26, 0x00	; 0
     4d0:	b0 70       	andi	r27, 0x00	; 0
     4d2:	e8 2a       	or	r14, r24
     4d4:	f9 2a       	or	r15, r25
     4d6:	0a 2b       	or	r16, r26
     4d8:	1b 2b       	or	r17, r27
     4da:	e2 16       	cp	r14, r18
     4dc:	f3 06       	cpc	r15, r19
     4de:	04 07       	cpc	r16, r20
     4e0:	15 07       	cpc	r17, r21
     4e2:	c0 f4       	brcc	.+48     	; 0x514 <__udivdi3+0x2ea>
     4e4:	08 94       	sec
     4e6:	a1 08       	sbc	r10, r1
     4e8:	b1 08       	sbc	r11, r1
     4ea:	c1 08       	sbc	r12, r1
     4ec:	d1 08       	sbc	r13, r1
     4ee:	e2 0c       	add	r14, r2
     4f0:	f3 1c       	adc	r15, r3
     4f2:	04 1d       	adc	r16, r4
     4f4:	15 1d       	adc	r17, r5
     4f6:	e2 14       	cp	r14, r2
     4f8:	f3 04       	cpc	r15, r3
     4fa:	04 05       	cpc	r16, r4
     4fc:	15 05       	cpc	r17, r5
     4fe:	50 f0       	brcs	.+20     	; 0x514 <__udivdi3+0x2ea>
     500:	e2 16       	cp	r14, r18
     502:	f3 06       	cpc	r15, r19
     504:	04 07       	cpc	r16, r20
     506:	15 07       	cpc	r17, r21
     508:	28 f4       	brcc	.+10     	; 0x514 <__udivdi3+0x2ea>
     50a:	08 94       	sec
     50c:	a1 08       	sbc	r10, r1
     50e:	b1 08       	sbc	r11, r1
     510:	c1 08       	sbc	r12, r1
     512:	d1 08       	sbc	r13, r1
     514:	d3 01       	movw	r26, r6
     516:	99 27       	eor	r25, r25
     518:	88 27       	eor	r24, r24
     51a:	86 01       	movw	r16, r12
     51c:	75 01       	movw	r14, r10
     51e:	e8 2a       	or	r14, r24
     520:	f9 2a       	or	r15, r25
     522:	0a 2b       	or	r16, r26
     524:	1b 2b       	or	r17, r27
     526:	e9 aa       	std	Y+49, r14	; 0x31
     528:	fa aa       	std	Y+50, r15	; 0x32
     52a:	0b ab       	std	Y+51, r16	; 0x33
     52c:	1c ab       	std	Y+52, r17	; 0x34
     52e:	cf c4       	rjmp	.+2462   	; 0xece <__stack+0x66f>
     530:	21 14       	cp	r2, r1
     532:	31 04       	cpc	r3, r1
     534:	41 04       	cpc	r4, r1
     536:	51 04       	cpc	r5, r1
     538:	71 f4       	brne	.+28     	; 0x556 <__udivdi3+0x32c>
     53a:	61 e0       	ldi	r22, 0x01	; 1
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	20 e0       	ldi	r18, 0x00	; 0
     544:	30 e0       	ldi	r19, 0x00	; 0
     546:	40 e0       	ldi	r20, 0x00	; 0
     548:	50 e0       	ldi	r21, 0x00	; 0
     54a:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     54e:	c9 01       	movw	r24, r18
     550:	da 01       	movw	r26, r20
     552:	1c 01       	movw	r2, r24
     554:	2d 01       	movw	r4, r26
     556:	00 e0       	ldi	r16, 0x00	; 0
     558:	20 16       	cp	r2, r16
     55a:	00 e0       	ldi	r16, 0x00	; 0
     55c:	30 06       	cpc	r3, r16
     55e:	01 e0       	ldi	r16, 0x01	; 1
     560:	40 06       	cpc	r4, r16
     562:	00 e0       	ldi	r16, 0x00	; 0
     564:	50 06       	cpc	r5, r16
     566:	88 f4       	brcc	.+34     	; 0x58a <__udivdi3+0x360>
     568:	1f ef       	ldi	r17, 0xFF	; 255
     56a:	21 16       	cp	r2, r17
     56c:	31 04       	cpc	r3, r1
     56e:	41 04       	cpc	r4, r1
     570:	51 04       	cpc	r5, r1
     572:	31 f0       	breq	.+12     	; 0x580 <__udivdi3+0x356>
     574:	28 f0       	brcs	.+10     	; 0x580 <__udivdi3+0x356>
     576:	48 e0       	ldi	r20, 0x08	; 8
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	60 e0       	ldi	r22, 0x00	; 0
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	17 c0       	rjmp	.+46     	; 0x5ae <__udivdi3+0x384>
     580:	40 e0       	ldi	r20, 0x00	; 0
     582:	50 e0       	ldi	r21, 0x00	; 0
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	12 c0       	rjmp	.+36     	; 0x5ae <__udivdi3+0x384>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	22 16       	cp	r2, r18
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	32 06       	cpc	r3, r18
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	42 06       	cpc	r4, r18
     596:	21 e0       	ldi	r18, 0x01	; 1
     598:	52 06       	cpc	r5, r18
     59a:	28 f0       	brcs	.+10     	; 0x5a6 <__udivdi3+0x37c>
     59c:	48 e1       	ldi	r20, 0x18	; 24
     59e:	50 e0       	ldi	r21, 0x00	; 0
     5a0:	60 e0       	ldi	r22, 0x00	; 0
     5a2:	70 e0       	ldi	r23, 0x00	; 0
     5a4:	04 c0       	rjmp	.+8      	; 0x5ae <__udivdi3+0x384>
     5a6:	40 e1       	ldi	r20, 0x10	; 16
     5a8:	50 e0       	ldi	r21, 0x00	; 0
     5aa:	60 e0       	ldi	r22, 0x00	; 0
     5ac:	70 e0       	ldi	r23, 0x00	; 0
     5ae:	d2 01       	movw	r26, r4
     5b0:	c1 01       	movw	r24, r2
     5b2:	04 2e       	mov	r0, r20
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <__udivdi3+0x394>
     5b6:	b6 95       	lsr	r27
     5b8:	a7 95       	ror	r26
     5ba:	97 95       	ror	r25
     5bc:	87 95       	ror	r24
     5be:	0a 94       	dec	r0
     5c0:	d2 f7       	brpl	.-12     	; 0x5b6 <__udivdi3+0x38c>
     5c2:	87 57       	subi	r24, 0x77	; 119
     5c4:	9f 4f       	sbci	r25, 0xFF	; 255
     5c6:	dc 01       	movw	r26, r24
     5c8:	2c 91       	ld	r18, X
     5ca:	e0 e2       	ldi	r30, 0x20	; 32
     5cc:	ee 2e       	mov	r14, r30
     5ce:	f1 2c       	mov	r15, r1
     5d0:	01 2d       	mov	r16, r1
     5d2:	11 2d       	mov	r17, r1
     5d4:	d8 01       	movw	r26, r16
     5d6:	c7 01       	movw	r24, r14
     5d8:	84 1b       	sub	r24, r20
     5da:	95 0b       	sbc	r25, r21
     5dc:	a6 0b       	sbc	r26, r22
     5de:	b7 0b       	sbc	r27, r23
     5e0:	82 1b       	sub	r24, r18
     5e2:	91 09       	sbc	r25, r1
     5e4:	a1 09       	sbc	r26, r1
     5e6:	b1 09       	sbc	r27, r1
     5e8:	00 97       	sbiw	r24, 0x00	; 0
     5ea:	a1 05       	cpc	r26, r1
     5ec:	b1 05       	cpc	r27, r1
     5ee:	61 f4       	brne	.+24     	; 0x608 <__udivdi3+0x3de>
     5f0:	64 01       	movw	r12, r8
     5f2:	53 01       	movw	r10, r6
     5f4:	a2 18       	sub	r10, r2
     5f6:	b3 08       	sbc	r11, r3
     5f8:	c4 08       	sbc	r12, r4
     5fa:	d5 08       	sbc	r13, r5
     5fc:	31 e0       	ldi	r19, 0x01	; 1
     5fe:	63 2e       	mov	r6, r19
     600:	71 2c       	mov	r7, r1
     602:	81 2c       	mov	r8, r1
     604:	91 2c       	mov	r9, r1
     606:	1e c1       	rjmp	.+572    	; 0x844 <__udivdi3+0x61a>
     608:	6f 96       	adiw	r28, 0x1f	; 31
     60a:	8f af       	std	Y+63, r24	; 0x3f
     60c:	6f 97       	sbiw	r28, 0x1f	; 31
     60e:	08 2e       	mov	r0, r24
     610:	04 c0       	rjmp	.+8      	; 0x61a <__udivdi3+0x3f0>
     612:	22 0c       	add	r2, r2
     614:	33 1c       	adc	r3, r3
     616:	44 1c       	adc	r4, r4
     618:	55 1c       	adc	r5, r5
     61a:	0a 94       	dec	r0
     61c:	d2 f7       	brpl	.-12     	; 0x612 <__udivdi3+0x3e8>
     61e:	ee 2d       	mov	r30, r14
     620:	e8 1b       	sub	r30, r24
     622:	64 01       	movw	r12, r8
     624:	53 01       	movw	r10, r6
     626:	0e 2e       	mov	r0, r30
     628:	04 c0       	rjmp	.+8      	; 0x632 <__udivdi3+0x408>
     62a:	d6 94       	lsr	r13
     62c:	c7 94       	ror	r12
     62e:	b7 94       	ror	r11
     630:	a7 94       	ror	r10
     632:	0a 94       	dec	r0
     634:	d2 f7       	brpl	.-12     	; 0x62a <__udivdi3+0x400>
     636:	a4 01       	movw	r20, r8
     638:	93 01       	movw	r18, r6
     63a:	6f 96       	adiw	r28, 0x1f	; 31
     63c:	0f ac       	ldd	r0, Y+63	; 0x3f
     63e:	6f 97       	sbiw	r28, 0x1f	; 31
     640:	04 c0       	rjmp	.+8      	; 0x64a <__udivdi3+0x420>
     642:	22 0f       	add	r18, r18
     644:	33 1f       	adc	r19, r19
     646:	44 1f       	adc	r20, r20
     648:	55 1f       	adc	r21, r21
     64a:	0a 94       	dec	r0
     64c:	d2 f7       	brpl	.-12     	; 0x642 <__udivdi3+0x418>
     64e:	6d a4       	ldd	r6, Y+45	; 0x2d
     650:	7e a4       	ldd	r7, Y+46	; 0x2e
     652:	8f a4       	ldd	r8, Y+47	; 0x2f
     654:	98 a8       	ldd	r9, Y+48	; 0x30
     656:	0e 2e       	mov	r0, r30
     658:	04 c0       	rjmp	.+8      	; 0x662 <__udivdi3+0x438>
     65a:	96 94       	lsr	r9
     65c:	87 94       	ror	r8
     65e:	77 94       	ror	r7
     660:	67 94       	ror	r6
     662:	0a 94       	dec	r0
     664:	d2 f7       	brpl	.-12     	; 0x65a <__udivdi3+0x430>
     666:	84 01       	movw	r16, r8
     668:	73 01       	movw	r14, r6
     66a:	e2 2a       	or	r14, r18
     66c:	f3 2a       	or	r15, r19
     66e:	04 2b       	or	r16, r20
     670:	15 2b       	or	r17, r21
     672:	e9 a6       	std	Y+41, r14	; 0x29
     674:	fa a6       	std	Y+42, r15	; 0x2a
     676:	0b a7       	std	Y+43, r16	; 0x2b
     678:	1c a7       	std	Y+44, r17	; 0x2c
     67a:	32 01       	movw	r6, r4
     67c:	88 24       	eor	r8, r8
     67e:	99 24       	eor	r9, r9
     680:	92 01       	movw	r18, r4
     682:	81 01       	movw	r16, r2
     684:	20 70       	andi	r18, 0x00	; 0
     686:	30 70       	andi	r19, 0x00	; 0
     688:	21 96       	adiw	r28, 0x01	; 1
     68a:	0c af       	std	Y+60, r16	; 0x3c
     68c:	1d af       	std	Y+61, r17	; 0x3d
     68e:	2e af       	std	Y+62, r18	; 0x3e
     690:	3f af       	std	Y+63, r19	; 0x3f
     692:	21 97       	sbiw	r28, 0x01	; 1
     694:	c6 01       	movw	r24, r12
     696:	b5 01       	movw	r22, r10
     698:	a4 01       	movw	r20, r8
     69a:	93 01       	movw	r18, r6
     69c:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     6a0:	7b 01       	movw	r14, r22
     6a2:	8c 01       	movw	r16, r24
     6a4:	c6 01       	movw	r24, r12
     6a6:	b5 01       	movw	r22, r10
     6a8:	a4 01       	movw	r20, r8
     6aa:	93 01       	movw	r18, r6
     6ac:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     6b0:	c9 01       	movw	r24, r18
     6b2:	da 01       	movw	r26, r20
     6b4:	25 96       	adiw	r28, 0x05	; 5
     6b6:	8c af       	std	Y+60, r24	; 0x3c
     6b8:	9d af       	std	Y+61, r25	; 0x3d
     6ba:	ae af       	std	Y+62, r26	; 0x3e
     6bc:	bf af       	std	Y+63, r27	; 0x3f
     6be:	25 97       	sbiw	r28, 0x05	; 5
     6c0:	bc 01       	movw	r22, r24
     6c2:	cd 01       	movw	r24, r26
     6c4:	21 96       	adiw	r28, 0x01	; 1
     6c6:	2c ad       	ldd	r18, Y+60	; 0x3c
     6c8:	3d ad       	ldd	r19, Y+61	; 0x3d
     6ca:	4e ad       	ldd	r20, Y+62	; 0x3e
     6cc:	5f ad       	ldd	r21, Y+63	; 0x3f
     6ce:	21 97       	sbiw	r28, 0x01	; 1
     6d0:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     6d4:	9b 01       	movw	r18, r22
     6d6:	ac 01       	movw	r20, r24
     6d8:	87 01       	movw	r16, r14
     6da:	ff 24       	eor	r15, r15
     6dc:	ee 24       	eor	r14, r14
     6de:	a9 a4       	ldd	r10, Y+41	; 0x29
     6e0:	ba a4       	ldd	r11, Y+42	; 0x2a
     6e2:	cb a4       	ldd	r12, Y+43	; 0x2b
     6e4:	dc a4       	ldd	r13, Y+44	; 0x2c
     6e6:	c6 01       	movw	r24, r12
     6e8:	aa 27       	eor	r26, r26
     6ea:	bb 27       	eor	r27, r27
     6ec:	5c 01       	movw	r10, r24
     6ee:	6d 01       	movw	r12, r26
     6f0:	ae 28       	or	r10, r14
     6f2:	bf 28       	or	r11, r15
     6f4:	c0 2a       	or	r12, r16
     6f6:	d1 2a       	or	r13, r17
     6f8:	a2 16       	cp	r10, r18
     6fa:	b3 06       	cpc	r11, r19
     6fc:	c4 06       	cpc	r12, r20
     6fe:	d5 06       	cpc	r13, r21
     700:	60 f5       	brcc	.+88     	; 0x75a <__udivdi3+0x530>
     702:	25 96       	adiw	r28, 0x05	; 5
     704:	6c ad       	ldd	r22, Y+60	; 0x3c
     706:	7d ad       	ldd	r23, Y+61	; 0x3d
     708:	8e ad       	ldd	r24, Y+62	; 0x3e
     70a:	9f ad       	ldd	r25, Y+63	; 0x3f
     70c:	25 97       	sbiw	r28, 0x05	; 5
     70e:	61 50       	subi	r22, 0x01	; 1
     710:	70 40       	sbci	r23, 0x00	; 0
     712:	80 40       	sbci	r24, 0x00	; 0
     714:	90 40       	sbci	r25, 0x00	; 0
     716:	25 96       	adiw	r28, 0x05	; 5
     718:	6c af       	std	Y+60, r22	; 0x3c
     71a:	7d af       	std	Y+61, r23	; 0x3d
     71c:	8e af       	std	Y+62, r24	; 0x3e
     71e:	9f af       	std	Y+63, r25	; 0x3f
     720:	25 97       	sbiw	r28, 0x05	; 5
     722:	a2 0c       	add	r10, r2
     724:	b3 1c       	adc	r11, r3
     726:	c4 1c       	adc	r12, r4
     728:	d5 1c       	adc	r13, r5
     72a:	a2 14       	cp	r10, r2
     72c:	b3 04       	cpc	r11, r3
     72e:	c4 04       	cpc	r12, r4
     730:	d5 04       	cpc	r13, r5
     732:	98 f0       	brcs	.+38     	; 0x75a <__udivdi3+0x530>
     734:	a2 16       	cp	r10, r18
     736:	b3 06       	cpc	r11, r19
     738:	c4 06       	cpc	r12, r20
     73a:	d5 06       	cpc	r13, r21
     73c:	70 f4       	brcc	.+28     	; 0x75a <__udivdi3+0x530>
     73e:	61 50       	subi	r22, 0x01	; 1
     740:	70 40       	sbci	r23, 0x00	; 0
     742:	80 40       	sbci	r24, 0x00	; 0
     744:	90 40       	sbci	r25, 0x00	; 0
     746:	25 96       	adiw	r28, 0x05	; 5
     748:	6c af       	std	Y+60, r22	; 0x3c
     74a:	7d af       	std	Y+61, r23	; 0x3d
     74c:	8e af       	std	Y+62, r24	; 0x3e
     74e:	9f af       	std	Y+63, r25	; 0x3f
     750:	25 97       	sbiw	r28, 0x05	; 5
     752:	a2 0c       	add	r10, r2
     754:	b3 1c       	adc	r11, r3
     756:	c4 1c       	adc	r12, r4
     758:	d5 1c       	adc	r13, r5
     75a:	a2 1a       	sub	r10, r18
     75c:	b3 0a       	sbc	r11, r19
     75e:	c4 0a       	sbc	r12, r20
     760:	d5 0a       	sbc	r13, r21
     762:	c6 01       	movw	r24, r12
     764:	b5 01       	movw	r22, r10
     766:	a4 01       	movw	r20, r8
     768:	93 01       	movw	r18, r6
     76a:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     76e:	7b 01       	movw	r14, r22
     770:	8c 01       	movw	r16, r24
     772:	c6 01       	movw	r24, r12
     774:	b5 01       	movw	r22, r10
     776:	a4 01       	movw	r20, r8
     778:	93 01       	movw	r18, r6
     77a:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     77e:	c9 01       	movw	r24, r18
     780:	da 01       	movw	r26, r20
     782:	3c 01       	movw	r6, r24
     784:	4d 01       	movw	r8, r26
     786:	c4 01       	movw	r24, r8
     788:	b3 01       	movw	r22, r6
     78a:	21 96       	adiw	r28, 0x01	; 1
     78c:	2c ad       	ldd	r18, Y+60	; 0x3c
     78e:	3d ad       	ldd	r19, Y+61	; 0x3d
     790:	4e ad       	ldd	r20, Y+62	; 0x3e
     792:	5f ad       	ldd	r21, Y+63	; 0x3f
     794:	21 97       	sbiw	r28, 0x01	; 1
     796:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     79a:	9b 01       	movw	r18, r22
     79c:	ac 01       	movw	r20, r24
     79e:	87 01       	movw	r16, r14
     7a0:	ff 24       	eor	r15, r15
     7a2:	ee 24       	eor	r14, r14
     7a4:	89 a5       	ldd	r24, Y+41	; 0x29
     7a6:	9a a5       	ldd	r25, Y+42	; 0x2a
     7a8:	ab a5       	ldd	r26, Y+43	; 0x2b
     7aa:	bc a5       	ldd	r27, Y+44	; 0x2c
     7ac:	a0 70       	andi	r26, 0x00	; 0
     7ae:	b0 70       	andi	r27, 0x00	; 0
     7b0:	57 01       	movw	r10, r14
     7b2:	68 01       	movw	r12, r16
     7b4:	a8 2a       	or	r10, r24
     7b6:	b9 2a       	or	r11, r25
     7b8:	ca 2a       	or	r12, r26
     7ba:	db 2a       	or	r13, r27
     7bc:	a2 16       	cp	r10, r18
     7be:	b3 06       	cpc	r11, r19
     7c0:	c4 06       	cpc	r12, r20
     7c2:	d5 06       	cpc	r13, r21
     7c4:	e0 f4       	brcc	.+56     	; 0x7fe <__udivdi3+0x5d4>
     7c6:	08 94       	sec
     7c8:	61 08       	sbc	r6, r1
     7ca:	71 08       	sbc	r7, r1
     7cc:	81 08       	sbc	r8, r1
     7ce:	91 08       	sbc	r9, r1
     7d0:	a2 0c       	add	r10, r2
     7d2:	b3 1c       	adc	r11, r3
     7d4:	c4 1c       	adc	r12, r4
     7d6:	d5 1c       	adc	r13, r5
     7d8:	a2 14       	cp	r10, r2
     7da:	b3 04       	cpc	r11, r3
     7dc:	c4 04       	cpc	r12, r4
     7de:	d5 04       	cpc	r13, r5
     7e0:	70 f0       	brcs	.+28     	; 0x7fe <__udivdi3+0x5d4>
     7e2:	a2 16       	cp	r10, r18
     7e4:	b3 06       	cpc	r11, r19
     7e6:	c4 06       	cpc	r12, r20
     7e8:	d5 06       	cpc	r13, r21
     7ea:	48 f4       	brcc	.+18     	; 0x7fe <__udivdi3+0x5d4>
     7ec:	08 94       	sec
     7ee:	61 08       	sbc	r6, r1
     7f0:	71 08       	sbc	r7, r1
     7f2:	81 08       	sbc	r8, r1
     7f4:	91 08       	sbc	r9, r1
     7f6:	a2 0c       	add	r10, r2
     7f8:	b3 1c       	adc	r11, r3
     7fa:	c4 1c       	adc	r12, r4
     7fc:	d5 1c       	adc	r13, r5
     7fe:	8d a5       	ldd	r24, Y+45	; 0x2d
     800:	9e a5       	ldd	r25, Y+46	; 0x2e
     802:	af a5       	ldd	r26, Y+47	; 0x2f
     804:	b8 a9       	ldd	r27, Y+48	; 0x30
     806:	6f 96       	adiw	r28, 0x1f	; 31
     808:	0f ac       	ldd	r0, Y+63	; 0x3f
     80a:	6f 97       	sbiw	r28, 0x1f	; 31
     80c:	04 c0       	rjmp	.+8      	; 0x816 <__udivdi3+0x5ec>
     80e:	88 0f       	add	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	aa 1f       	adc	r26, r26
     814:	bb 1f       	adc	r27, r27
     816:	0a 94       	dec	r0
     818:	d2 f7       	brpl	.-12     	; 0x80e <__udivdi3+0x5e4>
     81a:	8d a7       	std	Y+45, r24	; 0x2d
     81c:	9e a7       	std	Y+46, r25	; 0x2e
     81e:	af a7       	std	Y+47, r26	; 0x2f
     820:	b8 ab       	std	Y+48, r27	; 0x30
     822:	a2 1a       	sub	r10, r18
     824:	b3 0a       	sbc	r11, r19
     826:	c4 0a       	sbc	r12, r20
     828:	d5 0a       	sbc	r13, r21
     82a:	25 96       	adiw	r28, 0x05	; 5
     82c:	ec ac       	ldd	r14, Y+60	; 0x3c
     82e:	fd ac       	ldd	r15, Y+61	; 0x3d
     830:	0e ad       	ldd	r16, Y+62	; 0x3e
     832:	1f ad       	ldd	r17, Y+63	; 0x3f
     834:	25 97       	sbiw	r28, 0x05	; 5
     836:	d7 01       	movw	r26, r14
     838:	99 27       	eor	r25, r25
     83a:	88 27       	eor	r24, r24
     83c:	68 2a       	or	r6, r24
     83e:	79 2a       	or	r7, r25
     840:	8a 2a       	or	r8, r26
     842:	9b 2a       	or	r9, r27
     844:	82 01       	movw	r16, r4
     846:	22 27       	eor	r18, r18
     848:	33 27       	eor	r19, r19
     84a:	29 96       	adiw	r28, 0x09	; 9
     84c:	0c af       	std	Y+60, r16	; 0x3c
     84e:	1d af       	std	Y+61, r17	; 0x3d
     850:	2e af       	std	Y+62, r18	; 0x3e
     852:	3f af       	std	Y+63, r19	; 0x3f
     854:	29 97       	sbiw	r28, 0x09	; 9
     856:	a2 01       	movw	r20, r4
     858:	91 01       	movw	r18, r2
     85a:	40 70       	andi	r20, 0x00	; 0
     85c:	50 70       	andi	r21, 0x00	; 0
     85e:	2d 96       	adiw	r28, 0x0d	; 13
     860:	2c af       	std	Y+60, r18	; 0x3c
     862:	3d af       	std	Y+61, r19	; 0x3d
     864:	4e af       	std	Y+62, r20	; 0x3e
     866:	5f af       	std	Y+63, r21	; 0x3f
     868:	2d 97       	sbiw	r28, 0x0d	; 13
     86a:	c6 01       	movw	r24, r12
     86c:	b5 01       	movw	r22, r10
     86e:	29 96       	adiw	r28, 0x09	; 9
     870:	2c ad       	ldd	r18, Y+60	; 0x3c
     872:	3d ad       	ldd	r19, Y+61	; 0x3d
     874:	4e ad       	ldd	r20, Y+62	; 0x3e
     876:	5f ad       	ldd	r21, Y+63	; 0x3f
     878:	29 97       	sbiw	r28, 0x09	; 9
     87a:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     87e:	7b 01       	movw	r14, r22
     880:	8c 01       	movw	r16, r24
     882:	c6 01       	movw	r24, r12
     884:	b5 01       	movw	r22, r10
     886:	29 96       	adiw	r28, 0x09	; 9
     888:	2c ad       	ldd	r18, Y+60	; 0x3c
     88a:	3d ad       	ldd	r19, Y+61	; 0x3d
     88c:	4e ad       	ldd	r20, Y+62	; 0x3e
     88e:	5f ad       	ldd	r21, Y+63	; 0x3f
     890:	29 97       	sbiw	r28, 0x09	; 9
     892:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     896:	c9 01       	movw	r24, r18
     898:	da 01       	movw	r26, r20
     89a:	61 96       	adiw	r28, 0x11	; 17
     89c:	8c af       	std	Y+60, r24	; 0x3c
     89e:	9d af       	std	Y+61, r25	; 0x3d
     8a0:	ae af       	std	Y+62, r26	; 0x3e
     8a2:	bf af       	std	Y+63, r27	; 0x3f
     8a4:	61 97       	sbiw	r28, 0x11	; 17
     8a6:	bc 01       	movw	r22, r24
     8a8:	cd 01       	movw	r24, r26
     8aa:	2d 96       	adiw	r28, 0x0d	; 13
     8ac:	2c ad       	ldd	r18, Y+60	; 0x3c
     8ae:	3d ad       	ldd	r19, Y+61	; 0x3d
     8b0:	4e ad       	ldd	r20, Y+62	; 0x3e
     8b2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8b4:	2d 97       	sbiw	r28, 0x0d	; 13
     8b6:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     8ba:	9b 01       	movw	r18, r22
     8bc:	ac 01       	movw	r20, r24
     8be:	87 01       	movw	r16, r14
     8c0:	ff 24       	eor	r15, r15
     8c2:	ee 24       	eor	r14, r14
     8c4:	ad a4       	ldd	r10, Y+45	; 0x2d
     8c6:	be a4       	ldd	r11, Y+46	; 0x2e
     8c8:	cf a4       	ldd	r12, Y+47	; 0x2f
     8ca:	d8 a8       	ldd	r13, Y+48	; 0x30
     8cc:	c6 01       	movw	r24, r12
     8ce:	aa 27       	eor	r26, r26
     8d0:	bb 27       	eor	r27, r27
     8d2:	57 01       	movw	r10, r14
     8d4:	68 01       	movw	r12, r16
     8d6:	a8 2a       	or	r10, r24
     8d8:	b9 2a       	or	r11, r25
     8da:	ca 2a       	or	r12, r26
     8dc:	db 2a       	or	r13, r27
     8de:	a2 16       	cp	r10, r18
     8e0:	b3 06       	cpc	r11, r19
     8e2:	c4 06       	cpc	r12, r20
     8e4:	d5 06       	cpc	r13, r21
     8e6:	60 f5       	brcc	.+88     	; 0x940 <__stack+0xe1>
     8e8:	61 96       	adiw	r28, 0x11	; 17
     8ea:	6c ad       	ldd	r22, Y+60	; 0x3c
     8ec:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ee:	8e ad       	ldd	r24, Y+62	; 0x3e
     8f0:	9f ad       	ldd	r25, Y+63	; 0x3f
     8f2:	61 97       	sbiw	r28, 0x11	; 17
     8f4:	61 50       	subi	r22, 0x01	; 1
     8f6:	70 40       	sbci	r23, 0x00	; 0
     8f8:	80 40       	sbci	r24, 0x00	; 0
     8fa:	90 40       	sbci	r25, 0x00	; 0
     8fc:	61 96       	adiw	r28, 0x11	; 17
     8fe:	6c af       	std	Y+60, r22	; 0x3c
     900:	7d af       	std	Y+61, r23	; 0x3d
     902:	8e af       	std	Y+62, r24	; 0x3e
     904:	9f af       	std	Y+63, r25	; 0x3f
     906:	61 97       	sbiw	r28, 0x11	; 17
     908:	a2 0c       	add	r10, r2
     90a:	b3 1c       	adc	r11, r3
     90c:	c4 1c       	adc	r12, r4
     90e:	d5 1c       	adc	r13, r5
     910:	a2 14       	cp	r10, r2
     912:	b3 04       	cpc	r11, r3
     914:	c4 04       	cpc	r12, r4
     916:	d5 04       	cpc	r13, r5
     918:	98 f0       	brcs	.+38     	; 0x940 <__stack+0xe1>
     91a:	a2 16       	cp	r10, r18
     91c:	b3 06       	cpc	r11, r19
     91e:	c4 06       	cpc	r12, r20
     920:	d5 06       	cpc	r13, r21
     922:	70 f4       	brcc	.+28     	; 0x940 <__stack+0xe1>
     924:	61 50       	subi	r22, 0x01	; 1
     926:	70 40       	sbci	r23, 0x00	; 0
     928:	80 40       	sbci	r24, 0x00	; 0
     92a:	90 40       	sbci	r25, 0x00	; 0
     92c:	61 96       	adiw	r28, 0x11	; 17
     92e:	6c af       	std	Y+60, r22	; 0x3c
     930:	7d af       	std	Y+61, r23	; 0x3d
     932:	8e af       	std	Y+62, r24	; 0x3e
     934:	9f af       	std	Y+63, r25	; 0x3f
     936:	61 97       	sbiw	r28, 0x11	; 17
     938:	a2 0c       	add	r10, r2
     93a:	b3 1c       	adc	r11, r3
     93c:	c4 1c       	adc	r12, r4
     93e:	d5 1c       	adc	r13, r5
     940:	a2 1a       	sub	r10, r18
     942:	b3 0a       	sbc	r11, r19
     944:	c4 0a       	sbc	r12, r20
     946:	d5 0a       	sbc	r13, r21
     948:	c6 01       	movw	r24, r12
     94a:	b5 01       	movw	r22, r10
     94c:	29 96       	adiw	r28, 0x09	; 9
     94e:	2c ad       	ldd	r18, Y+60	; 0x3c
     950:	3d ad       	ldd	r19, Y+61	; 0x3d
     952:	4e ad       	ldd	r20, Y+62	; 0x3e
     954:	5f ad       	ldd	r21, Y+63	; 0x3f
     956:	29 97       	sbiw	r28, 0x09	; 9
     958:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     95c:	7b 01       	movw	r14, r22
     95e:	8c 01       	movw	r16, r24
     960:	c6 01       	movw	r24, r12
     962:	b5 01       	movw	r22, r10
     964:	29 96       	adiw	r28, 0x09	; 9
     966:	2c ad       	ldd	r18, Y+60	; 0x3c
     968:	3d ad       	ldd	r19, Y+61	; 0x3d
     96a:	4e ad       	ldd	r20, Y+62	; 0x3e
     96c:	5f ad       	ldd	r21, Y+63	; 0x3f
     96e:	29 97       	sbiw	r28, 0x09	; 9
     970:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     974:	c9 01       	movw	r24, r18
     976:	da 01       	movw	r26, r20
     978:	5c 01       	movw	r10, r24
     97a:	6d 01       	movw	r12, r26
     97c:	c6 01       	movw	r24, r12
     97e:	b5 01       	movw	r22, r10
     980:	2d 96       	adiw	r28, 0x0d	; 13
     982:	2c ad       	ldd	r18, Y+60	; 0x3c
     984:	3d ad       	ldd	r19, Y+61	; 0x3d
     986:	4e ad       	ldd	r20, Y+62	; 0x3e
     988:	5f ad       	ldd	r21, Y+63	; 0x3f
     98a:	2d 97       	sbiw	r28, 0x0d	; 13
     98c:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     990:	9b 01       	movw	r18, r22
     992:	ac 01       	movw	r20, r24
     994:	87 01       	movw	r16, r14
     996:	ff 24       	eor	r15, r15
     998:	ee 24       	eor	r14, r14
     99a:	8d a5       	ldd	r24, Y+45	; 0x2d
     99c:	9e a5       	ldd	r25, Y+46	; 0x2e
     99e:	af a5       	ldd	r26, Y+47	; 0x2f
     9a0:	b8 a9       	ldd	r27, Y+48	; 0x30
     9a2:	a0 70       	andi	r26, 0x00	; 0
     9a4:	b0 70       	andi	r27, 0x00	; 0
     9a6:	e8 2a       	or	r14, r24
     9a8:	f9 2a       	or	r15, r25
     9aa:	0a 2b       	or	r16, r26
     9ac:	1b 2b       	or	r17, r27
     9ae:	e2 16       	cp	r14, r18
     9b0:	f3 06       	cpc	r15, r19
     9b2:	04 07       	cpc	r16, r20
     9b4:	15 07       	cpc	r17, r21
     9b6:	c0 f4       	brcc	.+48     	; 0x9e8 <__stack+0x189>
     9b8:	08 94       	sec
     9ba:	a1 08       	sbc	r10, r1
     9bc:	b1 08       	sbc	r11, r1
     9be:	c1 08       	sbc	r12, r1
     9c0:	d1 08       	sbc	r13, r1
     9c2:	e2 0c       	add	r14, r2
     9c4:	f3 1c       	adc	r15, r3
     9c6:	04 1d       	adc	r16, r4
     9c8:	15 1d       	adc	r17, r5
     9ca:	e2 14       	cp	r14, r2
     9cc:	f3 04       	cpc	r15, r3
     9ce:	04 05       	cpc	r16, r4
     9d0:	15 05       	cpc	r17, r5
     9d2:	50 f0       	brcs	.+20     	; 0x9e8 <__stack+0x189>
     9d4:	e2 16       	cp	r14, r18
     9d6:	f3 06       	cpc	r15, r19
     9d8:	04 07       	cpc	r16, r20
     9da:	15 07       	cpc	r17, r21
     9dc:	28 f4       	brcc	.+10     	; 0x9e8 <__stack+0x189>
     9de:	08 94       	sec
     9e0:	a1 08       	sbc	r10, r1
     9e2:	b1 08       	sbc	r11, r1
     9e4:	c1 08       	sbc	r12, r1
     9e6:	d1 08       	sbc	r13, r1
     9e8:	61 96       	adiw	r28, 0x11	; 17
     9ea:	ec ac       	ldd	r14, Y+60	; 0x3c
     9ec:	fd ac       	ldd	r15, Y+61	; 0x3d
     9ee:	0e ad       	ldd	r16, Y+62	; 0x3e
     9f0:	1f ad       	ldd	r17, Y+63	; 0x3f
     9f2:	61 97       	sbiw	r28, 0x11	; 17
     9f4:	d7 01       	movw	r26, r14
     9f6:	99 27       	eor	r25, r25
     9f8:	88 27       	eor	r24, r24
     9fa:	96 01       	movw	r18, r12
     9fc:	85 01       	movw	r16, r10
     9fe:	08 2b       	or	r16, r24
     a00:	19 2b       	or	r17, r25
     a02:	2a 2b       	or	r18, r26
     a04:	3b 2b       	or	r19, r27
     a06:	09 ab       	std	Y+49, r16	; 0x31
     a08:	1a ab       	std	Y+50, r17	; 0x32
     a0a:	2b ab       	std	Y+51, r18	; 0x33
     a0c:	3c ab       	std	Y+52, r19	; 0x34
     a0e:	62 c2       	rjmp	.+1220   	; 0xed4 <__stack+0x675>
     a10:	6e 14       	cp	r6, r14
     a12:	7f 04       	cpc	r7, r15
     a14:	80 06       	cpc	r8, r16
     a16:	91 06       	cpc	r9, r17
     a18:	08 f4       	brcc	.+2      	; 0xa1c <__stack+0x1bd>
     a1a:	51 c2       	rjmp	.+1186   	; 0xebe <__stack+0x65f>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	e2 16       	cp	r14, r18
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	f2 06       	cpc	r15, r18
     a24:	21 e0       	ldi	r18, 0x01	; 1
     a26:	02 07       	cpc	r16, r18
     a28:	20 e0       	ldi	r18, 0x00	; 0
     a2a:	12 07       	cpc	r17, r18
     a2c:	88 f4       	brcc	.+34     	; 0xa50 <__stack+0x1f1>
     a2e:	3f ef       	ldi	r19, 0xFF	; 255
     a30:	e3 16       	cp	r14, r19
     a32:	f1 04       	cpc	r15, r1
     a34:	01 05       	cpc	r16, r1
     a36:	11 05       	cpc	r17, r1
     a38:	31 f0       	breq	.+12     	; 0xa46 <__stack+0x1e7>
     a3a:	28 f0       	brcs	.+10     	; 0xa46 <__stack+0x1e7>
     a3c:	48 e0       	ldi	r20, 0x08	; 8
     a3e:	50 e0       	ldi	r21, 0x00	; 0
     a40:	60 e0       	ldi	r22, 0x00	; 0
     a42:	70 e0       	ldi	r23, 0x00	; 0
     a44:	17 c0       	rjmp	.+46     	; 0xa74 <__stack+0x215>
     a46:	40 e0       	ldi	r20, 0x00	; 0
     a48:	50 e0       	ldi	r21, 0x00	; 0
     a4a:	60 e0       	ldi	r22, 0x00	; 0
     a4c:	70 e0       	ldi	r23, 0x00	; 0
     a4e:	12 c0       	rjmp	.+36     	; 0xa74 <__stack+0x215>
     a50:	40 e0       	ldi	r20, 0x00	; 0
     a52:	e4 16       	cp	r14, r20
     a54:	40 e0       	ldi	r20, 0x00	; 0
     a56:	f4 06       	cpc	r15, r20
     a58:	40 e0       	ldi	r20, 0x00	; 0
     a5a:	04 07       	cpc	r16, r20
     a5c:	41 e0       	ldi	r20, 0x01	; 1
     a5e:	14 07       	cpc	r17, r20
     a60:	28 f0       	brcs	.+10     	; 0xa6c <__stack+0x20d>
     a62:	48 e1       	ldi	r20, 0x18	; 24
     a64:	50 e0       	ldi	r21, 0x00	; 0
     a66:	60 e0       	ldi	r22, 0x00	; 0
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <__stack+0x215>
     a6c:	40 e1       	ldi	r20, 0x10	; 16
     a6e:	50 e0       	ldi	r21, 0x00	; 0
     a70:	60 e0       	ldi	r22, 0x00	; 0
     a72:	70 e0       	ldi	r23, 0x00	; 0
     a74:	d8 01       	movw	r26, r16
     a76:	c7 01       	movw	r24, r14
     a78:	04 2e       	mov	r0, r20
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <__stack+0x225>
     a7c:	b6 95       	lsr	r27
     a7e:	a7 95       	ror	r26
     a80:	97 95       	ror	r25
     a82:	87 95       	ror	r24
     a84:	0a 94       	dec	r0
     a86:	d2 f7       	brpl	.-12     	; 0xa7c <__stack+0x21d>
     a88:	87 57       	subi	r24, 0x77	; 119
     a8a:	9f 4f       	sbci	r25, 0xFF	; 255
     a8c:	dc 01       	movw	r26, r24
     a8e:	2c 91       	ld	r18, X
     a90:	30 e2       	ldi	r19, 0x20	; 32
     a92:	a3 2e       	mov	r10, r19
     a94:	b1 2c       	mov	r11, r1
     a96:	c1 2c       	mov	r12, r1
     a98:	d1 2c       	mov	r13, r1
     a9a:	d6 01       	movw	r26, r12
     a9c:	c5 01       	movw	r24, r10
     a9e:	84 1b       	sub	r24, r20
     aa0:	95 0b       	sbc	r25, r21
     aa2:	a6 0b       	sbc	r26, r22
     aa4:	b7 0b       	sbc	r27, r23
     aa6:	82 1b       	sub	r24, r18
     aa8:	91 09       	sbc	r25, r1
     aaa:	a1 09       	sbc	r26, r1
     aac:	b1 09       	sbc	r27, r1
     aae:	00 97       	sbiw	r24, 0x00	; 0
     ab0:	a1 05       	cpc	r26, r1
     ab2:	b1 05       	cpc	r27, r1
     ab4:	89 f4       	brne	.+34     	; 0xad8 <__stack+0x279>
     ab6:	e6 14       	cp	r14, r6
     ab8:	f7 04       	cpc	r15, r7
     aba:	08 05       	cpc	r16, r8
     abc:	19 05       	cpc	r17, r9
     abe:	08 f4       	brcc	.+2      	; 0xac2 <__stack+0x263>
     ac0:	f2 c1       	rjmp	.+996    	; 0xea6 <__stack+0x647>
     ac2:	6d a4       	ldd	r6, Y+45	; 0x2d
     ac4:	7e a4       	ldd	r7, Y+46	; 0x2e
     ac6:	8f a4       	ldd	r8, Y+47	; 0x2f
     ac8:	98 a8       	ldd	r9, Y+48	; 0x30
     aca:	62 14       	cp	r6, r2
     acc:	73 04       	cpc	r7, r3
     ace:	84 04       	cpc	r8, r4
     ad0:	95 04       	cpc	r9, r5
     ad2:	08 f0       	brcs	.+2      	; 0xad6 <__stack+0x277>
     ad4:	e8 c1       	rjmp	.+976    	; 0xea6 <__stack+0x647>
     ad6:	f3 c1       	rjmp	.+998    	; 0xebe <__stack+0x65f>
     ad8:	6e 96       	adiw	r28, 0x1e	; 30
     ada:	8f af       	std	Y+63, r24	; 0x3f
     adc:	6e 97       	sbiw	r28, 0x1e	; 30
     ade:	08 2e       	mov	r0, r24
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <__stack+0x28b>
     ae2:	ee 0c       	add	r14, r14
     ae4:	ff 1c       	adc	r15, r15
     ae6:	00 1f       	adc	r16, r16
     ae8:	11 1f       	adc	r17, r17
     aea:	0a 94       	dec	r0
     aec:	d2 f7       	brpl	.-12     	; 0xae2 <__stack+0x283>
     aee:	6a 2d       	mov	r22, r10
     af0:	68 1b       	sub	r22, r24
     af2:	d2 01       	movw	r26, r4
     af4:	c1 01       	movw	r24, r2
     af6:	06 2e       	mov	r0, r22
     af8:	04 c0       	rjmp	.+8      	; 0xb02 <__stack+0x2a3>
     afa:	b6 95       	lsr	r27
     afc:	a7 95       	ror	r26
     afe:	97 95       	ror	r25
     b00:	87 95       	ror	r24
     b02:	0a 94       	dec	r0
     b04:	d2 f7       	brpl	.-12     	; 0xafa <__stack+0x29b>
     b06:	5c 01       	movw	r10, r24
     b08:	6d 01       	movw	r12, r26
     b0a:	ae 28       	or	r10, r14
     b0c:	bf 28       	or	r11, r15
     b0e:	c0 2a       	or	r12, r16
     b10:	d1 2a       	or	r13, r17
     b12:	ad a2       	std	Y+37, r10	; 0x25
     b14:	be a2       	std	Y+38, r11	; 0x26
     b16:	cf a2       	std	Y+39, r12	; 0x27
     b18:	d8 a6       	std	Y+40, r13	; 0x28
     b1a:	72 01       	movw	r14, r4
     b1c:	61 01       	movw	r12, r2
     b1e:	6e 96       	adiw	r28, 0x1e	; 30
     b20:	0f ac       	ldd	r0, Y+63	; 0x3f
     b22:	6e 97       	sbiw	r28, 0x1e	; 30
     b24:	04 c0       	rjmp	.+8      	; 0xb2e <__stack+0x2cf>
     b26:	cc 0c       	add	r12, r12
     b28:	dd 1c       	adc	r13, r13
     b2a:	ee 1c       	adc	r14, r14
     b2c:	ff 1c       	adc	r15, r15
     b2e:	0a 94       	dec	r0
     b30:	d2 f7       	brpl	.-12     	; 0xb26 <__stack+0x2c7>
     b32:	c9 a2       	std	Y+33, r12	; 0x21
     b34:	da a2       	std	Y+34, r13	; 0x22
     b36:	eb a2       	std	Y+35, r14	; 0x23
     b38:	fc a2       	std	Y+36, r15	; 0x24
     b3a:	64 01       	movw	r12, r8
     b3c:	53 01       	movw	r10, r6
     b3e:	06 2e       	mov	r0, r22
     b40:	04 c0       	rjmp	.+8      	; 0xb4a <__stack+0x2eb>
     b42:	d6 94       	lsr	r13
     b44:	c7 94       	ror	r12
     b46:	b7 94       	ror	r11
     b48:	a7 94       	ror	r10
     b4a:	0a 94       	dec	r0
     b4c:	d2 f7       	brpl	.-12     	; 0xb42 <__stack+0x2e3>
     b4e:	d4 01       	movw	r26, r8
     b50:	c3 01       	movw	r24, r6
     b52:	6e 96       	adiw	r28, 0x1e	; 30
     b54:	0f ac       	ldd	r0, Y+63	; 0x3f
     b56:	6e 97       	sbiw	r28, 0x1e	; 30
     b58:	04 c0       	rjmp	.+8      	; 0xb62 <__stack+0x303>
     b5a:	88 0f       	add	r24, r24
     b5c:	99 1f       	adc	r25, r25
     b5e:	aa 1f       	adc	r26, r26
     b60:	bb 1f       	adc	r27, r27
     b62:	0a 94       	dec	r0
     b64:	d2 f7       	brpl	.-12     	; 0xb5a <__stack+0x2fb>
     b66:	ed a4       	ldd	r14, Y+45	; 0x2d
     b68:	fe a4       	ldd	r15, Y+46	; 0x2e
     b6a:	0f a5       	ldd	r16, Y+47	; 0x2f
     b6c:	18 a9       	ldd	r17, Y+48	; 0x30
     b6e:	04 c0       	rjmp	.+8      	; 0xb78 <__stack+0x319>
     b70:	16 95       	lsr	r17
     b72:	07 95       	ror	r16
     b74:	f7 94       	ror	r15
     b76:	e7 94       	ror	r14
     b78:	6a 95       	dec	r22
     b7a:	d2 f7       	brpl	.-12     	; 0xb70 <__stack+0x311>
     b7c:	37 01       	movw	r6, r14
     b7e:	48 01       	movw	r8, r16
     b80:	68 2a       	or	r6, r24
     b82:	79 2a       	or	r7, r25
     b84:	8a 2a       	or	r8, r26
     b86:	9b 2a       	or	r9, r27
     b88:	6d 8e       	std	Y+29, r6	; 0x1d
     b8a:	7e 8e       	std	Y+30, r7	; 0x1e
     b8c:	8f 8e       	std	Y+31, r8	; 0x1f
     b8e:	98 a2       	std	Y+32, r9	; 0x20
     b90:	ed a0       	ldd	r14, Y+37	; 0x25
     b92:	fe a0       	ldd	r15, Y+38	; 0x26
     b94:	0f a1       	ldd	r16, Y+39	; 0x27
     b96:	18 a5       	ldd	r17, Y+40	; 0x28
     b98:	38 01       	movw	r6, r16
     b9a:	88 24       	eor	r8, r8
     b9c:	99 24       	eor	r9, r9
     b9e:	98 01       	movw	r18, r16
     ba0:	87 01       	movw	r16, r14
     ba2:	20 70       	andi	r18, 0x00	; 0
     ba4:	30 70       	andi	r19, 0x00	; 0
     ba6:	65 96       	adiw	r28, 0x15	; 21
     ba8:	0c af       	std	Y+60, r16	; 0x3c
     baa:	1d af       	std	Y+61, r17	; 0x3d
     bac:	2e af       	std	Y+62, r18	; 0x3e
     bae:	3f af       	std	Y+63, r19	; 0x3f
     bb0:	65 97       	sbiw	r28, 0x15	; 21
     bb2:	c6 01       	movw	r24, r12
     bb4:	b5 01       	movw	r22, r10
     bb6:	a4 01       	movw	r20, r8
     bb8:	93 01       	movw	r18, r6
     bba:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     bbe:	7b 01       	movw	r14, r22
     bc0:	8c 01       	movw	r16, r24
     bc2:	c6 01       	movw	r24, r12
     bc4:	b5 01       	movw	r22, r10
     bc6:	a4 01       	movw	r20, r8
     bc8:	93 01       	movw	r18, r6
     bca:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     bce:	c9 01       	movw	r24, r18
     bd0:	da 01       	movw	r26, r20
     bd2:	1c 01       	movw	r2, r24
     bd4:	2d 01       	movw	r4, r26
     bd6:	c2 01       	movw	r24, r4
     bd8:	b1 01       	movw	r22, r2
     bda:	65 96       	adiw	r28, 0x15	; 21
     bdc:	2c ad       	ldd	r18, Y+60	; 0x3c
     bde:	3d ad       	ldd	r19, Y+61	; 0x3d
     be0:	4e ad       	ldd	r20, Y+62	; 0x3e
     be2:	5f ad       	ldd	r21, Y+63	; 0x3f
     be4:	65 97       	sbiw	r28, 0x15	; 21
     be6:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     bea:	9b 01       	movw	r18, r22
     bec:	ac 01       	movw	r20, r24
     bee:	87 01       	movw	r16, r14
     bf0:	ff 24       	eor	r15, r15
     bf2:	ee 24       	eor	r14, r14
     bf4:	ad 8c       	ldd	r10, Y+29	; 0x1d
     bf6:	be 8c       	ldd	r11, Y+30	; 0x1e
     bf8:	cf 8c       	ldd	r12, Y+31	; 0x1f
     bfa:	d8 a0       	ldd	r13, Y+32	; 0x20
     bfc:	c6 01       	movw	r24, r12
     bfe:	aa 27       	eor	r26, r26
     c00:	bb 27       	eor	r27, r27
     c02:	57 01       	movw	r10, r14
     c04:	68 01       	movw	r12, r16
     c06:	a8 2a       	or	r10, r24
     c08:	b9 2a       	or	r11, r25
     c0a:	ca 2a       	or	r12, r26
     c0c:	db 2a       	or	r13, r27
     c0e:	a2 16       	cp	r10, r18
     c10:	b3 06       	cpc	r11, r19
     c12:	c4 06       	cpc	r12, r20
     c14:	d5 06       	cpc	r13, r21
     c16:	00 f5       	brcc	.+64     	; 0xc58 <__stack+0x3f9>
     c18:	08 94       	sec
     c1a:	21 08       	sbc	r2, r1
     c1c:	31 08       	sbc	r3, r1
     c1e:	41 08       	sbc	r4, r1
     c20:	51 08       	sbc	r5, r1
     c22:	ed a0       	ldd	r14, Y+37	; 0x25
     c24:	fe a0       	ldd	r15, Y+38	; 0x26
     c26:	0f a1       	ldd	r16, Y+39	; 0x27
     c28:	18 a5       	ldd	r17, Y+40	; 0x28
     c2a:	ae 0c       	add	r10, r14
     c2c:	bf 1c       	adc	r11, r15
     c2e:	c0 1e       	adc	r12, r16
     c30:	d1 1e       	adc	r13, r17
     c32:	ae 14       	cp	r10, r14
     c34:	bf 04       	cpc	r11, r15
     c36:	c0 06       	cpc	r12, r16
     c38:	d1 06       	cpc	r13, r17
     c3a:	70 f0       	brcs	.+28     	; 0xc58 <__stack+0x3f9>
     c3c:	a2 16       	cp	r10, r18
     c3e:	b3 06       	cpc	r11, r19
     c40:	c4 06       	cpc	r12, r20
     c42:	d5 06       	cpc	r13, r21
     c44:	48 f4       	brcc	.+18     	; 0xc58 <__stack+0x3f9>
     c46:	08 94       	sec
     c48:	21 08       	sbc	r2, r1
     c4a:	31 08       	sbc	r3, r1
     c4c:	41 08       	sbc	r4, r1
     c4e:	51 08       	sbc	r5, r1
     c50:	ae 0c       	add	r10, r14
     c52:	bf 1c       	adc	r11, r15
     c54:	c0 1e       	adc	r12, r16
     c56:	d1 1e       	adc	r13, r17
     c58:	a2 1a       	sub	r10, r18
     c5a:	b3 0a       	sbc	r11, r19
     c5c:	c4 0a       	sbc	r12, r20
     c5e:	d5 0a       	sbc	r13, r21
     c60:	c6 01       	movw	r24, r12
     c62:	b5 01       	movw	r22, r10
     c64:	a4 01       	movw	r20, r8
     c66:	93 01       	movw	r18, r6
     c68:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     c6c:	7b 01       	movw	r14, r22
     c6e:	8c 01       	movw	r16, r24
     c70:	c6 01       	movw	r24, r12
     c72:	b5 01       	movw	r22, r10
     c74:	a4 01       	movw	r20, r8
     c76:	93 01       	movw	r18, r6
     c78:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
     c7c:	c9 01       	movw	r24, r18
     c7e:	da 01       	movw	r26, r20
     c80:	3c 01       	movw	r6, r24
     c82:	4d 01       	movw	r8, r26
     c84:	c4 01       	movw	r24, r8
     c86:	b3 01       	movw	r22, r6
     c88:	65 96       	adiw	r28, 0x15	; 21
     c8a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c8c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c8e:	4e ad       	ldd	r20, Y+62	; 0x3e
     c90:	5f ad       	ldd	r21, Y+63	; 0x3f
     c92:	65 97       	sbiw	r28, 0x15	; 21
     c94:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     c98:	9b 01       	movw	r18, r22
     c9a:	ac 01       	movw	r20, r24
     c9c:	87 01       	movw	r16, r14
     c9e:	ff 24       	eor	r15, r15
     ca0:	ee 24       	eor	r14, r14
     ca2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ca4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ca6:	af 8d       	ldd	r26, Y+31	; 0x1f
     ca8:	b8 a1       	ldd	r27, Y+32	; 0x20
     caa:	a0 70       	andi	r26, 0x00	; 0
     cac:	b0 70       	andi	r27, 0x00	; 0
     cae:	57 01       	movw	r10, r14
     cb0:	68 01       	movw	r12, r16
     cb2:	a8 2a       	or	r10, r24
     cb4:	b9 2a       	or	r11, r25
     cb6:	ca 2a       	or	r12, r26
     cb8:	db 2a       	or	r13, r27
     cba:	a2 16       	cp	r10, r18
     cbc:	b3 06       	cpc	r11, r19
     cbe:	c4 06       	cpc	r12, r20
     cc0:	d5 06       	cpc	r13, r21
     cc2:	00 f5       	brcc	.+64     	; 0xd04 <__stack+0x4a5>
     cc4:	08 94       	sec
     cc6:	61 08       	sbc	r6, r1
     cc8:	71 08       	sbc	r7, r1
     cca:	81 08       	sbc	r8, r1
     ccc:	91 08       	sbc	r9, r1
     cce:	6d a1       	ldd	r22, Y+37	; 0x25
     cd0:	7e a1       	ldd	r23, Y+38	; 0x26
     cd2:	8f a1       	ldd	r24, Y+39	; 0x27
     cd4:	98 a5       	ldd	r25, Y+40	; 0x28
     cd6:	a6 0e       	add	r10, r22
     cd8:	b7 1e       	adc	r11, r23
     cda:	c8 1e       	adc	r12, r24
     cdc:	d9 1e       	adc	r13, r25
     cde:	a6 16       	cp	r10, r22
     ce0:	b7 06       	cpc	r11, r23
     ce2:	c8 06       	cpc	r12, r24
     ce4:	d9 06       	cpc	r13, r25
     ce6:	70 f0       	brcs	.+28     	; 0xd04 <__stack+0x4a5>
     ce8:	a2 16       	cp	r10, r18
     cea:	b3 06       	cpc	r11, r19
     cec:	c4 06       	cpc	r12, r20
     cee:	d5 06       	cpc	r13, r21
     cf0:	48 f4       	brcc	.+18     	; 0xd04 <__stack+0x4a5>
     cf2:	08 94       	sec
     cf4:	61 08       	sbc	r6, r1
     cf6:	71 08       	sbc	r7, r1
     cf8:	81 08       	sbc	r8, r1
     cfa:	91 08       	sbc	r9, r1
     cfc:	a6 0e       	add	r10, r22
     cfe:	b7 1e       	adc	r11, r23
     d00:	c8 1e       	adc	r12, r24
     d02:	d9 1e       	adc	r13, r25
     d04:	d6 01       	movw	r26, r12
     d06:	c5 01       	movw	r24, r10
     d08:	82 1b       	sub	r24, r18
     d0a:	93 0b       	sbc	r25, r19
     d0c:	a4 0b       	sbc	r26, r20
     d0e:	b5 0b       	sbc	r27, r21
     d10:	89 8f       	std	Y+25, r24	; 0x19
     d12:	9a 8f       	std	Y+26, r25	; 0x1a
     d14:	ab 8f       	std	Y+27, r26	; 0x1b
     d16:	bc 8f       	std	Y+28, r27	; 0x1c
     d18:	d1 01       	movw	r26, r2
     d1a:	99 27       	eor	r25, r25
     d1c:	88 27       	eor	r24, r24
     d1e:	64 01       	movw	r12, r8
     d20:	53 01       	movw	r10, r6
     d22:	a8 2a       	or	r10, r24
     d24:	b9 2a       	or	r11, r25
     d26:	ca 2a       	or	r12, r26
     d28:	db 2a       	or	r13, r27
     d2a:	a9 aa       	std	Y+49, r10	; 0x31
     d2c:	ba aa       	std	Y+50, r11	; 0x32
     d2e:	cb aa       	std	Y+51, r12	; 0x33
     d30:	dc aa       	std	Y+52, r13	; 0x34
     d32:	86 01       	movw	r16, r12
     d34:	75 01       	movw	r14, r10
     d36:	2f ef       	ldi	r18, 0xFF	; 255
     d38:	3f ef       	ldi	r19, 0xFF	; 255
     d3a:	40 e0       	ldi	r20, 0x00	; 0
     d3c:	50 e0       	ldi	r21, 0x00	; 0
     d3e:	e2 22       	and	r14, r18
     d40:	f3 22       	and	r15, r19
     d42:	04 23       	and	r16, r20
     d44:	15 23       	and	r17, r21
     d46:	a6 01       	movw	r20, r12
     d48:	66 27       	eor	r22, r22
     d4a:	77 27       	eor	r23, r23
     d4c:	6d 96       	adiw	r28, 0x1d	; 29
     d4e:	4c af       	std	Y+60, r20	; 0x3c
     d50:	5d af       	std	Y+61, r21	; 0x3d
     d52:	6e af       	std	Y+62, r22	; 0x3e
     d54:	7f af       	std	Y+63, r23	; 0x3f
     d56:	6d 97       	sbiw	r28, 0x1d	; 29
     d58:	a9 a0       	ldd	r10, Y+33	; 0x21
     d5a:	ba a0       	ldd	r11, Y+34	; 0x22
     d5c:	cb a0       	ldd	r12, Y+35	; 0x23
     d5e:	dc a0       	ldd	r13, Y+36	; 0x24
     d60:	6f ef       	ldi	r22, 0xFF	; 255
     d62:	7f ef       	ldi	r23, 0xFF	; 255
     d64:	80 e0       	ldi	r24, 0x00	; 0
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	a6 22       	and	r10, r22
     d6a:	b7 22       	and	r11, r23
     d6c:	c8 22       	and	r12, r24
     d6e:	d9 22       	and	r13, r25
     d70:	89 a1       	ldd	r24, Y+33	; 0x21
     d72:	9a a1       	ldd	r25, Y+34	; 0x22
     d74:	ab a1       	ldd	r26, Y+35	; 0x23
     d76:	bc a1       	ldd	r27, Y+36	; 0x24
     d78:	1d 01       	movw	r2, r26
     d7a:	44 24       	eor	r4, r4
     d7c:	55 24       	eor	r5, r5
     d7e:	c8 01       	movw	r24, r16
     d80:	b7 01       	movw	r22, r14
     d82:	a6 01       	movw	r20, r12
     d84:	95 01       	movw	r18, r10
     d86:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     d8a:	69 96       	adiw	r28, 0x19	; 25
     d8c:	6c af       	std	Y+60, r22	; 0x3c
     d8e:	7d af       	std	Y+61, r23	; 0x3d
     d90:	8e af       	std	Y+62, r24	; 0x3e
     d92:	9f af       	std	Y+63, r25	; 0x3f
     d94:	69 97       	sbiw	r28, 0x19	; 25
     d96:	c8 01       	movw	r24, r16
     d98:	b7 01       	movw	r22, r14
     d9a:	a2 01       	movw	r20, r4
     d9c:	91 01       	movw	r18, r2
     d9e:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     da2:	3b 01       	movw	r6, r22
     da4:	4c 01       	movw	r8, r24
     da6:	6d 96       	adiw	r28, 0x1d	; 29
     da8:	6c ad       	ldd	r22, Y+60	; 0x3c
     daa:	7d ad       	ldd	r23, Y+61	; 0x3d
     dac:	8e ad       	ldd	r24, Y+62	; 0x3e
     dae:	9f ad       	ldd	r25, Y+63	; 0x3f
     db0:	6d 97       	sbiw	r28, 0x1d	; 29
     db2:	a6 01       	movw	r20, r12
     db4:	95 01       	movw	r18, r10
     db6:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     dba:	7b 01       	movw	r14, r22
     dbc:	8c 01       	movw	r16, r24
     dbe:	6d 96       	adiw	r28, 0x1d	; 29
     dc0:	6c ad       	ldd	r22, Y+60	; 0x3c
     dc2:	7d ad       	ldd	r23, Y+61	; 0x3d
     dc4:	8e ad       	ldd	r24, Y+62	; 0x3e
     dc6:	9f ad       	ldd	r25, Y+63	; 0x3f
     dc8:	6d 97       	sbiw	r28, 0x1d	; 29
     dca:	a2 01       	movw	r20, r4
     dcc:	91 01       	movw	r18, r2
     dce:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
     dd2:	5b 01       	movw	r10, r22
     dd4:	6c 01       	movw	r12, r24
     dd6:	a8 01       	movw	r20, r16
     dd8:	97 01       	movw	r18, r14
     dda:	26 0d       	add	r18, r6
     ddc:	37 1d       	adc	r19, r7
     dde:	48 1d       	adc	r20, r8
     de0:	59 1d       	adc	r21, r9
     de2:	69 96       	adiw	r28, 0x19	; 25
     de4:	6c ac       	ldd	r6, Y+60	; 0x3c
     de6:	7d ac       	ldd	r7, Y+61	; 0x3d
     de8:	8e ac       	ldd	r8, Y+62	; 0x3e
     dea:	9f ac       	ldd	r9, Y+63	; 0x3f
     dec:	69 97       	sbiw	r28, 0x19	; 25
     dee:	c4 01       	movw	r24, r8
     df0:	aa 27       	eor	r26, r26
     df2:	bb 27       	eor	r27, r27
     df4:	28 0f       	add	r18, r24
     df6:	39 1f       	adc	r19, r25
     df8:	4a 1f       	adc	r20, r26
     dfa:	5b 1f       	adc	r21, r27
     dfc:	2e 15       	cp	r18, r14
     dfe:	3f 05       	cpc	r19, r15
     e00:	40 07       	cpc	r20, r16
     e02:	51 07       	cpc	r21, r17
     e04:	48 f4       	brcc	.+18     	; 0xe18 <__stack+0x5b9>
     e06:	e1 2c       	mov	r14, r1
     e08:	f1 2c       	mov	r15, r1
     e0a:	61 e0       	ldi	r22, 0x01	; 1
     e0c:	06 2f       	mov	r16, r22
     e0e:	11 2d       	mov	r17, r1
     e10:	ae 0c       	add	r10, r14
     e12:	bf 1c       	adc	r11, r15
     e14:	c0 1e       	adc	r12, r16
     e16:	d1 1e       	adc	r13, r17
     e18:	ca 01       	movw	r24, r20
     e1a:	aa 27       	eor	r26, r26
     e1c:	bb 27       	eor	r27, r27
     e1e:	bc 01       	movw	r22, r24
     e20:	cd 01       	movw	r24, r26
     e22:	6a 0d       	add	r22, r10
     e24:	7b 1d       	adc	r23, r11
     e26:	8c 1d       	adc	r24, r12
     e28:	9d 1d       	adc	r25, r13
     e2a:	69 8c       	ldd	r6, Y+25	; 0x19
     e2c:	7a 8c       	ldd	r7, Y+26	; 0x1a
     e2e:	8b 8c       	ldd	r8, Y+27	; 0x1b
     e30:	9c 8c       	ldd	r9, Y+28	; 0x1c
     e32:	66 16       	cp	r6, r22
     e34:	77 06       	cpc	r7, r23
     e36:	88 06       	cpc	r8, r24
     e38:	99 06       	cpc	r9, r25
     e3a:	40 f1       	brcs	.+80     	; 0xe8c <__stack+0x62d>
     e3c:	66 15       	cp	r22, r6
     e3e:	77 05       	cpc	r23, r7
     e40:	88 05       	cpc	r24, r8
     e42:	99 05       	cpc	r25, r9
     e44:	09 f0       	breq	.+2      	; 0xe48 <__stack+0x5e9>
     e46:	43 c0       	rjmp	.+134    	; 0xece <__stack+0x66f>
     e48:	d9 01       	movw	r26, r18
     e4a:	99 27       	eor	r25, r25
     e4c:	88 27       	eor	r24, r24
     e4e:	69 96       	adiw	r28, 0x19	; 25
     e50:	2c ad       	ldd	r18, Y+60	; 0x3c
     e52:	3d ad       	ldd	r19, Y+61	; 0x3d
     e54:	4e ad       	ldd	r20, Y+62	; 0x3e
     e56:	5f ad       	ldd	r21, Y+63	; 0x3f
     e58:	69 97       	sbiw	r28, 0x19	; 25
     e5a:	40 70       	andi	r20, 0x00	; 0
     e5c:	50 70       	andi	r21, 0x00	; 0
     e5e:	82 0f       	add	r24, r18
     e60:	93 1f       	adc	r25, r19
     e62:	a4 1f       	adc	r26, r20
     e64:	b5 1f       	adc	r27, r21
     e66:	2d a5       	ldd	r18, Y+45	; 0x2d
     e68:	3e a5       	ldd	r19, Y+46	; 0x2e
     e6a:	4f a5       	ldd	r20, Y+47	; 0x2f
     e6c:	58 a9       	ldd	r21, Y+48	; 0x30
     e6e:	6e 96       	adiw	r28, 0x1e	; 30
     e70:	0f ac       	ldd	r0, Y+63	; 0x3f
     e72:	6e 97       	sbiw	r28, 0x1e	; 30
     e74:	04 c0       	rjmp	.+8      	; 0xe7e <__stack+0x61f>
     e76:	22 0f       	add	r18, r18
     e78:	33 1f       	adc	r19, r19
     e7a:	44 1f       	adc	r20, r20
     e7c:	55 1f       	adc	r21, r21
     e7e:	0a 94       	dec	r0
     e80:	d2 f7       	brpl	.-12     	; 0xe76 <__stack+0x617>
     e82:	28 17       	cp	r18, r24
     e84:	39 07       	cpc	r19, r25
     e86:	4a 07       	cpc	r20, r26
     e88:	5b 07       	cpc	r21, r27
     e8a:	08 f5       	brcc	.+66     	; 0xece <__stack+0x66f>
     e8c:	09 a9       	ldd	r16, Y+49	; 0x31
     e8e:	1a a9       	ldd	r17, Y+50	; 0x32
     e90:	2b a9       	ldd	r18, Y+51	; 0x33
     e92:	3c a9       	ldd	r19, Y+52	; 0x34
     e94:	01 50       	subi	r16, 0x01	; 1
     e96:	10 40       	sbci	r17, 0x00	; 0
     e98:	20 40       	sbci	r18, 0x00	; 0
     e9a:	30 40       	sbci	r19, 0x00	; 0
     e9c:	09 ab       	std	Y+49, r16	; 0x31
     e9e:	1a ab       	std	Y+50, r17	; 0x32
     ea0:	2b ab       	std	Y+51, r18	; 0x33
     ea2:	3c ab       	std	Y+52, r19	; 0x34
     ea4:	14 c0       	rjmp	.+40     	; 0xece <__stack+0x66f>
     ea6:	66 24       	eor	r6, r6
     ea8:	77 24       	eor	r7, r7
     eaa:	43 01       	movw	r8, r6
     eac:	21 e0       	ldi	r18, 0x01	; 1
     eae:	30 e0       	ldi	r19, 0x00	; 0
     eb0:	40 e0       	ldi	r20, 0x00	; 0
     eb2:	50 e0       	ldi	r21, 0x00	; 0
     eb4:	29 ab       	std	Y+49, r18	; 0x31
     eb6:	3a ab       	std	Y+50, r19	; 0x32
     eb8:	4b ab       	std	Y+51, r20	; 0x33
     eba:	5c ab       	std	Y+52, r21	; 0x34
     ebc:	0b c0       	rjmp	.+22     	; 0xed4 <__stack+0x675>
     ebe:	66 24       	eor	r6, r6
     ec0:	77 24       	eor	r7, r7
     ec2:	43 01       	movw	r8, r6
     ec4:	19 aa       	std	Y+49, r1	; 0x31
     ec6:	1a aa       	std	Y+50, r1	; 0x32
     ec8:	1b aa       	std	Y+51, r1	; 0x33
     eca:	1c aa       	std	Y+52, r1	; 0x34
     ecc:	03 c0       	rjmp	.+6      	; 0xed4 <__stack+0x675>
     ece:	66 24       	eor	r6, r6
     ed0:	77 24       	eor	r7, r7
     ed2:	43 01       	movw	r8, r6
     ed4:	fe 01       	movw	r30, r28
     ed6:	71 96       	adiw	r30, 0x11	; 17
     ed8:	88 e0       	ldi	r24, 0x08	; 8
     eda:	df 01       	movw	r26, r30
     edc:	1d 92       	st	X+, r1
     ede:	8a 95       	dec	r24
     ee0:	e9 f7       	brne	.-6      	; 0xedc <__stack+0x67d>
     ee2:	a9 a8       	ldd	r10, Y+49	; 0x31
     ee4:	ba a8       	ldd	r11, Y+50	; 0x32
     ee6:	cb a8       	ldd	r12, Y+51	; 0x33
     ee8:	dc a8       	ldd	r13, Y+52	; 0x34
     eea:	a9 8a       	std	Y+17, r10	; 0x11
     eec:	ba 8a       	std	Y+18, r11	; 0x12
     eee:	cb 8a       	std	Y+19, r12	; 0x13
     ef0:	dc 8a       	std	Y+20, r13	; 0x14
     ef2:	6d 8a       	std	Y+21, r6	; 0x15
     ef4:	7e 8a       	std	Y+22, r7	; 0x16
     ef6:	8f 8a       	std	Y+23, r8	; 0x17
     ef8:	98 8e       	std	Y+24, r9	; 0x18
     efa:	29 a9       	ldd	r18, Y+49	; 0x31
     efc:	3a 89       	ldd	r19, Y+18	; 0x12
     efe:	4b 89       	ldd	r20, Y+19	; 0x13
     f00:	5c 89       	ldd	r21, Y+20	; 0x14
     f02:	66 2d       	mov	r22, r6
     f04:	7e 89       	ldd	r23, Y+22	; 0x16
     f06:	8f 89       	ldd	r24, Y+23	; 0x17
     f08:	98 8d       	ldd	r25, Y+24	; 0x18
     f0a:	c2 5a       	subi	r28, 0xA2	; 162
     f0c:	df 4f       	sbci	r29, 0xFF	; 255
     f0e:	e2 e1       	ldi	r30, 0x12	; 18
     f10:	0c 94 5c 25 	jmp	0x4ab8	; 0x4ab8 <__epilogue_restores__>

00000f14 <__umoddi3>:
     f14:	ab e5       	ldi	r26, 0x5B	; 91
     f16:	b0 e0       	ldi	r27, 0x00	; 0
     f18:	e0 e9       	ldi	r30, 0x90	; 144
     f1a:	f7 e0       	ldi	r31, 0x07	; 7
     f1c:	0c 94 40 25 	jmp	0x4a80	; 0x4a80 <__prologue_saves__>
     f20:	a8 e0       	ldi	r26, 0x08	; 8
     f22:	4e 01       	movw	r8, r28
     f24:	08 94       	sec
     f26:	81 1c       	adc	r8, r1
     f28:	91 1c       	adc	r9, r1
     f2a:	f4 01       	movw	r30, r8
     f2c:	6a 2e       	mov	r6, r26
     f2e:	11 92       	st	Z+, r1
     f30:	6a 94       	dec	r6
     f32:	e9 f7       	brne	.-6      	; 0xf2e <__umoddi3+0x1a>
     f34:	29 83       	std	Y+1, r18	; 0x01
     f36:	3a 83       	std	Y+2, r19	; 0x02
     f38:	4b 83       	std	Y+3, r20	; 0x03
     f3a:	5c 83       	std	Y+4, r21	; 0x04
     f3c:	6d 83       	std	Y+5, r22	; 0x05
     f3e:	7e 83       	std	Y+6, r23	; 0x06
     f40:	8f 83       	std	Y+7, r24	; 0x07
     f42:	98 87       	std	Y+8, r25	; 0x08
     f44:	ce 01       	movw	r24, r28
     f46:	09 96       	adiw	r24, 0x09	; 9
     f48:	fc 01       	movw	r30, r24
     f4a:	11 92       	st	Z+, r1
     f4c:	aa 95       	dec	r26
     f4e:	e9 f7       	brne	.-6      	; 0xf4a <__umoddi3+0x36>
     f50:	a9 86       	std	Y+9, r10	; 0x09
     f52:	ba 86       	std	Y+10, r11	; 0x0a
     f54:	cb 86       	std	Y+11, r12	; 0x0b
     f56:	dc 86       	std	Y+12, r13	; 0x0c
     f58:	ed 86       	std	Y+13, r14	; 0x0d
     f5a:	fe 86       	std	Y+14, r15	; 0x0e
     f5c:	0f 87       	std	Y+15, r16	; 0x0f
     f5e:	18 8b       	std	Y+16, r17	; 0x10
     f60:	29 84       	ldd	r2, Y+9	; 0x09
     f62:	3a 84       	ldd	r3, Y+10	; 0x0a
     f64:	4b 84       	ldd	r4, Y+11	; 0x0b
     f66:	5c 84       	ldd	r5, Y+12	; 0x0c
     f68:	ad 84       	ldd	r10, Y+13	; 0x0d
     f6a:	be 84       	ldd	r11, Y+14	; 0x0e
     f6c:	cf 84       	ldd	r12, Y+15	; 0x0f
     f6e:	d8 88       	ldd	r13, Y+16	; 0x10
     f70:	29 81       	ldd	r18, Y+1	; 0x01
     f72:	3a 81       	ldd	r19, Y+2	; 0x02
     f74:	4b 81       	ldd	r20, Y+3	; 0x03
     f76:	5c 81       	ldd	r21, Y+4	; 0x04
     f78:	69 96       	adiw	r28, 0x19	; 25
     f7a:	2f af       	std	Y+63, r18	; 0x3f
     f7c:	69 97       	sbiw	r28, 0x19	; 25
     f7e:	6a 96       	adiw	r28, 0x1a	; 26
     f80:	3f af       	std	Y+63, r19	; 0x3f
     f82:	6a 97       	sbiw	r28, 0x1a	; 26
     f84:	6b 96       	adiw	r28, 0x1b	; 27
     f86:	4f af       	std	Y+63, r20	; 0x3f
     f88:	6b 97       	sbiw	r28, 0x1b	; 27
     f8a:	6c 96       	adiw	r28, 0x1c	; 28
     f8c:	5f af       	std	Y+63, r21	; 0x3f
     f8e:	6c 97       	sbiw	r28, 0x1c	; 28
     f90:	6c 96       	adiw	r28, 0x1c	; 28
     f92:	6c ac       	ldd	r6, Y+60	; 0x3c
     f94:	7d ac       	ldd	r7, Y+61	; 0x3d
     f96:	8e ac       	ldd	r8, Y+62	; 0x3e
     f98:	9f ac       	ldd	r9, Y+63	; 0x3f
     f9a:	6c 97       	sbiw	r28, 0x1c	; 28
     f9c:	69 aa       	std	Y+49, r6	; 0x31
     f9e:	7a aa       	std	Y+50, r7	; 0x32
     fa0:	8b aa       	std	Y+51, r8	; 0x33
     fa2:	9c aa       	std	Y+52, r9	; 0x34
     fa4:	6d 81       	ldd	r22, Y+5	; 0x05
     fa6:	7e 81       	ldd	r23, Y+6	; 0x06
     fa8:	8f 81       	ldd	r24, Y+7	; 0x07
     faa:	98 85       	ldd	r25, Y+8	; 0x08
     fac:	3b 01       	movw	r6, r22
     fae:	4c 01       	movw	r8, r24
     fb0:	6d aa       	std	Y+53, r6	; 0x35
     fb2:	7e aa       	std	Y+54, r7	; 0x36
     fb4:	8f aa       	std	Y+55, r8	; 0x37
     fb6:	98 ae       	std	Y+56, r9	; 0x38
     fb8:	a1 14       	cp	r10, r1
     fba:	b1 04       	cpc	r11, r1
     fbc:	c1 04       	cpc	r12, r1
     fbe:	d1 04       	cpc	r13, r1
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <__umoddi3+0xb0>
     fc2:	04 c3       	rjmp	.+1544   	; 0x15cc <__umoddi3+0x6b8>
     fc4:	62 14       	cp	r6, r2
     fc6:	73 04       	cpc	r7, r3
     fc8:	84 04       	cpc	r8, r4
     fca:	95 04       	cpc	r9, r5
     fcc:	08 f0       	brcs	.+2      	; 0xfd0 <__umoddi3+0xbc>
     fce:	00 c1       	rjmp	.+512    	; 0x11d0 <__umoddi3+0x2bc>
     fd0:	00 e0       	ldi	r16, 0x00	; 0
     fd2:	20 16       	cp	r2, r16
     fd4:	00 e0       	ldi	r16, 0x00	; 0
     fd6:	30 06       	cpc	r3, r16
     fd8:	01 e0       	ldi	r16, 0x01	; 1
     fda:	40 06       	cpc	r4, r16
     fdc:	00 e0       	ldi	r16, 0x00	; 0
     fde:	50 06       	cpc	r5, r16
     fe0:	88 f4       	brcc	.+34     	; 0x1004 <__umoddi3+0xf0>
     fe2:	1f ef       	ldi	r17, 0xFF	; 255
     fe4:	21 16       	cp	r2, r17
     fe6:	31 04       	cpc	r3, r1
     fe8:	41 04       	cpc	r4, r1
     fea:	51 04       	cpc	r5, r1
     fec:	39 f0       	breq	.+14     	; 0xffc <__umoddi3+0xe8>
     fee:	30 f0       	brcs	.+12     	; 0xffc <__umoddi3+0xe8>
     ff0:	88 e0       	ldi	r24, 0x08	; 8
     ff2:	e8 2e       	mov	r14, r24
     ff4:	f1 2c       	mov	r15, r1
     ff6:	01 2d       	mov	r16, r1
     ff8:	11 2d       	mov	r17, r1
     ffa:	18 c0       	rjmp	.+48     	; 0x102c <__umoddi3+0x118>
     ffc:	ee 24       	eor	r14, r14
     ffe:	ff 24       	eor	r15, r15
    1000:	87 01       	movw	r16, r14
    1002:	14 c0       	rjmp	.+40     	; 0x102c <__umoddi3+0x118>
    1004:	40 e0       	ldi	r20, 0x00	; 0
    1006:	24 16       	cp	r2, r20
    1008:	40 e0       	ldi	r20, 0x00	; 0
    100a:	34 06       	cpc	r3, r20
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	44 06       	cpc	r4, r20
    1010:	41 e0       	ldi	r20, 0x01	; 1
    1012:	54 06       	cpc	r5, r20
    1014:	30 f0       	brcs	.+12     	; 0x1022 <__umoddi3+0x10e>
    1016:	b8 e1       	ldi	r27, 0x18	; 24
    1018:	eb 2e       	mov	r14, r27
    101a:	f1 2c       	mov	r15, r1
    101c:	01 2d       	mov	r16, r1
    101e:	11 2d       	mov	r17, r1
    1020:	05 c0       	rjmp	.+10     	; 0x102c <__umoddi3+0x118>
    1022:	a0 e1       	ldi	r26, 0x10	; 16
    1024:	ea 2e       	mov	r14, r26
    1026:	f1 2c       	mov	r15, r1
    1028:	01 2d       	mov	r16, r1
    102a:	11 2d       	mov	r17, r1
    102c:	d2 01       	movw	r26, r4
    102e:	c1 01       	movw	r24, r2
    1030:	0e 2c       	mov	r0, r14
    1032:	04 c0       	rjmp	.+8      	; 0x103c <__umoddi3+0x128>
    1034:	b6 95       	lsr	r27
    1036:	a7 95       	ror	r26
    1038:	97 95       	ror	r25
    103a:	87 95       	ror	r24
    103c:	0a 94       	dec	r0
    103e:	d2 f7       	brpl	.-12     	; 0x1034 <__umoddi3+0x120>
    1040:	87 57       	subi	r24, 0x77	; 119
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	dc 01       	movw	r26, r24
    1046:	2c 91       	ld	r18, X
    1048:	80 e2       	ldi	r24, 0x20	; 32
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	a0 e0       	ldi	r26, 0x00	; 0
    104e:	b0 e0       	ldi	r27, 0x00	; 0
    1050:	8e 19       	sub	r24, r14
    1052:	9f 09       	sbc	r25, r15
    1054:	a0 0b       	sbc	r26, r16
    1056:	b1 0b       	sbc	r27, r17
    1058:	5c 01       	movw	r10, r24
    105a:	6d 01       	movw	r12, r26
    105c:	a2 1a       	sub	r10, r18
    105e:	b1 08       	sbc	r11, r1
    1060:	c1 08       	sbc	r12, r1
    1062:	d1 08       	sbc	r13, r1
    1064:	a9 ae       	std	Y+57, r10	; 0x39
    1066:	ba ae       	std	Y+58, r11	; 0x3a
    1068:	cb ae       	std	Y+59, r12	; 0x3b
    106a:	dc ae       	std	Y+60, r13	; 0x3c
    106c:	a1 14       	cp	r10, r1
    106e:	b1 04       	cpc	r11, r1
    1070:	c1 04       	cpc	r12, r1
    1072:	d1 04       	cpc	r13, r1
    1074:	09 f4       	brne	.+2      	; 0x1078 <__umoddi3+0x164>
    1076:	3f c0       	rjmp	.+126    	; 0x10f6 <__umoddi3+0x1e2>
    1078:	69 ad       	ldd	r22, Y+57	; 0x39
    107a:	06 2e       	mov	r0, r22
    107c:	04 c0       	rjmp	.+8      	; 0x1086 <__umoddi3+0x172>
    107e:	22 0c       	add	r2, r2
    1080:	33 1c       	adc	r3, r3
    1082:	44 1c       	adc	r4, r4
    1084:	55 1c       	adc	r5, r5
    1086:	0a 94       	dec	r0
    1088:	d2 f7       	brpl	.-12     	; 0x107e <__umoddi3+0x16a>
    108a:	a4 01       	movw	r20, r8
    108c:	93 01       	movw	r18, r6
    108e:	06 2e       	mov	r0, r22
    1090:	04 c0       	rjmp	.+8      	; 0x109a <__umoddi3+0x186>
    1092:	22 0f       	add	r18, r18
    1094:	33 1f       	adc	r19, r19
    1096:	44 1f       	adc	r20, r20
    1098:	55 1f       	adc	r21, r21
    109a:	0a 94       	dec	r0
    109c:	d2 f7       	brpl	.-12     	; 0x1092 <__umoddi3+0x17e>
    109e:	80 e2       	ldi	r24, 0x20	; 32
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	8a 19       	sub	r24, r10
    10a4:	9b 09       	sbc	r25, r11
    10a6:	6c 96       	adiw	r28, 0x1c	; 28
    10a8:	cc ac       	ldd	r12, Y+60	; 0x3c
    10aa:	dd ac       	ldd	r13, Y+61	; 0x3d
    10ac:	ee ac       	ldd	r14, Y+62	; 0x3e
    10ae:	ff ac       	ldd	r15, Y+63	; 0x3f
    10b0:	6c 97       	sbiw	r28, 0x1c	; 28
    10b2:	04 c0       	rjmp	.+8      	; 0x10bc <__umoddi3+0x1a8>
    10b4:	f6 94       	lsr	r15
    10b6:	e7 94       	ror	r14
    10b8:	d7 94       	ror	r13
    10ba:	c7 94       	ror	r12
    10bc:	8a 95       	dec	r24
    10be:	d2 f7       	brpl	.-12     	; 0x10b4 <__umoddi3+0x1a0>
    10c0:	87 01       	movw	r16, r14
    10c2:	76 01       	movw	r14, r12
    10c4:	e2 2a       	or	r14, r18
    10c6:	f3 2a       	or	r15, r19
    10c8:	04 2b       	or	r16, r20
    10ca:	15 2b       	or	r17, r21
    10cc:	ed aa       	std	Y+53, r14	; 0x35
    10ce:	fe aa       	std	Y+54, r15	; 0x36
    10d0:	0f ab       	std	Y+55, r16	; 0x37
    10d2:	18 af       	std	Y+56, r17	; 0x38
    10d4:	6c 96       	adiw	r28, 0x1c	; 28
    10d6:	8c ad       	ldd	r24, Y+60	; 0x3c
    10d8:	9d ad       	ldd	r25, Y+61	; 0x3d
    10da:	ae ad       	ldd	r26, Y+62	; 0x3e
    10dc:	bf ad       	ldd	r27, Y+63	; 0x3f
    10de:	6c 97       	sbiw	r28, 0x1c	; 28
    10e0:	04 c0       	rjmp	.+8      	; 0x10ea <__umoddi3+0x1d6>
    10e2:	88 0f       	add	r24, r24
    10e4:	99 1f       	adc	r25, r25
    10e6:	aa 1f       	adc	r26, r26
    10e8:	bb 1f       	adc	r27, r27
    10ea:	6a 95       	dec	r22
    10ec:	d2 f7       	brpl	.-12     	; 0x10e2 <__umoddi3+0x1ce>
    10ee:	89 ab       	std	Y+49, r24	; 0x31
    10f0:	9a ab       	std	Y+50, r25	; 0x32
    10f2:	ab ab       	std	Y+51, r26	; 0x33
    10f4:	bc ab       	std	Y+52, r27	; 0x34
    10f6:	32 01       	movw	r6, r4
    10f8:	88 24       	eor	r8, r8
    10fa:	99 24       	eor	r9, r9
    10fc:	b2 01       	movw	r22, r4
    10fe:	a1 01       	movw	r20, r2
    1100:	60 70       	andi	r22, 0x00	; 0
    1102:	70 70       	andi	r23, 0x00	; 0
    1104:	21 96       	adiw	r28, 0x01	; 1
    1106:	4c af       	std	Y+60, r20	; 0x3c
    1108:	5d af       	std	Y+61, r21	; 0x3d
    110a:	6e af       	std	Y+62, r22	; 0x3e
    110c:	7f af       	std	Y+63, r23	; 0x3f
    110e:	21 97       	sbiw	r28, 0x01	; 1
    1110:	6d a9       	ldd	r22, Y+53	; 0x35
    1112:	7e a9       	ldd	r23, Y+54	; 0x36
    1114:	8f a9       	ldd	r24, Y+55	; 0x37
    1116:	98 ad       	ldd	r25, Y+56	; 0x38
    1118:	a4 01       	movw	r20, r8
    111a:	93 01       	movw	r18, r6
    111c:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1120:	7b 01       	movw	r14, r22
    1122:	8c 01       	movw	r16, r24
    1124:	6d a9       	ldd	r22, Y+53	; 0x35
    1126:	7e a9       	ldd	r23, Y+54	; 0x36
    1128:	8f a9       	ldd	r24, Y+55	; 0x37
    112a:	98 ad       	ldd	r25, Y+56	; 0x38
    112c:	a4 01       	movw	r20, r8
    112e:	93 01       	movw	r18, r6
    1130:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1134:	ca 01       	movw	r24, r20
    1136:	b9 01       	movw	r22, r18
    1138:	21 96       	adiw	r28, 0x01	; 1
    113a:	2c ad       	ldd	r18, Y+60	; 0x3c
    113c:	3d ad       	ldd	r19, Y+61	; 0x3d
    113e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1140:	5f ad       	ldd	r21, Y+63	; 0x3f
    1142:	21 97       	sbiw	r28, 0x01	; 1
    1144:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    1148:	9b 01       	movw	r18, r22
    114a:	ac 01       	movw	r20, r24
    114c:	87 01       	movw	r16, r14
    114e:	ff 24       	eor	r15, r15
    1150:	ee 24       	eor	r14, r14
    1152:	a9 a8       	ldd	r10, Y+49	; 0x31
    1154:	ba a8       	ldd	r11, Y+50	; 0x32
    1156:	cb a8       	ldd	r12, Y+51	; 0x33
    1158:	dc a8       	ldd	r13, Y+52	; 0x34
    115a:	c6 01       	movw	r24, r12
    115c:	aa 27       	eor	r26, r26
    115e:	bb 27       	eor	r27, r27
    1160:	57 01       	movw	r10, r14
    1162:	68 01       	movw	r12, r16
    1164:	a8 2a       	or	r10, r24
    1166:	b9 2a       	or	r11, r25
    1168:	ca 2a       	or	r12, r26
    116a:	db 2a       	or	r13, r27
    116c:	a2 16       	cp	r10, r18
    116e:	b3 06       	cpc	r11, r19
    1170:	c4 06       	cpc	r12, r20
    1172:	d5 06       	cpc	r13, r21
    1174:	90 f4       	brcc	.+36     	; 0x119a <__umoddi3+0x286>
    1176:	a2 0c       	add	r10, r2
    1178:	b3 1c       	adc	r11, r3
    117a:	c4 1c       	adc	r12, r4
    117c:	d5 1c       	adc	r13, r5
    117e:	a2 14       	cp	r10, r2
    1180:	b3 04       	cpc	r11, r3
    1182:	c4 04       	cpc	r12, r4
    1184:	d5 04       	cpc	r13, r5
    1186:	48 f0       	brcs	.+18     	; 0x119a <__umoddi3+0x286>
    1188:	a2 16       	cp	r10, r18
    118a:	b3 06       	cpc	r11, r19
    118c:	c4 06       	cpc	r12, r20
    118e:	d5 06       	cpc	r13, r21
    1190:	20 f4       	brcc	.+8      	; 0x119a <__umoddi3+0x286>
    1192:	a2 0c       	add	r10, r2
    1194:	b3 1c       	adc	r11, r3
    1196:	c4 1c       	adc	r12, r4
    1198:	d5 1c       	adc	r13, r5
    119a:	a2 1a       	sub	r10, r18
    119c:	b3 0a       	sbc	r11, r19
    119e:	c4 0a       	sbc	r12, r20
    11a0:	d5 0a       	sbc	r13, r21
    11a2:	c6 01       	movw	r24, r12
    11a4:	b5 01       	movw	r22, r10
    11a6:	a4 01       	movw	r20, r8
    11a8:	93 01       	movw	r18, r6
    11aa:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    11ae:	7b 01       	movw	r14, r22
    11b0:	8c 01       	movw	r16, r24
    11b2:	c6 01       	movw	r24, r12
    11b4:	b5 01       	movw	r22, r10
    11b6:	a4 01       	movw	r20, r8
    11b8:	93 01       	movw	r18, r6
    11ba:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    11be:	ca 01       	movw	r24, r20
    11c0:	b9 01       	movw	r22, r18
    11c2:	21 96       	adiw	r28, 0x01	; 1
    11c4:	2c ad       	ldd	r18, Y+60	; 0x3c
    11c6:	3d ad       	ldd	r19, Y+61	; 0x3d
    11c8:	4e ad       	ldd	r20, Y+62	; 0x3e
    11ca:	5f ad       	ldd	r21, Y+63	; 0x3f
    11cc:	21 97       	sbiw	r28, 0x01	; 1
    11ce:	ba c1       	rjmp	.+884    	; 0x1544 <__umoddi3+0x630>
    11d0:	21 14       	cp	r2, r1
    11d2:	31 04       	cpc	r3, r1
    11d4:	41 04       	cpc	r4, r1
    11d6:	51 04       	cpc	r5, r1
    11d8:	71 f4       	brne	.+28     	; 0x11f6 <__umoddi3+0x2e2>
    11da:	61 e0       	ldi	r22, 0x01	; 1
    11dc:	70 e0       	ldi	r23, 0x00	; 0
    11de:	80 e0       	ldi	r24, 0x00	; 0
    11e0:	90 e0       	ldi	r25, 0x00	; 0
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	40 e0       	ldi	r20, 0x00	; 0
    11e8:	50 e0       	ldi	r21, 0x00	; 0
    11ea:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    11ee:	c9 01       	movw	r24, r18
    11f0:	da 01       	movw	r26, r20
    11f2:	1c 01       	movw	r2, r24
    11f4:	2d 01       	movw	r4, r26
    11f6:	00 e0       	ldi	r16, 0x00	; 0
    11f8:	20 16       	cp	r2, r16
    11fa:	00 e0       	ldi	r16, 0x00	; 0
    11fc:	30 06       	cpc	r3, r16
    11fe:	01 e0       	ldi	r16, 0x01	; 1
    1200:	40 06       	cpc	r4, r16
    1202:	00 e0       	ldi	r16, 0x00	; 0
    1204:	50 06       	cpc	r5, r16
    1206:	88 f4       	brcc	.+34     	; 0x122a <__umoddi3+0x316>
    1208:	1f ef       	ldi	r17, 0xFF	; 255
    120a:	21 16       	cp	r2, r17
    120c:	31 04       	cpc	r3, r1
    120e:	41 04       	cpc	r4, r1
    1210:	51 04       	cpc	r5, r1
    1212:	39 f0       	breq	.+14     	; 0x1222 <__umoddi3+0x30e>
    1214:	30 f0       	brcs	.+12     	; 0x1222 <__umoddi3+0x30e>
    1216:	68 e0       	ldi	r22, 0x08	; 8
    1218:	e6 2e       	mov	r14, r22
    121a:	f1 2c       	mov	r15, r1
    121c:	01 2d       	mov	r16, r1
    121e:	11 2d       	mov	r17, r1
    1220:	18 c0       	rjmp	.+48     	; 0x1252 <__umoddi3+0x33e>
    1222:	ee 24       	eor	r14, r14
    1224:	ff 24       	eor	r15, r15
    1226:	87 01       	movw	r16, r14
    1228:	14 c0       	rjmp	.+40     	; 0x1252 <__umoddi3+0x33e>
    122a:	40 e0       	ldi	r20, 0x00	; 0
    122c:	24 16       	cp	r2, r20
    122e:	40 e0       	ldi	r20, 0x00	; 0
    1230:	34 06       	cpc	r3, r20
    1232:	40 e0       	ldi	r20, 0x00	; 0
    1234:	44 06       	cpc	r4, r20
    1236:	41 e0       	ldi	r20, 0x01	; 1
    1238:	54 06       	cpc	r5, r20
    123a:	30 f0       	brcs	.+12     	; 0x1248 <__umoddi3+0x334>
    123c:	58 e1       	ldi	r21, 0x18	; 24
    123e:	e5 2e       	mov	r14, r21
    1240:	f1 2c       	mov	r15, r1
    1242:	01 2d       	mov	r16, r1
    1244:	11 2d       	mov	r17, r1
    1246:	05 c0       	rjmp	.+10     	; 0x1252 <__umoddi3+0x33e>
    1248:	40 e1       	ldi	r20, 0x10	; 16
    124a:	e4 2e       	mov	r14, r20
    124c:	f1 2c       	mov	r15, r1
    124e:	01 2d       	mov	r16, r1
    1250:	11 2d       	mov	r17, r1
    1252:	d2 01       	movw	r26, r4
    1254:	c1 01       	movw	r24, r2
    1256:	0e 2c       	mov	r0, r14
    1258:	04 c0       	rjmp	.+8      	; 0x1262 <__umoddi3+0x34e>
    125a:	b6 95       	lsr	r27
    125c:	a7 95       	ror	r26
    125e:	97 95       	ror	r25
    1260:	87 95       	ror	r24
    1262:	0a 94       	dec	r0
    1264:	d2 f7       	brpl	.-12     	; 0x125a <__umoddi3+0x346>
    1266:	87 57       	subi	r24, 0x77	; 119
    1268:	9f 4f       	sbci	r25, 0xFF	; 255
    126a:	dc 01       	movw	r26, r24
    126c:	2c 91       	ld	r18, X
    126e:	30 e2       	ldi	r19, 0x20	; 32
    1270:	a3 2e       	mov	r10, r19
    1272:	b1 2c       	mov	r11, r1
    1274:	c1 2c       	mov	r12, r1
    1276:	d1 2c       	mov	r13, r1
    1278:	d6 01       	movw	r26, r12
    127a:	c5 01       	movw	r24, r10
    127c:	8e 19       	sub	r24, r14
    127e:	9f 09       	sbc	r25, r15
    1280:	a0 0b       	sbc	r26, r16
    1282:	b1 0b       	sbc	r27, r17
    1284:	7c 01       	movw	r14, r24
    1286:	8d 01       	movw	r16, r26
    1288:	e2 1a       	sub	r14, r18
    128a:	f1 08       	sbc	r15, r1
    128c:	01 09       	sbc	r16, r1
    128e:	11 09       	sbc	r17, r1
    1290:	e9 ae       	std	Y+57, r14	; 0x39
    1292:	fa ae       	std	Y+58, r15	; 0x3a
    1294:	0b af       	std	Y+59, r16	; 0x3b
    1296:	1c af       	std	Y+60, r17	; 0x3c
    1298:	e1 14       	cp	r14, r1
    129a:	f1 04       	cpc	r15, r1
    129c:	01 05       	cpc	r16, r1
    129e:	11 05       	cpc	r17, r1
    12a0:	39 f4       	brne	.+14     	; 0x12b0 <__umoddi3+0x39c>
    12a2:	64 01       	movw	r12, r8
    12a4:	53 01       	movw	r10, r6
    12a6:	a2 18       	sub	r10, r2
    12a8:	b3 08       	sbc	r11, r3
    12aa:	c4 08       	sbc	r12, r4
    12ac:	d5 08       	sbc	r13, r5
    12ae:	e2 c0       	rjmp	.+452    	; 0x1474 <__umoddi3+0x560>
    12b0:	f9 ac       	ldd	r15, Y+57	; 0x39
    12b2:	68 96       	adiw	r28, 0x18	; 24
    12b4:	ff ae       	std	Y+63, r15	; 0x3f
    12b6:	68 97       	sbiw	r28, 0x18	; 24
    12b8:	0f 2c       	mov	r0, r15
    12ba:	04 c0       	rjmp	.+8      	; 0x12c4 <__umoddi3+0x3b0>
    12bc:	22 0c       	add	r2, r2
    12be:	33 1c       	adc	r3, r3
    12c0:	44 1c       	adc	r4, r4
    12c2:	55 1c       	adc	r5, r5
    12c4:	0a 94       	dec	r0
    12c6:	d2 f7       	brpl	.-12     	; 0x12bc <__umoddi3+0x3a8>
    12c8:	8a 2d       	mov	r24, r10
    12ca:	8f 19       	sub	r24, r15
    12cc:	64 01       	movw	r12, r8
    12ce:	53 01       	movw	r10, r6
    12d0:	08 2e       	mov	r0, r24
    12d2:	04 c0       	rjmp	.+8      	; 0x12dc <__umoddi3+0x3c8>
    12d4:	d6 94       	lsr	r13
    12d6:	c7 94       	ror	r12
    12d8:	b7 94       	ror	r11
    12da:	a7 94       	ror	r10
    12dc:	0a 94       	dec	r0
    12de:	d2 f7       	brpl	.-12     	; 0x12d4 <__umoddi3+0x3c0>
    12e0:	a4 01       	movw	r20, r8
    12e2:	93 01       	movw	r18, r6
    12e4:	04 c0       	rjmp	.+8      	; 0x12ee <__umoddi3+0x3da>
    12e6:	22 0f       	add	r18, r18
    12e8:	33 1f       	adc	r19, r19
    12ea:	44 1f       	adc	r20, r20
    12ec:	55 1f       	adc	r21, r21
    12ee:	fa 94       	dec	r15
    12f0:	d2 f7       	brpl	.-12     	; 0x12e6 <__umoddi3+0x3d2>
    12f2:	6c 96       	adiw	r28, 0x1c	; 28
    12f4:	6c ac       	ldd	r6, Y+60	; 0x3c
    12f6:	7d ac       	ldd	r7, Y+61	; 0x3d
    12f8:	8e ac       	ldd	r8, Y+62	; 0x3e
    12fa:	9f ac       	ldd	r9, Y+63	; 0x3f
    12fc:	6c 97       	sbiw	r28, 0x1c	; 28
    12fe:	04 c0       	rjmp	.+8      	; 0x1308 <__umoddi3+0x3f4>
    1300:	96 94       	lsr	r9
    1302:	87 94       	ror	r8
    1304:	77 94       	ror	r7
    1306:	67 94       	ror	r6
    1308:	8a 95       	dec	r24
    130a:	d2 f7       	brpl	.-12     	; 0x1300 <__umoddi3+0x3ec>
    130c:	84 01       	movw	r16, r8
    130e:	73 01       	movw	r14, r6
    1310:	e2 2a       	or	r14, r18
    1312:	f3 2a       	or	r15, r19
    1314:	04 2b       	or	r16, r20
    1316:	15 2b       	or	r17, r21
    1318:	ed a6       	std	Y+45, r14	; 0x2d
    131a:	fe a6       	std	Y+46, r15	; 0x2e
    131c:	0f a7       	std	Y+47, r16	; 0x2f
    131e:	18 ab       	std	Y+48, r17	; 0x30
    1320:	32 01       	movw	r6, r4
    1322:	88 24       	eor	r8, r8
    1324:	99 24       	eor	r9, r9
    1326:	b2 01       	movw	r22, r4
    1328:	a1 01       	movw	r20, r2
    132a:	60 70       	andi	r22, 0x00	; 0
    132c:	70 70       	andi	r23, 0x00	; 0
    132e:	25 96       	adiw	r28, 0x05	; 5
    1330:	4c af       	std	Y+60, r20	; 0x3c
    1332:	5d af       	std	Y+61, r21	; 0x3d
    1334:	6e af       	std	Y+62, r22	; 0x3e
    1336:	7f af       	std	Y+63, r23	; 0x3f
    1338:	25 97       	sbiw	r28, 0x05	; 5
    133a:	c6 01       	movw	r24, r12
    133c:	b5 01       	movw	r22, r10
    133e:	a4 01       	movw	r20, r8
    1340:	93 01       	movw	r18, r6
    1342:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1346:	7b 01       	movw	r14, r22
    1348:	8c 01       	movw	r16, r24
    134a:	c6 01       	movw	r24, r12
    134c:	b5 01       	movw	r22, r10
    134e:	a4 01       	movw	r20, r8
    1350:	93 01       	movw	r18, r6
    1352:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1356:	ca 01       	movw	r24, r20
    1358:	b9 01       	movw	r22, r18
    135a:	25 96       	adiw	r28, 0x05	; 5
    135c:	2c ad       	ldd	r18, Y+60	; 0x3c
    135e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1360:	4e ad       	ldd	r20, Y+62	; 0x3e
    1362:	5f ad       	ldd	r21, Y+63	; 0x3f
    1364:	25 97       	sbiw	r28, 0x05	; 5
    1366:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    136a:	9b 01       	movw	r18, r22
    136c:	ac 01       	movw	r20, r24
    136e:	87 01       	movw	r16, r14
    1370:	ff 24       	eor	r15, r15
    1372:	ee 24       	eor	r14, r14
    1374:	ad a4       	ldd	r10, Y+45	; 0x2d
    1376:	be a4       	ldd	r11, Y+46	; 0x2e
    1378:	cf a4       	ldd	r12, Y+47	; 0x2f
    137a:	d8 a8       	ldd	r13, Y+48	; 0x30
    137c:	c6 01       	movw	r24, r12
    137e:	aa 27       	eor	r26, r26
    1380:	bb 27       	eor	r27, r27
    1382:	5c 01       	movw	r10, r24
    1384:	6d 01       	movw	r12, r26
    1386:	ae 28       	or	r10, r14
    1388:	bf 28       	or	r11, r15
    138a:	c0 2a       	or	r12, r16
    138c:	d1 2a       	or	r13, r17
    138e:	a2 16       	cp	r10, r18
    1390:	b3 06       	cpc	r11, r19
    1392:	c4 06       	cpc	r12, r20
    1394:	d5 06       	cpc	r13, r21
    1396:	90 f4       	brcc	.+36     	; 0x13bc <__umoddi3+0x4a8>
    1398:	a2 0c       	add	r10, r2
    139a:	b3 1c       	adc	r11, r3
    139c:	c4 1c       	adc	r12, r4
    139e:	d5 1c       	adc	r13, r5
    13a0:	a2 14       	cp	r10, r2
    13a2:	b3 04       	cpc	r11, r3
    13a4:	c4 04       	cpc	r12, r4
    13a6:	d5 04       	cpc	r13, r5
    13a8:	48 f0       	brcs	.+18     	; 0x13bc <__umoddi3+0x4a8>
    13aa:	a2 16       	cp	r10, r18
    13ac:	b3 06       	cpc	r11, r19
    13ae:	c4 06       	cpc	r12, r20
    13b0:	d5 06       	cpc	r13, r21
    13b2:	20 f4       	brcc	.+8      	; 0x13bc <__umoddi3+0x4a8>
    13b4:	a2 0c       	add	r10, r2
    13b6:	b3 1c       	adc	r11, r3
    13b8:	c4 1c       	adc	r12, r4
    13ba:	d5 1c       	adc	r13, r5
    13bc:	a2 1a       	sub	r10, r18
    13be:	b3 0a       	sbc	r11, r19
    13c0:	c4 0a       	sbc	r12, r20
    13c2:	d5 0a       	sbc	r13, r21
    13c4:	c6 01       	movw	r24, r12
    13c6:	b5 01       	movw	r22, r10
    13c8:	a4 01       	movw	r20, r8
    13ca:	93 01       	movw	r18, r6
    13cc:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    13d0:	7b 01       	movw	r14, r22
    13d2:	8c 01       	movw	r16, r24
    13d4:	c6 01       	movw	r24, r12
    13d6:	b5 01       	movw	r22, r10
    13d8:	a4 01       	movw	r20, r8
    13da:	93 01       	movw	r18, r6
    13dc:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    13e0:	ca 01       	movw	r24, r20
    13e2:	b9 01       	movw	r22, r18
    13e4:	25 96       	adiw	r28, 0x05	; 5
    13e6:	2c ad       	ldd	r18, Y+60	; 0x3c
    13e8:	3d ad       	ldd	r19, Y+61	; 0x3d
    13ea:	4e ad       	ldd	r20, Y+62	; 0x3e
    13ec:	5f ad       	ldd	r21, Y+63	; 0x3f
    13ee:	25 97       	sbiw	r28, 0x05	; 5
    13f0:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    13f4:	9b 01       	movw	r18, r22
    13f6:	ac 01       	movw	r20, r24
    13f8:	87 01       	movw	r16, r14
    13fa:	ff 24       	eor	r15, r15
    13fc:	ee 24       	eor	r14, r14
    13fe:	8d a5       	ldd	r24, Y+45	; 0x2d
    1400:	9e a5       	ldd	r25, Y+46	; 0x2e
    1402:	af a5       	ldd	r26, Y+47	; 0x2f
    1404:	b8 a9       	ldd	r27, Y+48	; 0x30
    1406:	a0 70       	andi	r26, 0x00	; 0
    1408:	b0 70       	andi	r27, 0x00	; 0
    140a:	57 01       	movw	r10, r14
    140c:	68 01       	movw	r12, r16
    140e:	a8 2a       	or	r10, r24
    1410:	b9 2a       	or	r11, r25
    1412:	ca 2a       	or	r12, r26
    1414:	db 2a       	or	r13, r27
    1416:	a2 16       	cp	r10, r18
    1418:	b3 06       	cpc	r11, r19
    141a:	c4 06       	cpc	r12, r20
    141c:	d5 06       	cpc	r13, r21
    141e:	90 f4       	brcc	.+36     	; 0x1444 <__umoddi3+0x530>
    1420:	a2 0c       	add	r10, r2
    1422:	b3 1c       	adc	r11, r3
    1424:	c4 1c       	adc	r12, r4
    1426:	d5 1c       	adc	r13, r5
    1428:	a2 14       	cp	r10, r2
    142a:	b3 04       	cpc	r11, r3
    142c:	c4 04       	cpc	r12, r4
    142e:	d5 04       	cpc	r13, r5
    1430:	48 f0       	brcs	.+18     	; 0x1444 <__umoddi3+0x530>
    1432:	a2 16       	cp	r10, r18
    1434:	b3 06       	cpc	r11, r19
    1436:	c4 06       	cpc	r12, r20
    1438:	d5 06       	cpc	r13, r21
    143a:	20 f4       	brcc	.+8      	; 0x1444 <__umoddi3+0x530>
    143c:	a2 0c       	add	r10, r2
    143e:	b3 1c       	adc	r11, r3
    1440:	c4 1c       	adc	r12, r4
    1442:	d5 1c       	adc	r13, r5
    1444:	6c 96       	adiw	r28, 0x1c	; 28
    1446:	ec ac       	ldd	r14, Y+60	; 0x3c
    1448:	fd ac       	ldd	r15, Y+61	; 0x3d
    144a:	0e ad       	ldd	r16, Y+62	; 0x3e
    144c:	1f ad       	ldd	r17, Y+63	; 0x3f
    144e:	6c 97       	sbiw	r28, 0x1c	; 28
    1450:	68 96       	adiw	r28, 0x18	; 24
    1452:	0f ac       	ldd	r0, Y+63	; 0x3f
    1454:	68 97       	sbiw	r28, 0x18	; 24
    1456:	04 c0       	rjmp	.+8      	; 0x1460 <__umoddi3+0x54c>
    1458:	ee 0c       	add	r14, r14
    145a:	ff 1c       	adc	r15, r15
    145c:	00 1f       	adc	r16, r16
    145e:	11 1f       	adc	r17, r17
    1460:	0a 94       	dec	r0
    1462:	d2 f7       	brpl	.-12     	; 0x1458 <__umoddi3+0x544>
    1464:	e9 aa       	std	Y+49, r14	; 0x31
    1466:	fa aa       	std	Y+50, r15	; 0x32
    1468:	0b ab       	std	Y+51, r16	; 0x33
    146a:	1c ab       	std	Y+52, r17	; 0x34
    146c:	a2 1a       	sub	r10, r18
    146e:	b3 0a       	sbc	r11, r19
    1470:	c4 0a       	sbc	r12, r20
    1472:	d5 0a       	sbc	r13, r21
    1474:	32 01       	movw	r6, r4
    1476:	88 24       	eor	r8, r8
    1478:	99 24       	eor	r9, r9
    147a:	b2 01       	movw	r22, r4
    147c:	a1 01       	movw	r20, r2
    147e:	60 70       	andi	r22, 0x00	; 0
    1480:	70 70       	andi	r23, 0x00	; 0
    1482:	29 96       	adiw	r28, 0x09	; 9
    1484:	4c af       	std	Y+60, r20	; 0x3c
    1486:	5d af       	std	Y+61, r21	; 0x3d
    1488:	6e af       	std	Y+62, r22	; 0x3e
    148a:	7f af       	std	Y+63, r23	; 0x3f
    148c:	29 97       	sbiw	r28, 0x09	; 9
    148e:	c6 01       	movw	r24, r12
    1490:	b5 01       	movw	r22, r10
    1492:	a4 01       	movw	r20, r8
    1494:	93 01       	movw	r18, r6
    1496:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    149a:	7b 01       	movw	r14, r22
    149c:	8c 01       	movw	r16, r24
    149e:	c6 01       	movw	r24, r12
    14a0:	b5 01       	movw	r22, r10
    14a2:	a4 01       	movw	r20, r8
    14a4:	93 01       	movw	r18, r6
    14a6:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    14aa:	ca 01       	movw	r24, r20
    14ac:	b9 01       	movw	r22, r18
    14ae:	29 96       	adiw	r28, 0x09	; 9
    14b0:	2c ad       	ldd	r18, Y+60	; 0x3c
    14b2:	3d ad       	ldd	r19, Y+61	; 0x3d
    14b4:	4e ad       	ldd	r20, Y+62	; 0x3e
    14b6:	5f ad       	ldd	r21, Y+63	; 0x3f
    14b8:	29 97       	sbiw	r28, 0x09	; 9
    14ba:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    14be:	9b 01       	movw	r18, r22
    14c0:	ac 01       	movw	r20, r24
    14c2:	87 01       	movw	r16, r14
    14c4:	ff 24       	eor	r15, r15
    14c6:	ee 24       	eor	r14, r14
    14c8:	a9 a8       	ldd	r10, Y+49	; 0x31
    14ca:	ba a8       	ldd	r11, Y+50	; 0x32
    14cc:	cb a8       	ldd	r12, Y+51	; 0x33
    14ce:	dc a8       	ldd	r13, Y+52	; 0x34
    14d0:	c6 01       	movw	r24, r12
    14d2:	aa 27       	eor	r26, r26
    14d4:	bb 27       	eor	r27, r27
    14d6:	57 01       	movw	r10, r14
    14d8:	68 01       	movw	r12, r16
    14da:	a8 2a       	or	r10, r24
    14dc:	b9 2a       	or	r11, r25
    14de:	ca 2a       	or	r12, r26
    14e0:	db 2a       	or	r13, r27
    14e2:	a2 16       	cp	r10, r18
    14e4:	b3 06       	cpc	r11, r19
    14e6:	c4 06       	cpc	r12, r20
    14e8:	d5 06       	cpc	r13, r21
    14ea:	90 f4       	brcc	.+36     	; 0x1510 <__umoddi3+0x5fc>
    14ec:	a2 0c       	add	r10, r2
    14ee:	b3 1c       	adc	r11, r3
    14f0:	c4 1c       	adc	r12, r4
    14f2:	d5 1c       	adc	r13, r5
    14f4:	a2 14       	cp	r10, r2
    14f6:	b3 04       	cpc	r11, r3
    14f8:	c4 04       	cpc	r12, r4
    14fa:	d5 04       	cpc	r13, r5
    14fc:	48 f0       	brcs	.+18     	; 0x1510 <__umoddi3+0x5fc>
    14fe:	a2 16       	cp	r10, r18
    1500:	b3 06       	cpc	r11, r19
    1502:	c4 06       	cpc	r12, r20
    1504:	d5 06       	cpc	r13, r21
    1506:	20 f4       	brcc	.+8      	; 0x1510 <__umoddi3+0x5fc>
    1508:	a2 0c       	add	r10, r2
    150a:	b3 1c       	adc	r11, r3
    150c:	c4 1c       	adc	r12, r4
    150e:	d5 1c       	adc	r13, r5
    1510:	a2 1a       	sub	r10, r18
    1512:	b3 0a       	sbc	r11, r19
    1514:	c4 0a       	sbc	r12, r20
    1516:	d5 0a       	sbc	r13, r21
    1518:	c6 01       	movw	r24, r12
    151a:	b5 01       	movw	r22, r10
    151c:	a4 01       	movw	r20, r8
    151e:	93 01       	movw	r18, r6
    1520:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1524:	7b 01       	movw	r14, r22
    1526:	8c 01       	movw	r16, r24
    1528:	c6 01       	movw	r24, r12
    152a:	b5 01       	movw	r22, r10
    152c:	a4 01       	movw	r20, r8
    152e:	93 01       	movw	r18, r6
    1530:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1534:	ca 01       	movw	r24, r20
    1536:	b9 01       	movw	r22, r18
    1538:	29 96       	adiw	r28, 0x09	; 9
    153a:	2c ad       	ldd	r18, Y+60	; 0x3c
    153c:	3d ad       	ldd	r19, Y+61	; 0x3d
    153e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1540:	5f ad       	ldd	r21, Y+63	; 0x3f
    1542:	29 97       	sbiw	r28, 0x09	; 9
    1544:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    1548:	9b 01       	movw	r18, r22
    154a:	ac 01       	movw	r20, r24
    154c:	87 01       	movw	r16, r14
    154e:	ff 24       	eor	r15, r15
    1550:	ee 24       	eor	r14, r14
    1552:	89 a9       	ldd	r24, Y+49	; 0x31
    1554:	9a a9       	ldd	r25, Y+50	; 0x32
    1556:	ab a9       	ldd	r26, Y+51	; 0x33
    1558:	bc a9       	ldd	r27, Y+52	; 0x34
    155a:	a0 70       	andi	r26, 0x00	; 0
    155c:	b0 70       	andi	r27, 0x00	; 0
    155e:	e8 2a       	or	r14, r24
    1560:	f9 2a       	or	r15, r25
    1562:	0a 2b       	or	r16, r26
    1564:	1b 2b       	or	r17, r27
    1566:	e2 16       	cp	r14, r18
    1568:	f3 06       	cpc	r15, r19
    156a:	04 07       	cpc	r16, r20
    156c:	15 07       	cpc	r17, r21
    156e:	90 f4       	brcc	.+36     	; 0x1594 <__umoddi3+0x680>
    1570:	e2 0c       	add	r14, r2
    1572:	f3 1c       	adc	r15, r3
    1574:	04 1d       	adc	r16, r4
    1576:	15 1d       	adc	r17, r5
    1578:	e2 14       	cp	r14, r2
    157a:	f3 04       	cpc	r15, r3
    157c:	04 05       	cpc	r16, r4
    157e:	15 05       	cpc	r17, r5
    1580:	48 f0       	brcs	.+18     	; 0x1594 <__umoddi3+0x680>
    1582:	e2 16       	cp	r14, r18
    1584:	f3 06       	cpc	r15, r19
    1586:	04 07       	cpc	r16, r20
    1588:	15 07       	cpc	r17, r21
    158a:	20 f4       	brcc	.+8      	; 0x1594 <__umoddi3+0x680>
    158c:	e2 0c       	add	r14, r2
    158e:	f3 1c       	adc	r15, r3
    1590:	04 1d       	adc	r16, r4
    1592:	15 1d       	adc	r17, r5
    1594:	e2 1a       	sub	r14, r18
    1596:	f3 0a       	sbc	r15, r19
    1598:	04 0b       	sbc	r16, r20
    159a:	15 0b       	sbc	r17, r21
    159c:	d8 01       	movw	r26, r16
    159e:	c7 01       	movw	r24, r14
    15a0:	09 ac       	ldd	r0, Y+57	; 0x39
    15a2:	04 c0       	rjmp	.+8      	; 0x15ac <__umoddi3+0x698>
    15a4:	b6 95       	lsr	r27
    15a6:	a7 95       	ror	r26
    15a8:	97 95       	ror	r25
    15aa:	87 95       	ror	r24
    15ac:	0a 94       	dec	r0
    15ae:	d2 f7       	brpl	.-12     	; 0x15a4 <__umoddi3+0x690>
    15b0:	89 8b       	std	Y+17, r24	; 0x11
    15b2:	9a 8b       	std	Y+18, r25	; 0x12
    15b4:	ab 8b       	std	Y+19, r26	; 0x13
    15b6:	bc 8b       	std	Y+20, r27	; 0x14
    15b8:	1d 8a       	std	Y+21, r1	; 0x15
    15ba:	1e 8a       	std	Y+22, r1	; 0x16
    15bc:	1f 8a       	std	Y+23, r1	; 0x17
    15be:	18 8e       	std	Y+24, r1	; 0x18
    15c0:	28 2f       	mov	r18, r24
    15c2:	3a 89       	ldd	r19, Y+18	; 0x12
    15c4:	4b 89       	ldd	r20, Y+19	; 0x13
    15c6:	5c 89       	ldd	r21, Y+20	; 0x14
    15c8:	6d 89       	ldd	r22, Y+21	; 0x15
    15ca:	0c c3       	rjmp	.+1560   	; 0x1be4 <__umoddi3+0xcd0>
    15cc:	6a 14       	cp	r6, r10
    15ce:	7b 04       	cpc	r7, r11
    15d0:	8c 04       	cpc	r8, r12
    15d2:	9d 04       	cpc	r9, r13
    15d4:	08 f4       	brcc	.+2      	; 0x15d8 <__umoddi3+0x6c4>
    15d6:	09 c3       	rjmp	.+1554   	; 0x1bea <__umoddi3+0xcd6>
    15d8:	00 e0       	ldi	r16, 0x00	; 0
    15da:	a0 16       	cp	r10, r16
    15dc:	00 e0       	ldi	r16, 0x00	; 0
    15de:	b0 06       	cpc	r11, r16
    15e0:	01 e0       	ldi	r16, 0x01	; 1
    15e2:	c0 06       	cpc	r12, r16
    15e4:	00 e0       	ldi	r16, 0x00	; 0
    15e6:	d0 06       	cpc	r13, r16
    15e8:	88 f4       	brcc	.+34     	; 0x160c <__umoddi3+0x6f8>
    15ea:	1f ef       	ldi	r17, 0xFF	; 255
    15ec:	a1 16       	cp	r10, r17
    15ee:	b1 04       	cpc	r11, r1
    15f0:	c1 04       	cpc	r12, r1
    15f2:	d1 04       	cpc	r13, r1
    15f4:	39 f0       	breq	.+14     	; 0x1604 <__umoddi3+0x6f0>
    15f6:	30 f0       	brcs	.+12     	; 0x1604 <__umoddi3+0x6f0>
    15f8:	28 e0       	ldi	r18, 0x08	; 8
    15fa:	e2 2e       	mov	r14, r18
    15fc:	f1 2c       	mov	r15, r1
    15fe:	01 2d       	mov	r16, r1
    1600:	11 2d       	mov	r17, r1
    1602:	18 c0       	rjmp	.+48     	; 0x1634 <__umoddi3+0x720>
    1604:	ee 24       	eor	r14, r14
    1606:	ff 24       	eor	r15, r15
    1608:	87 01       	movw	r16, r14
    160a:	14 c0       	rjmp	.+40     	; 0x1634 <__umoddi3+0x720>
    160c:	40 e0       	ldi	r20, 0x00	; 0
    160e:	a4 16       	cp	r10, r20
    1610:	40 e0       	ldi	r20, 0x00	; 0
    1612:	b4 06       	cpc	r11, r20
    1614:	40 e0       	ldi	r20, 0x00	; 0
    1616:	c4 06       	cpc	r12, r20
    1618:	41 e0       	ldi	r20, 0x01	; 1
    161a:	d4 06       	cpc	r13, r20
    161c:	30 f0       	brcs	.+12     	; 0x162a <__umoddi3+0x716>
    161e:	98 e1       	ldi	r25, 0x18	; 24
    1620:	e9 2e       	mov	r14, r25
    1622:	f1 2c       	mov	r15, r1
    1624:	01 2d       	mov	r16, r1
    1626:	11 2d       	mov	r17, r1
    1628:	05 c0       	rjmp	.+10     	; 0x1634 <__umoddi3+0x720>
    162a:	80 e1       	ldi	r24, 0x10	; 16
    162c:	e8 2e       	mov	r14, r24
    162e:	f1 2c       	mov	r15, r1
    1630:	01 2d       	mov	r16, r1
    1632:	11 2d       	mov	r17, r1
    1634:	d6 01       	movw	r26, r12
    1636:	c5 01       	movw	r24, r10
    1638:	0e 2c       	mov	r0, r14
    163a:	04 c0       	rjmp	.+8      	; 0x1644 <__umoddi3+0x730>
    163c:	b6 95       	lsr	r27
    163e:	a7 95       	ror	r26
    1640:	97 95       	ror	r25
    1642:	87 95       	ror	r24
    1644:	0a 94       	dec	r0
    1646:	d2 f7       	brpl	.-12     	; 0x163c <__umoddi3+0x728>
    1648:	87 57       	subi	r24, 0x77	; 119
    164a:	9f 4f       	sbci	r25, 0xFF	; 255
    164c:	dc 01       	movw	r26, r24
    164e:	2c 91       	ld	r18, X
    1650:	80 e2       	ldi	r24, 0x20	; 32
    1652:	90 e0       	ldi	r25, 0x00	; 0
    1654:	a0 e0       	ldi	r26, 0x00	; 0
    1656:	b0 e0       	ldi	r27, 0x00	; 0
    1658:	8e 19       	sub	r24, r14
    165a:	9f 09       	sbc	r25, r15
    165c:	a0 0b       	sbc	r26, r16
    165e:	b1 0b       	sbc	r27, r17
    1660:	82 1b       	sub	r24, r18
    1662:	91 09       	sbc	r25, r1
    1664:	a1 09       	sbc	r26, r1
    1666:	b1 09       	sbc	r27, r1
    1668:	00 97       	sbiw	r24, 0x00	; 0
    166a:	a1 05       	cpc	r26, r1
    166c:	b1 05       	cpc	r27, r1
    166e:	09 f0       	breq	.+2      	; 0x1672 <__umoddi3+0x75e>
    1670:	4f c0       	rjmp	.+158    	; 0x1710 <__umoddi3+0x7fc>
    1672:	a6 14       	cp	r10, r6
    1674:	b7 04       	cpc	r11, r7
    1676:	c8 04       	cpc	r12, r8
    1678:	d9 04       	cpc	r13, r9
    167a:	58 f0       	brcs	.+22     	; 0x1692 <__umoddi3+0x77e>
    167c:	6c 96       	adiw	r28, 0x1c	; 28
    167e:	ec ac       	ldd	r14, Y+60	; 0x3c
    1680:	fd ac       	ldd	r15, Y+61	; 0x3d
    1682:	0e ad       	ldd	r16, Y+62	; 0x3e
    1684:	1f ad       	ldd	r17, Y+63	; 0x3f
    1686:	6c 97       	sbiw	r28, 0x1c	; 28
    1688:	e2 14       	cp	r14, r2
    168a:	f3 04       	cpc	r15, r3
    168c:	04 05       	cpc	r16, r4
    168e:	15 05       	cpc	r17, r5
    1690:	68 f1       	brcs	.+90     	; 0x16ec <__umoddi3+0x7d8>
    1692:	6c 96       	adiw	r28, 0x1c	; 28
    1694:	ec ac       	ldd	r14, Y+60	; 0x3c
    1696:	fd ac       	ldd	r15, Y+61	; 0x3d
    1698:	0e ad       	ldd	r16, Y+62	; 0x3e
    169a:	1f ad       	ldd	r17, Y+63	; 0x3f
    169c:	6c 97       	sbiw	r28, 0x1c	; 28
    169e:	e2 18       	sub	r14, r2
    16a0:	f3 08       	sbc	r15, r3
    16a2:	04 09       	sbc	r16, r4
    16a4:	15 09       	sbc	r17, r5
    16a6:	a4 01       	movw	r20, r8
    16a8:	93 01       	movw	r18, r6
    16aa:	2a 19       	sub	r18, r10
    16ac:	3b 09       	sbc	r19, r11
    16ae:	4c 09       	sbc	r20, r12
    16b0:	5d 09       	sbc	r21, r13
    16b2:	aa 24       	eor	r10, r10
    16b4:	bb 24       	eor	r11, r11
    16b6:	65 01       	movw	r12, r10
    16b8:	6c 96       	adiw	r28, 0x1c	; 28
    16ba:	6c ad       	ldd	r22, Y+60	; 0x3c
    16bc:	7d ad       	ldd	r23, Y+61	; 0x3d
    16be:	8e ad       	ldd	r24, Y+62	; 0x3e
    16c0:	9f ad       	ldd	r25, Y+63	; 0x3f
    16c2:	6c 97       	sbiw	r28, 0x1c	; 28
    16c4:	6e 15       	cp	r22, r14
    16c6:	7f 05       	cpc	r23, r15
    16c8:	80 07       	cpc	r24, r16
    16ca:	91 07       	cpc	r25, r17
    16cc:	28 f4       	brcc	.+10     	; 0x16d8 <__umoddi3+0x7c4>
    16ce:	b1 e0       	ldi	r27, 0x01	; 1
    16d0:	ab 2e       	mov	r10, r27
    16d2:	b1 2c       	mov	r11, r1
    16d4:	c1 2c       	mov	r12, r1
    16d6:	d1 2c       	mov	r13, r1
    16d8:	da 01       	movw	r26, r20
    16da:	c9 01       	movw	r24, r18
    16dc:	8a 19       	sub	r24, r10
    16de:	9b 09       	sbc	r25, r11
    16e0:	ac 09       	sbc	r26, r12
    16e2:	bd 09       	sbc	r27, r13
    16e4:	8d ab       	std	Y+53, r24	; 0x35
    16e6:	9e ab       	std	Y+54, r25	; 0x36
    16e8:	af ab       	std	Y+55, r26	; 0x37
    16ea:	b8 af       	std	Y+56, r27	; 0x38
    16ec:	e9 8a       	std	Y+17, r14	; 0x11
    16ee:	fa 8a       	std	Y+18, r15	; 0x12
    16f0:	0b 8b       	std	Y+19, r16	; 0x13
    16f2:	1c 8b       	std	Y+20, r17	; 0x14
    16f4:	6d a8       	ldd	r6, Y+53	; 0x35
    16f6:	7e a8       	ldd	r7, Y+54	; 0x36
    16f8:	8f a8       	ldd	r8, Y+55	; 0x37
    16fa:	98 ac       	ldd	r9, Y+56	; 0x38
    16fc:	6d 8a       	std	Y+21, r6	; 0x15
    16fe:	7e 8a       	std	Y+22, r7	; 0x16
    1700:	8f 8a       	std	Y+23, r8	; 0x17
    1702:	98 8e       	std	Y+24, r9	; 0x18
    1704:	2e 2d       	mov	r18, r14
    1706:	3a 89       	ldd	r19, Y+18	; 0x12
    1708:	4b 89       	ldd	r20, Y+19	; 0x13
    170a:	5c 89       	ldd	r21, Y+20	; 0x14
    170c:	6d a9       	ldd	r22, Y+53	; 0x35
    170e:	6a c2       	rjmp	.+1236   	; 0x1be4 <__umoddi3+0xcd0>
    1710:	67 96       	adiw	r28, 0x17	; 23
    1712:	8f af       	std	Y+63, r24	; 0x3f
    1714:	67 97       	sbiw	r28, 0x17	; 23
    1716:	a6 01       	movw	r20, r12
    1718:	95 01       	movw	r18, r10
    171a:	08 2e       	mov	r0, r24
    171c:	04 c0       	rjmp	.+8      	; 0x1726 <__umoddi3+0x812>
    171e:	22 0f       	add	r18, r18
    1720:	33 1f       	adc	r19, r19
    1722:	44 1f       	adc	r20, r20
    1724:	55 1f       	adc	r21, r21
    1726:	0a 94       	dec	r0
    1728:	d2 f7       	brpl	.-12     	; 0x171e <__umoddi3+0x80a>
    172a:	a0 e2       	ldi	r26, 0x20	; 32
    172c:	aa 2e       	mov	r10, r26
    172e:	a8 1a       	sub	r10, r24
    1730:	66 96       	adiw	r28, 0x16	; 22
    1732:	af ae       	std	Y+63, r10	; 0x3f
    1734:	66 97       	sbiw	r28, 0x16	; 22
    1736:	d2 01       	movw	r26, r4
    1738:	c1 01       	movw	r24, r2
    173a:	04 c0       	rjmp	.+8      	; 0x1744 <__umoddi3+0x830>
    173c:	b6 95       	lsr	r27
    173e:	a7 95       	ror	r26
    1740:	97 95       	ror	r25
    1742:	87 95       	ror	r24
    1744:	aa 94       	dec	r10
    1746:	d2 f7       	brpl	.-12     	; 0x173c <__umoddi3+0x828>
    1748:	6c 01       	movw	r12, r24
    174a:	7d 01       	movw	r14, r26
    174c:	c2 2a       	or	r12, r18
    174e:	d3 2a       	or	r13, r19
    1750:	e4 2a       	or	r14, r20
    1752:	f5 2a       	or	r15, r21
    1754:	c9 a6       	std	Y+41, r12	; 0x29
    1756:	da a6       	std	Y+42, r13	; 0x2a
    1758:	eb a6       	std	Y+43, r14	; 0x2b
    175a:	fc a6       	std	Y+44, r15	; 0x2c
    175c:	82 01       	movw	r16, r4
    175e:	71 01       	movw	r14, r2
    1760:	67 96       	adiw	r28, 0x17	; 23
    1762:	0f ac       	ldd	r0, Y+63	; 0x3f
    1764:	67 97       	sbiw	r28, 0x17	; 23
    1766:	04 c0       	rjmp	.+8      	; 0x1770 <__umoddi3+0x85c>
    1768:	ee 0c       	add	r14, r14
    176a:	ff 1c       	adc	r15, r15
    176c:	00 1f       	adc	r16, r16
    176e:	11 1f       	adc	r17, r17
    1770:	0a 94       	dec	r0
    1772:	d2 f7       	brpl	.-12     	; 0x1768 <__umoddi3+0x854>
    1774:	ed a2       	std	Y+37, r14	; 0x25
    1776:	fe a2       	std	Y+38, r15	; 0x26
    1778:	0f a3       	std	Y+39, r16	; 0x27
    177a:	18 a7       	std	Y+40, r17	; 0x28
    177c:	64 01       	movw	r12, r8
    177e:	53 01       	movw	r10, r6
    1780:	66 96       	adiw	r28, 0x16	; 22
    1782:	0f ac       	ldd	r0, Y+63	; 0x3f
    1784:	66 97       	sbiw	r28, 0x16	; 22
    1786:	04 c0       	rjmp	.+8      	; 0x1790 <__umoddi3+0x87c>
    1788:	d6 94       	lsr	r13
    178a:	c7 94       	ror	r12
    178c:	b7 94       	ror	r11
    178e:	a7 94       	ror	r10
    1790:	0a 94       	dec	r0
    1792:	d2 f7       	brpl	.-12     	; 0x1788 <__umoddi3+0x874>
    1794:	a4 01       	movw	r20, r8
    1796:	93 01       	movw	r18, r6
    1798:	67 96       	adiw	r28, 0x17	; 23
    179a:	0f ac       	ldd	r0, Y+63	; 0x3f
    179c:	67 97       	sbiw	r28, 0x17	; 23
    179e:	04 c0       	rjmp	.+8      	; 0x17a8 <__umoddi3+0x894>
    17a0:	22 0f       	add	r18, r18
    17a2:	33 1f       	adc	r19, r19
    17a4:	44 1f       	adc	r20, r20
    17a6:	55 1f       	adc	r21, r21
    17a8:	0a 94       	dec	r0
    17aa:	d2 f7       	brpl	.-12     	; 0x17a0 <__umoddi3+0x88c>
    17ac:	6c 96       	adiw	r28, 0x1c	; 28
    17ae:	8c ad       	ldd	r24, Y+60	; 0x3c
    17b0:	9d ad       	ldd	r25, Y+61	; 0x3d
    17b2:	ae ad       	ldd	r26, Y+62	; 0x3e
    17b4:	bf ad       	ldd	r27, Y+63	; 0x3f
    17b6:	6c 97       	sbiw	r28, 0x1c	; 28
    17b8:	66 96       	adiw	r28, 0x16	; 22
    17ba:	0f ac       	ldd	r0, Y+63	; 0x3f
    17bc:	66 97       	sbiw	r28, 0x16	; 22
    17be:	04 c0       	rjmp	.+8      	; 0x17c8 <__umoddi3+0x8b4>
    17c0:	b6 95       	lsr	r27
    17c2:	a7 95       	ror	r26
    17c4:	97 95       	ror	r25
    17c6:	87 95       	ror	r24
    17c8:	0a 94       	dec	r0
    17ca:	d2 f7       	brpl	.-12     	; 0x17c0 <__umoddi3+0x8ac>
    17cc:	3c 01       	movw	r6, r24
    17ce:	4d 01       	movw	r8, r26
    17d0:	62 2a       	or	r6, r18
    17d2:	73 2a       	or	r7, r19
    17d4:	84 2a       	or	r8, r20
    17d6:	95 2a       	or	r9, r21
    17d8:	69 a2       	std	Y+33, r6	; 0x21
    17da:	7a a2       	std	Y+34, r7	; 0x22
    17dc:	8b a2       	std	Y+35, r8	; 0x23
    17de:	9c a2       	std	Y+36, r9	; 0x24
    17e0:	6c 96       	adiw	r28, 0x1c	; 28
    17e2:	ec ac       	ldd	r14, Y+60	; 0x3c
    17e4:	fd ac       	ldd	r15, Y+61	; 0x3d
    17e6:	0e ad       	ldd	r16, Y+62	; 0x3e
    17e8:	1f ad       	ldd	r17, Y+63	; 0x3f
    17ea:	6c 97       	sbiw	r28, 0x1c	; 28
    17ec:	67 96       	adiw	r28, 0x17	; 23
    17ee:	0f ac       	ldd	r0, Y+63	; 0x3f
    17f0:	67 97       	sbiw	r28, 0x17	; 23
    17f2:	04 c0       	rjmp	.+8      	; 0x17fc <__umoddi3+0x8e8>
    17f4:	ee 0c       	add	r14, r14
    17f6:	ff 1c       	adc	r15, r15
    17f8:	00 1f       	adc	r16, r16
    17fa:	11 1f       	adc	r17, r17
    17fc:	0a 94       	dec	r0
    17fe:	d2 f7       	brpl	.-12     	; 0x17f4 <__umoddi3+0x8e0>
    1800:	ed 8e       	std	Y+29, r14	; 0x1d
    1802:	fe 8e       	std	Y+30, r15	; 0x1e
    1804:	0f 8f       	std	Y+31, r16	; 0x1f
    1806:	18 a3       	std	Y+32, r17	; 0x20
    1808:	49 a5       	ldd	r20, Y+41	; 0x29
    180a:	5a a5       	ldd	r21, Y+42	; 0x2a
    180c:	6b a5       	ldd	r22, Y+43	; 0x2b
    180e:	7c a5       	ldd	r23, Y+44	; 0x2c
    1810:	3b 01       	movw	r6, r22
    1812:	88 24       	eor	r8, r8
    1814:	99 24       	eor	r9, r9
    1816:	60 70       	andi	r22, 0x00	; 0
    1818:	70 70       	andi	r23, 0x00	; 0
    181a:	2d 96       	adiw	r28, 0x0d	; 13
    181c:	4c af       	std	Y+60, r20	; 0x3c
    181e:	5d af       	std	Y+61, r21	; 0x3d
    1820:	6e af       	std	Y+62, r22	; 0x3e
    1822:	7f af       	std	Y+63, r23	; 0x3f
    1824:	2d 97       	sbiw	r28, 0x0d	; 13
    1826:	c6 01       	movw	r24, r12
    1828:	b5 01       	movw	r22, r10
    182a:	a4 01       	movw	r20, r8
    182c:	93 01       	movw	r18, r6
    182e:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1832:	7b 01       	movw	r14, r22
    1834:	8c 01       	movw	r16, r24
    1836:	c6 01       	movw	r24, r12
    1838:	b5 01       	movw	r22, r10
    183a:	a4 01       	movw	r20, r8
    183c:	93 01       	movw	r18, r6
    183e:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    1842:	c9 01       	movw	r24, r18
    1844:	da 01       	movw	r26, r20
    1846:	1c 01       	movw	r2, r24
    1848:	2d 01       	movw	r4, r26
    184a:	c2 01       	movw	r24, r4
    184c:	b1 01       	movw	r22, r2
    184e:	2d 96       	adiw	r28, 0x0d	; 13
    1850:	2c ad       	ldd	r18, Y+60	; 0x3c
    1852:	3d ad       	ldd	r19, Y+61	; 0x3d
    1854:	4e ad       	ldd	r20, Y+62	; 0x3e
    1856:	5f ad       	ldd	r21, Y+63	; 0x3f
    1858:	2d 97       	sbiw	r28, 0x0d	; 13
    185a:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    185e:	9b 01       	movw	r18, r22
    1860:	ac 01       	movw	r20, r24
    1862:	87 01       	movw	r16, r14
    1864:	ff 24       	eor	r15, r15
    1866:	ee 24       	eor	r14, r14
    1868:	a9 a0       	ldd	r10, Y+33	; 0x21
    186a:	ba a0       	ldd	r11, Y+34	; 0x22
    186c:	cb a0       	ldd	r12, Y+35	; 0x23
    186e:	dc a0       	ldd	r13, Y+36	; 0x24
    1870:	c6 01       	movw	r24, r12
    1872:	aa 27       	eor	r26, r26
    1874:	bb 27       	eor	r27, r27
    1876:	57 01       	movw	r10, r14
    1878:	68 01       	movw	r12, r16
    187a:	a8 2a       	or	r10, r24
    187c:	b9 2a       	or	r11, r25
    187e:	ca 2a       	or	r12, r26
    1880:	db 2a       	or	r13, r27
    1882:	a2 16       	cp	r10, r18
    1884:	b3 06       	cpc	r11, r19
    1886:	c4 06       	cpc	r12, r20
    1888:	d5 06       	cpc	r13, r21
    188a:	00 f5       	brcc	.+64     	; 0x18cc <__umoddi3+0x9b8>
    188c:	08 94       	sec
    188e:	21 08       	sbc	r2, r1
    1890:	31 08       	sbc	r3, r1
    1892:	41 08       	sbc	r4, r1
    1894:	51 08       	sbc	r5, r1
    1896:	e9 a4       	ldd	r14, Y+41	; 0x29
    1898:	fa a4       	ldd	r15, Y+42	; 0x2a
    189a:	0b a5       	ldd	r16, Y+43	; 0x2b
    189c:	1c a5       	ldd	r17, Y+44	; 0x2c
    189e:	ae 0c       	add	r10, r14
    18a0:	bf 1c       	adc	r11, r15
    18a2:	c0 1e       	adc	r12, r16
    18a4:	d1 1e       	adc	r13, r17
    18a6:	ae 14       	cp	r10, r14
    18a8:	bf 04       	cpc	r11, r15
    18aa:	c0 06       	cpc	r12, r16
    18ac:	d1 06       	cpc	r13, r17
    18ae:	70 f0       	brcs	.+28     	; 0x18cc <__umoddi3+0x9b8>
    18b0:	a2 16       	cp	r10, r18
    18b2:	b3 06       	cpc	r11, r19
    18b4:	c4 06       	cpc	r12, r20
    18b6:	d5 06       	cpc	r13, r21
    18b8:	48 f4       	brcc	.+18     	; 0x18cc <__umoddi3+0x9b8>
    18ba:	08 94       	sec
    18bc:	21 08       	sbc	r2, r1
    18be:	31 08       	sbc	r3, r1
    18c0:	41 08       	sbc	r4, r1
    18c2:	51 08       	sbc	r5, r1
    18c4:	ae 0c       	add	r10, r14
    18c6:	bf 1c       	adc	r11, r15
    18c8:	c0 1e       	adc	r12, r16
    18ca:	d1 1e       	adc	r13, r17
    18cc:	a2 1a       	sub	r10, r18
    18ce:	b3 0a       	sbc	r11, r19
    18d0:	c4 0a       	sbc	r12, r20
    18d2:	d5 0a       	sbc	r13, r21
    18d4:	c6 01       	movw	r24, r12
    18d6:	b5 01       	movw	r22, r10
    18d8:	a4 01       	movw	r20, r8
    18da:	93 01       	movw	r18, r6
    18dc:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    18e0:	7b 01       	movw	r14, r22
    18e2:	8c 01       	movw	r16, r24
    18e4:	c6 01       	movw	r24, r12
    18e6:	b5 01       	movw	r22, r10
    18e8:	a4 01       	movw	r20, r8
    18ea:	93 01       	movw	r18, r6
    18ec:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    18f0:	c9 01       	movw	r24, r18
    18f2:	da 01       	movw	r26, r20
    18f4:	3c 01       	movw	r6, r24
    18f6:	4d 01       	movw	r8, r26
    18f8:	c4 01       	movw	r24, r8
    18fa:	b3 01       	movw	r22, r6
    18fc:	2d 96       	adiw	r28, 0x0d	; 13
    18fe:	2c ad       	ldd	r18, Y+60	; 0x3c
    1900:	3d ad       	ldd	r19, Y+61	; 0x3d
    1902:	4e ad       	ldd	r20, Y+62	; 0x3e
    1904:	5f ad       	ldd	r21, Y+63	; 0x3f
    1906:	2d 97       	sbiw	r28, 0x0d	; 13
    1908:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    190c:	9b 01       	movw	r18, r22
    190e:	ac 01       	movw	r20, r24
    1910:	87 01       	movw	r16, r14
    1912:	ff 24       	eor	r15, r15
    1914:	ee 24       	eor	r14, r14
    1916:	89 a1       	ldd	r24, Y+33	; 0x21
    1918:	9a a1       	ldd	r25, Y+34	; 0x22
    191a:	ab a1       	ldd	r26, Y+35	; 0x23
    191c:	bc a1       	ldd	r27, Y+36	; 0x24
    191e:	a0 70       	andi	r26, 0x00	; 0
    1920:	b0 70       	andi	r27, 0x00	; 0
    1922:	57 01       	movw	r10, r14
    1924:	68 01       	movw	r12, r16
    1926:	a8 2a       	or	r10, r24
    1928:	b9 2a       	or	r11, r25
    192a:	ca 2a       	or	r12, r26
    192c:	db 2a       	or	r13, r27
    192e:	a2 16       	cp	r10, r18
    1930:	b3 06       	cpc	r11, r19
    1932:	c4 06       	cpc	r12, r20
    1934:	d5 06       	cpc	r13, r21
    1936:	00 f5       	brcc	.+64     	; 0x1978 <__umoddi3+0xa64>
    1938:	08 94       	sec
    193a:	61 08       	sbc	r6, r1
    193c:	71 08       	sbc	r7, r1
    193e:	81 08       	sbc	r8, r1
    1940:	91 08       	sbc	r9, r1
    1942:	69 a5       	ldd	r22, Y+41	; 0x29
    1944:	7a a5       	ldd	r23, Y+42	; 0x2a
    1946:	8b a5       	ldd	r24, Y+43	; 0x2b
    1948:	9c a5       	ldd	r25, Y+44	; 0x2c
    194a:	a6 0e       	add	r10, r22
    194c:	b7 1e       	adc	r11, r23
    194e:	c8 1e       	adc	r12, r24
    1950:	d9 1e       	adc	r13, r25
    1952:	a6 16       	cp	r10, r22
    1954:	b7 06       	cpc	r11, r23
    1956:	c8 06       	cpc	r12, r24
    1958:	d9 06       	cpc	r13, r25
    195a:	70 f0       	brcs	.+28     	; 0x1978 <__umoddi3+0xa64>
    195c:	a2 16       	cp	r10, r18
    195e:	b3 06       	cpc	r11, r19
    1960:	c4 06       	cpc	r12, r20
    1962:	d5 06       	cpc	r13, r21
    1964:	48 f4       	brcc	.+18     	; 0x1978 <__umoddi3+0xa64>
    1966:	08 94       	sec
    1968:	61 08       	sbc	r6, r1
    196a:	71 08       	sbc	r7, r1
    196c:	81 08       	sbc	r8, r1
    196e:	91 08       	sbc	r9, r1
    1970:	a6 0e       	add	r10, r22
    1972:	b7 1e       	adc	r11, r23
    1974:	c8 1e       	adc	r12, r24
    1976:	d9 1e       	adc	r13, r25
    1978:	d6 01       	movw	r26, r12
    197a:	c5 01       	movw	r24, r10
    197c:	82 1b       	sub	r24, r18
    197e:	93 0b       	sbc	r25, r19
    1980:	a4 0b       	sbc	r26, r20
    1982:	b5 0b       	sbc	r27, r21
    1984:	89 8f       	std	Y+25, r24	; 0x19
    1986:	9a 8f       	std	Y+26, r25	; 0x1a
    1988:	ab 8f       	std	Y+27, r26	; 0x1b
    198a:	bc 8f       	std	Y+28, r27	; 0x1c
    198c:	d1 01       	movw	r26, r2
    198e:	99 27       	eor	r25, r25
    1990:	88 27       	eor	r24, r24
    1992:	84 01       	movw	r16, r8
    1994:	73 01       	movw	r14, r6
    1996:	e8 2a       	or	r14, r24
    1998:	f9 2a       	or	r15, r25
    199a:	0a 2b       	or	r16, r26
    199c:	1b 2b       	or	r17, r27
    199e:	4f ef       	ldi	r20, 0xFF	; 255
    19a0:	a4 2e       	mov	r10, r20
    19a2:	4f ef       	ldi	r20, 0xFF	; 255
    19a4:	b4 2e       	mov	r11, r20
    19a6:	c1 2c       	mov	r12, r1
    19a8:	d1 2c       	mov	r13, r1
    19aa:	ae 20       	and	r10, r14
    19ac:	bf 20       	and	r11, r15
    19ae:	c0 22       	and	r12, r16
    19b0:	d1 22       	and	r13, r17
    19b2:	78 01       	movw	r14, r16
    19b4:	00 27       	eor	r16, r16
    19b6:	11 27       	eor	r17, r17
    19b8:	6d a0       	ldd	r6, Y+37	; 0x25
    19ba:	7e a0       	ldd	r7, Y+38	; 0x26
    19bc:	8f a0       	ldd	r8, Y+39	; 0x27
    19be:	98 a4       	ldd	r9, Y+40	; 0x28
    19c0:	4f ef       	ldi	r20, 0xFF	; 255
    19c2:	5f ef       	ldi	r21, 0xFF	; 255
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	64 22       	and	r6, r20
    19ca:	75 22       	and	r7, r21
    19cc:	86 22       	and	r8, r22
    19ce:	97 22       	and	r9, r23
    19d0:	8d a1       	ldd	r24, Y+37	; 0x25
    19d2:	9e a1       	ldd	r25, Y+38	; 0x26
    19d4:	af a1       	ldd	r26, Y+39	; 0x27
    19d6:	b8 a5       	ldd	r27, Y+40	; 0x28
    19d8:	bd 01       	movw	r22, r26
    19da:	88 27       	eor	r24, r24
    19dc:	99 27       	eor	r25, r25
    19de:	65 96       	adiw	r28, 0x15	; 21
    19e0:	6c af       	std	Y+60, r22	; 0x3c
    19e2:	7d af       	std	Y+61, r23	; 0x3d
    19e4:	8e af       	std	Y+62, r24	; 0x3e
    19e6:	9f af       	std	Y+63, r25	; 0x3f
    19e8:	65 97       	sbiw	r28, 0x15	; 21
    19ea:	c6 01       	movw	r24, r12
    19ec:	b5 01       	movw	r22, r10
    19ee:	a4 01       	movw	r20, r8
    19f0:	93 01       	movw	r18, r6
    19f2:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    19f6:	61 96       	adiw	r28, 0x11	; 17
    19f8:	6c af       	std	Y+60, r22	; 0x3c
    19fa:	7d af       	std	Y+61, r23	; 0x3d
    19fc:	8e af       	std	Y+62, r24	; 0x3e
    19fe:	9f af       	std	Y+63, r25	; 0x3f
    1a00:	61 97       	sbiw	r28, 0x11	; 17
    1a02:	c6 01       	movw	r24, r12
    1a04:	b5 01       	movw	r22, r10
    1a06:	65 96       	adiw	r28, 0x15	; 21
    1a08:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a0a:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a0c:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a0e:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a10:	65 97       	sbiw	r28, 0x15	; 21
    1a12:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    1a16:	1b 01       	movw	r2, r22
    1a18:	2c 01       	movw	r4, r24
    1a1a:	c8 01       	movw	r24, r16
    1a1c:	b7 01       	movw	r22, r14
    1a1e:	a4 01       	movw	r20, r8
    1a20:	93 01       	movw	r18, r6
    1a22:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    1a26:	5b 01       	movw	r10, r22
    1a28:	6c 01       	movw	r12, r24
    1a2a:	c8 01       	movw	r24, r16
    1a2c:	b7 01       	movw	r22, r14
    1a2e:	65 96       	adiw	r28, 0x15	; 21
    1a30:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a32:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a34:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a36:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a38:	65 97       	sbiw	r28, 0x15	; 21
    1a3a:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    1a3e:	7b 01       	movw	r14, r22
    1a40:	8c 01       	movw	r16, r24
    1a42:	a6 01       	movw	r20, r12
    1a44:	95 01       	movw	r18, r10
    1a46:	22 0d       	add	r18, r2
    1a48:	33 1d       	adc	r19, r3
    1a4a:	44 1d       	adc	r20, r4
    1a4c:	55 1d       	adc	r21, r5
    1a4e:	61 96       	adiw	r28, 0x11	; 17
    1a50:	6c ac       	ldd	r6, Y+60	; 0x3c
    1a52:	7d ac       	ldd	r7, Y+61	; 0x3d
    1a54:	8e ac       	ldd	r8, Y+62	; 0x3e
    1a56:	9f ac       	ldd	r9, Y+63	; 0x3f
    1a58:	61 97       	sbiw	r28, 0x11	; 17
    1a5a:	c4 01       	movw	r24, r8
    1a5c:	aa 27       	eor	r26, r26
    1a5e:	bb 27       	eor	r27, r27
    1a60:	28 0f       	add	r18, r24
    1a62:	39 1f       	adc	r19, r25
    1a64:	4a 1f       	adc	r20, r26
    1a66:	5b 1f       	adc	r21, r27
    1a68:	2a 15       	cp	r18, r10
    1a6a:	3b 05       	cpc	r19, r11
    1a6c:	4c 05       	cpc	r20, r12
    1a6e:	5d 05       	cpc	r21, r13
    1a70:	48 f4       	brcc	.+18     	; 0x1a84 <__umoddi3+0xb70>
    1a72:	81 2c       	mov	r8, r1
    1a74:	91 2c       	mov	r9, r1
    1a76:	e1 e0       	ldi	r30, 0x01	; 1
    1a78:	ae 2e       	mov	r10, r30
    1a7a:	b1 2c       	mov	r11, r1
    1a7c:	e8 0c       	add	r14, r8
    1a7e:	f9 1c       	adc	r15, r9
    1a80:	0a 1d       	adc	r16, r10
    1a82:	1b 1d       	adc	r17, r11
    1a84:	ca 01       	movw	r24, r20
    1a86:	aa 27       	eor	r26, r26
    1a88:	bb 27       	eor	r27, r27
    1a8a:	57 01       	movw	r10, r14
    1a8c:	68 01       	movw	r12, r16
    1a8e:	a8 0e       	add	r10, r24
    1a90:	b9 1e       	adc	r11, r25
    1a92:	ca 1e       	adc	r12, r26
    1a94:	db 1e       	adc	r13, r27
    1a96:	a9 01       	movw	r20, r18
    1a98:	33 27       	eor	r19, r19
    1a9a:	22 27       	eor	r18, r18
    1a9c:	61 96       	adiw	r28, 0x11	; 17
    1a9e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1aa0:	9d ad       	ldd	r25, Y+61	; 0x3d
    1aa2:	ae ad       	ldd	r26, Y+62	; 0x3e
    1aa4:	bf ad       	ldd	r27, Y+63	; 0x3f
    1aa6:	61 97       	sbiw	r28, 0x11	; 17
    1aa8:	a0 70       	andi	r26, 0x00	; 0
    1aaa:	b0 70       	andi	r27, 0x00	; 0
    1aac:	28 0f       	add	r18, r24
    1aae:	39 1f       	adc	r19, r25
    1ab0:	4a 1f       	adc	r20, r26
    1ab2:	5b 1f       	adc	r21, r27
    1ab4:	e9 8c       	ldd	r14, Y+25	; 0x19
    1ab6:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1ab8:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1aba:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1abc:	ea 14       	cp	r14, r10
    1abe:	fb 04       	cpc	r15, r11
    1ac0:	0c 05       	cpc	r16, r12
    1ac2:	1d 05       	cpc	r17, r13
    1ac4:	70 f0       	brcs	.+28     	; 0x1ae2 <__umoddi3+0xbce>
    1ac6:	ae 14       	cp	r10, r14
    1ac8:	bf 04       	cpc	r11, r15
    1aca:	c0 06       	cpc	r12, r16
    1acc:	d1 06       	cpc	r13, r17
    1ace:	69 f5       	brne	.+90     	; 0x1b2a <__umoddi3+0xc16>
    1ad0:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1ad2:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1ad4:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1ad6:	98 a1       	ldd	r25, Y+32	; 0x20
    1ad8:	62 17       	cp	r22, r18
    1ada:	73 07       	cpc	r23, r19
    1adc:	84 07       	cpc	r24, r20
    1ade:	95 07       	cpc	r25, r21
    1ae0:	20 f5       	brcc	.+72     	; 0x1b2a <__umoddi3+0xc16>
    1ae2:	da 01       	movw	r26, r20
    1ae4:	c9 01       	movw	r24, r18
    1ae6:	6d a0       	ldd	r6, Y+37	; 0x25
    1ae8:	7e a0       	ldd	r7, Y+38	; 0x26
    1aea:	8f a0       	ldd	r8, Y+39	; 0x27
    1aec:	98 a4       	ldd	r9, Y+40	; 0x28
    1aee:	86 19       	sub	r24, r6
    1af0:	97 09       	sbc	r25, r7
    1af2:	a8 09       	sbc	r26, r8
    1af4:	b9 09       	sbc	r27, r9
    1af6:	e9 a4       	ldd	r14, Y+41	; 0x29
    1af8:	fa a4       	ldd	r15, Y+42	; 0x2a
    1afa:	0b a5       	ldd	r16, Y+43	; 0x2b
    1afc:	1c a5       	ldd	r17, Y+44	; 0x2c
    1afe:	ae 18       	sub	r10, r14
    1b00:	bf 08       	sbc	r11, r15
    1b02:	c0 0a       	sbc	r12, r16
    1b04:	d1 0a       	sbc	r13, r17
    1b06:	ee 24       	eor	r14, r14
    1b08:	ff 24       	eor	r15, r15
    1b0a:	87 01       	movw	r16, r14
    1b0c:	28 17       	cp	r18, r24
    1b0e:	39 07       	cpc	r19, r25
    1b10:	4a 07       	cpc	r20, r26
    1b12:	5b 07       	cpc	r21, r27
    1b14:	28 f4       	brcc	.+10     	; 0x1b20 <__umoddi3+0xc0c>
    1b16:	21 e0       	ldi	r18, 0x01	; 1
    1b18:	e2 2e       	mov	r14, r18
    1b1a:	f1 2c       	mov	r15, r1
    1b1c:	01 2d       	mov	r16, r1
    1b1e:	11 2d       	mov	r17, r1
    1b20:	ae 18       	sub	r10, r14
    1b22:	bf 08       	sbc	r11, r15
    1b24:	c0 0a       	sbc	r12, r16
    1b26:	d1 0a       	sbc	r13, r17
    1b28:	02 c0       	rjmp	.+4      	; 0x1b2e <__umoddi3+0xc1a>
    1b2a:	da 01       	movw	r26, r20
    1b2c:	c9 01       	movw	r24, r18
    1b2e:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1b30:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1b32:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1b34:	98 a0       	ldd	r9, Y+32	; 0x20
    1b36:	68 1a       	sub	r6, r24
    1b38:	79 0a       	sbc	r7, r25
    1b3a:	8a 0a       	sbc	r8, r26
    1b3c:	9b 0a       	sbc	r9, r27
    1b3e:	49 8d       	ldd	r20, Y+25	; 0x19
    1b40:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1b42:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1b44:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1b46:	4a 19       	sub	r20, r10
    1b48:	5b 09       	sbc	r21, r11
    1b4a:	6c 09       	sbc	r22, r12
    1b4c:	7d 09       	sbc	r23, r13
    1b4e:	5a 01       	movw	r10, r20
    1b50:	6b 01       	movw	r12, r22
    1b52:	22 24       	eor	r2, r2
    1b54:	33 24       	eor	r3, r3
    1b56:	21 01       	movw	r4, r2
    1b58:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b5a:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b5c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b5e:	98 a1       	ldd	r25, Y+32	; 0x20
    1b60:	66 15       	cp	r22, r6
    1b62:	77 05       	cpc	r23, r7
    1b64:	88 05       	cpc	r24, r8
    1b66:	99 05       	cpc	r25, r9
    1b68:	28 f4       	brcc	.+10     	; 0x1b74 <__umoddi3+0xc60>
    1b6a:	81 e0       	ldi	r24, 0x01	; 1
    1b6c:	28 2e       	mov	r2, r24
    1b6e:	31 2c       	mov	r3, r1
    1b70:	41 2c       	mov	r4, r1
    1b72:	51 2c       	mov	r5, r1
    1b74:	86 01       	movw	r16, r12
    1b76:	75 01       	movw	r14, r10
    1b78:	e2 18       	sub	r14, r2
    1b7a:	f3 08       	sbc	r15, r3
    1b7c:	04 09       	sbc	r16, r4
    1b7e:	15 09       	sbc	r17, r5
    1b80:	a8 01       	movw	r20, r16
    1b82:	97 01       	movw	r18, r14
    1b84:	66 96       	adiw	r28, 0x16	; 22
    1b86:	0f ac       	ldd	r0, Y+63	; 0x3f
    1b88:	66 97       	sbiw	r28, 0x16	; 22
    1b8a:	04 c0       	rjmp	.+8      	; 0x1b94 <__umoddi3+0xc80>
    1b8c:	22 0f       	add	r18, r18
    1b8e:	33 1f       	adc	r19, r19
    1b90:	44 1f       	adc	r20, r20
    1b92:	55 1f       	adc	r21, r21
    1b94:	0a 94       	dec	r0
    1b96:	d2 f7       	brpl	.-12     	; 0x1b8c <__umoddi3+0xc78>
    1b98:	d4 01       	movw	r26, r8
    1b9a:	c3 01       	movw	r24, r6
    1b9c:	67 96       	adiw	r28, 0x17	; 23
    1b9e:	0f ac       	ldd	r0, Y+63	; 0x3f
    1ba0:	67 97       	sbiw	r28, 0x17	; 23
    1ba2:	04 c0       	rjmp	.+8      	; 0x1bac <__umoddi3+0xc98>
    1ba4:	b6 95       	lsr	r27
    1ba6:	a7 95       	ror	r26
    1ba8:	97 95       	ror	r25
    1baa:	87 95       	ror	r24
    1bac:	0a 94       	dec	r0
    1bae:	d2 f7       	brpl	.-12     	; 0x1ba4 <__umoddi3+0xc90>
    1bb0:	28 2b       	or	r18, r24
    1bb2:	39 2b       	or	r19, r25
    1bb4:	4a 2b       	or	r20, r26
    1bb6:	5b 2b       	or	r21, r27
    1bb8:	29 8b       	std	Y+17, r18	; 0x11
    1bba:	3a 8b       	std	Y+18, r19	; 0x12
    1bbc:	4b 8b       	std	Y+19, r20	; 0x13
    1bbe:	5c 8b       	std	Y+20, r21	; 0x14
    1bc0:	67 96       	adiw	r28, 0x17	; 23
    1bc2:	0f ac       	ldd	r0, Y+63	; 0x3f
    1bc4:	67 97       	sbiw	r28, 0x17	; 23
    1bc6:	04 c0       	rjmp	.+8      	; 0x1bd0 <__umoddi3+0xcbc>
    1bc8:	16 95       	lsr	r17
    1bca:	07 95       	ror	r16
    1bcc:	f7 94       	ror	r15
    1bce:	e7 94       	ror	r14
    1bd0:	0a 94       	dec	r0
    1bd2:	d2 f7       	brpl	.-12     	; 0x1bc8 <__umoddi3+0xcb4>
    1bd4:	ed 8a       	std	Y+21, r14	; 0x15
    1bd6:	fe 8a       	std	Y+22, r15	; 0x16
    1bd8:	0f 8b       	std	Y+23, r16	; 0x17
    1bda:	18 8f       	std	Y+24, r17	; 0x18
    1bdc:	3a 89       	ldd	r19, Y+18	; 0x12
    1bde:	4b 89       	ldd	r20, Y+19	; 0x13
    1be0:	5c 89       	ldd	r21, Y+20	; 0x14
    1be2:	6e 2d       	mov	r22, r14
    1be4:	7e 89       	ldd	r23, Y+22	; 0x16
    1be6:	8f 89       	ldd	r24, Y+23	; 0x17
    1be8:	98 8d       	ldd	r25, Y+24	; 0x18
    1bea:	c5 5a       	subi	r28, 0xA5	; 165
    1bec:	df 4f       	sbci	r29, 0xFF	; 255
    1bee:	e2 e1       	ldi	r30, 0x12	; 18
    1bf0:	0c 94 5c 25 	jmp	0x4ab8	; 0x4ab8 <__epilogue_restores__>

00001bf4 <_fpadd_parts>:
    1bf4:	a0 e0       	ldi	r26, 0x00	; 0
    1bf6:	b0 e0       	ldi	r27, 0x00	; 0
    1bf8:	e0 e0       	ldi	r30, 0x00	; 0
    1bfa:	fe e0       	ldi	r31, 0x0E	; 14
    1bfc:	0c 94 40 25 	jmp	0x4a80	; 0x4a80 <__prologue_saves__>
    1c00:	dc 01       	movw	r26, r24
    1c02:	2b 01       	movw	r4, r22
    1c04:	fa 01       	movw	r30, r20
    1c06:	9c 91       	ld	r25, X
    1c08:	92 30       	cpi	r25, 0x02	; 2
    1c0a:	08 f4       	brcc	.+2      	; 0x1c0e <_fpadd_parts+0x1a>
    1c0c:	39 c1       	rjmp	.+626    	; 0x1e80 <_fpadd_parts+0x28c>
    1c0e:	eb 01       	movw	r28, r22
    1c10:	88 81       	ld	r24, Y
    1c12:	82 30       	cpi	r24, 0x02	; 2
    1c14:	08 f4       	brcc	.+2      	; 0x1c18 <_fpadd_parts+0x24>
    1c16:	33 c1       	rjmp	.+614    	; 0x1e7e <_fpadd_parts+0x28a>
    1c18:	94 30       	cpi	r25, 0x04	; 4
    1c1a:	69 f4       	brne	.+26     	; 0x1c36 <_fpadd_parts+0x42>
    1c1c:	84 30       	cpi	r24, 0x04	; 4
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <_fpadd_parts+0x2e>
    1c20:	2f c1       	rjmp	.+606    	; 0x1e80 <_fpadd_parts+0x28c>
    1c22:	11 96       	adiw	r26, 0x01	; 1
    1c24:	9c 91       	ld	r25, X
    1c26:	11 97       	sbiw	r26, 0x01	; 1
    1c28:	89 81       	ldd	r24, Y+1	; 0x01
    1c2a:	98 17       	cp	r25, r24
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <_fpadd_parts+0x3c>
    1c2e:	28 c1       	rjmp	.+592    	; 0x1e80 <_fpadd_parts+0x28c>
    1c30:	a1 e8       	ldi	r26, 0x81	; 129
    1c32:	b0 e0       	ldi	r27, 0x00	; 0
    1c34:	25 c1       	rjmp	.+586    	; 0x1e80 <_fpadd_parts+0x28c>
    1c36:	84 30       	cpi	r24, 0x04	; 4
    1c38:	09 f4       	brne	.+2      	; 0x1c3c <_fpadd_parts+0x48>
    1c3a:	21 c1       	rjmp	.+578    	; 0x1e7e <_fpadd_parts+0x28a>
    1c3c:	82 30       	cpi	r24, 0x02	; 2
    1c3e:	a9 f4       	brne	.+42     	; 0x1c6a <_fpadd_parts+0x76>
    1c40:	92 30       	cpi	r25, 0x02	; 2
    1c42:	09 f0       	breq	.+2      	; 0x1c46 <_fpadd_parts+0x52>
    1c44:	1d c1       	rjmp	.+570    	; 0x1e80 <_fpadd_parts+0x28c>
    1c46:	9a 01       	movw	r18, r20
    1c48:	ad 01       	movw	r20, r26
    1c4a:	88 e0       	ldi	r24, 0x08	; 8
    1c4c:	ea 01       	movw	r28, r20
    1c4e:	09 90       	ld	r0, Y+
    1c50:	ae 01       	movw	r20, r28
    1c52:	e9 01       	movw	r28, r18
    1c54:	09 92       	st	Y+, r0
    1c56:	9e 01       	movw	r18, r28
    1c58:	81 50       	subi	r24, 0x01	; 1
    1c5a:	c1 f7       	brne	.-16     	; 0x1c4c <_fpadd_parts+0x58>
    1c5c:	e2 01       	movw	r28, r4
    1c5e:	89 81       	ldd	r24, Y+1	; 0x01
    1c60:	11 96       	adiw	r26, 0x01	; 1
    1c62:	9c 91       	ld	r25, X
    1c64:	89 23       	and	r24, r25
    1c66:	81 83       	std	Z+1, r24	; 0x01
    1c68:	08 c1       	rjmp	.+528    	; 0x1e7a <_fpadd_parts+0x286>
    1c6a:	92 30       	cpi	r25, 0x02	; 2
    1c6c:	09 f4       	brne	.+2      	; 0x1c70 <_fpadd_parts+0x7c>
    1c6e:	07 c1       	rjmp	.+526    	; 0x1e7e <_fpadd_parts+0x28a>
    1c70:	12 96       	adiw	r26, 0x02	; 2
    1c72:	2d 90       	ld	r2, X+
    1c74:	3c 90       	ld	r3, X
    1c76:	13 97       	sbiw	r26, 0x03	; 3
    1c78:	eb 01       	movw	r28, r22
    1c7a:	8a 81       	ldd	r24, Y+2	; 0x02
    1c7c:	9b 81       	ldd	r25, Y+3	; 0x03
    1c7e:	14 96       	adiw	r26, 0x04	; 4
    1c80:	ad 90       	ld	r10, X+
    1c82:	bd 90       	ld	r11, X+
    1c84:	cd 90       	ld	r12, X+
    1c86:	dc 90       	ld	r13, X
    1c88:	17 97       	sbiw	r26, 0x07	; 7
    1c8a:	ec 80       	ldd	r14, Y+4	; 0x04
    1c8c:	fd 80       	ldd	r15, Y+5	; 0x05
    1c8e:	0e 81       	ldd	r16, Y+6	; 0x06
    1c90:	1f 81       	ldd	r17, Y+7	; 0x07
    1c92:	91 01       	movw	r18, r2
    1c94:	28 1b       	sub	r18, r24
    1c96:	39 0b       	sbc	r19, r25
    1c98:	b9 01       	movw	r22, r18
    1c9a:	37 ff       	sbrs	r19, 7
    1c9c:	04 c0       	rjmp	.+8      	; 0x1ca6 <_fpadd_parts+0xb2>
    1c9e:	66 27       	eor	r22, r22
    1ca0:	77 27       	eor	r23, r23
    1ca2:	62 1b       	sub	r22, r18
    1ca4:	73 0b       	sbc	r23, r19
    1ca6:	60 32       	cpi	r22, 0x20	; 32
    1ca8:	71 05       	cpc	r23, r1
    1caa:	0c f0       	brlt	.+2      	; 0x1cae <_fpadd_parts+0xba>
    1cac:	61 c0       	rjmp	.+194    	; 0x1d70 <_fpadd_parts+0x17c>
    1cae:	12 16       	cp	r1, r18
    1cb0:	13 06       	cpc	r1, r19
    1cb2:	6c f5       	brge	.+90     	; 0x1d0e <_fpadd_parts+0x11a>
    1cb4:	37 01       	movw	r6, r14
    1cb6:	48 01       	movw	r8, r16
    1cb8:	06 2e       	mov	r0, r22
    1cba:	04 c0       	rjmp	.+8      	; 0x1cc4 <_fpadd_parts+0xd0>
    1cbc:	96 94       	lsr	r9
    1cbe:	87 94       	ror	r8
    1cc0:	77 94       	ror	r7
    1cc2:	67 94       	ror	r6
    1cc4:	0a 94       	dec	r0
    1cc6:	d2 f7       	brpl	.-12     	; 0x1cbc <_fpadd_parts+0xc8>
    1cc8:	21 e0       	ldi	r18, 0x01	; 1
    1cca:	30 e0       	ldi	r19, 0x00	; 0
    1ccc:	40 e0       	ldi	r20, 0x00	; 0
    1cce:	50 e0       	ldi	r21, 0x00	; 0
    1cd0:	04 c0       	rjmp	.+8      	; 0x1cda <_fpadd_parts+0xe6>
    1cd2:	22 0f       	add	r18, r18
    1cd4:	33 1f       	adc	r19, r19
    1cd6:	44 1f       	adc	r20, r20
    1cd8:	55 1f       	adc	r21, r21
    1cda:	6a 95       	dec	r22
    1cdc:	d2 f7       	brpl	.-12     	; 0x1cd2 <_fpadd_parts+0xde>
    1cde:	21 50       	subi	r18, 0x01	; 1
    1ce0:	30 40       	sbci	r19, 0x00	; 0
    1ce2:	40 40       	sbci	r20, 0x00	; 0
    1ce4:	50 40       	sbci	r21, 0x00	; 0
    1ce6:	2e 21       	and	r18, r14
    1ce8:	3f 21       	and	r19, r15
    1cea:	40 23       	and	r20, r16
    1cec:	51 23       	and	r21, r17
    1cee:	21 15       	cp	r18, r1
    1cf0:	31 05       	cpc	r19, r1
    1cf2:	41 05       	cpc	r20, r1
    1cf4:	51 05       	cpc	r21, r1
    1cf6:	21 f0       	breq	.+8      	; 0x1d00 <_fpadd_parts+0x10c>
    1cf8:	21 e0       	ldi	r18, 0x01	; 1
    1cfa:	30 e0       	ldi	r19, 0x00	; 0
    1cfc:	40 e0       	ldi	r20, 0x00	; 0
    1cfe:	50 e0       	ldi	r21, 0x00	; 0
    1d00:	79 01       	movw	r14, r18
    1d02:	8a 01       	movw	r16, r20
    1d04:	e6 28       	or	r14, r6
    1d06:	f7 28       	or	r15, r7
    1d08:	08 29       	or	r16, r8
    1d0a:	19 29       	or	r17, r9
    1d0c:	3c c0       	rjmp	.+120    	; 0x1d86 <_fpadd_parts+0x192>
    1d0e:	23 2b       	or	r18, r19
    1d10:	d1 f1       	breq	.+116    	; 0x1d86 <_fpadd_parts+0x192>
    1d12:	26 0e       	add	r2, r22
    1d14:	37 1e       	adc	r3, r23
    1d16:	35 01       	movw	r6, r10
    1d18:	46 01       	movw	r8, r12
    1d1a:	06 2e       	mov	r0, r22
    1d1c:	04 c0       	rjmp	.+8      	; 0x1d26 <_fpadd_parts+0x132>
    1d1e:	96 94       	lsr	r9
    1d20:	87 94       	ror	r8
    1d22:	77 94       	ror	r7
    1d24:	67 94       	ror	r6
    1d26:	0a 94       	dec	r0
    1d28:	d2 f7       	brpl	.-12     	; 0x1d1e <_fpadd_parts+0x12a>
    1d2a:	21 e0       	ldi	r18, 0x01	; 1
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	40 e0       	ldi	r20, 0x00	; 0
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	04 c0       	rjmp	.+8      	; 0x1d3c <_fpadd_parts+0x148>
    1d34:	22 0f       	add	r18, r18
    1d36:	33 1f       	adc	r19, r19
    1d38:	44 1f       	adc	r20, r20
    1d3a:	55 1f       	adc	r21, r21
    1d3c:	6a 95       	dec	r22
    1d3e:	d2 f7       	brpl	.-12     	; 0x1d34 <_fpadd_parts+0x140>
    1d40:	21 50       	subi	r18, 0x01	; 1
    1d42:	30 40       	sbci	r19, 0x00	; 0
    1d44:	40 40       	sbci	r20, 0x00	; 0
    1d46:	50 40       	sbci	r21, 0x00	; 0
    1d48:	2a 21       	and	r18, r10
    1d4a:	3b 21       	and	r19, r11
    1d4c:	4c 21       	and	r20, r12
    1d4e:	5d 21       	and	r21, r13
    1d50:	21 15       	cp	r18, r1
    1d52:	31 05       	cpc	r19, r1
    1d54:	41 05       	cpc	r20, r1
    1d56:	51 05       	cpc	r21, r1
    1d58:	21 f0       	breq	.+8      	; 0x1d62 <_fpadd_parts+0x16e>
    1d5a:	21 e0       	ldi	r18, 0x01	; 1
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	40 e0       	ldi	r20, 0x00	; 0
    1d60:	50 e0       	ldi	r21, 0x00	; 0
    1d62:	59 01       	movw	r10, r18
    1d64:	6a 01       	movw	r12, r20
    1d66:	a6 28       	or	r10, r6
    1d68:	b7 28       	or	r11, r7
    1d6a:	c8 28       	or	r12, r8
    1d6c:	d9 28       	or	r13, r9
    1d6e:	0b c0       	rjmp	.+22     	; 0x1d86 <_fpadd_parts+0x192>
    1d70:	82 15       	cp	r24, r2
    1d72:	93 05       	cpc	r25, r3
    1d74:	2c f0       	brlt	.+10     	; 0x1d80 <_fpadd_parts+0x18c>
    1d76:	1c 01       	movw	r2, r24
    1d78:	aa 24       	eor	r10, r10
    1d7a:	bb 24       	eor	r11, r11
    1d7c:	65 01       	movw	r12, r10
    1d7e:	03 c0       	rjmp	.+6      	; 0x1d86 <_fpadd_parts+0x192>
    1d80:	ee 24       	eor	r14, r14
    1d82:	ff 24       	eor	r15, r15
    1d84:	87 01       	movw	r16, r14
    1d86:	11 96       	adiw	r26, 0x01	; 1
    1d88:	9c 91       	ld	r25, X
    1d8a:	d2 01       	movw	r26, r4
    1d8c:	11 96       	adiw	r26, 0x01	; 1
    1d8e:	8c 91       	ld	r24, X
    1d90:	98 17       	cp	r25, r24
    1d92:	09 f4       	brne	.+2      	; 0x1d96 <_fpadd_parts+0x1a2>
    1d94:	45 c0       	rjmp	.+138    	; 0x1e20 <_fpadd_parts+0x22c>
    1d96:	99 23       	and	r25, r25
    1d98:	39 f0       	breq	.+14     	; 0x1da8 <_fpadd_parts+0x1b4>
    1d9a:	a8 01       	movw	r20, r16
    1d9c:	97 01       	movw	r18, r14
    1d9e:	2a 19       	sub	r18, r10
    1da0:	3b 09       	sbc	r19, r11
    1da2:	4c 09       	sbc	r20, r12
    1da4:	5d 09       	sbc	r21, r13
    1da6:	06 c0       	rjmp	.+12     	; 0x1db4 <_fpadd_parts+0x1c0>
    1da8:	a6 01       	movw	r20, r12
    1daa:	95 01       	movw	r18, r10
    1dac:	2e 19       	sub	r18, r14
    1dae:	3f 09       	sbc	r19, r15
    1db0:	40 0b       	sbc	r20, r16
    1db2:	51 0b       	sbc	r21, r17
    1db4:	57 fd       	sbrc	r21, 7
    1db6:	08 c0       	rjmp	.+16     	; 0x1dc8 <_fpadd_parts+0x1d4>
    1db8:	11 82       	std	Z+1, r1	; 0x01
    1dba:	33 82       	std	Z+3, r3	; 0x03
    1dbc:	22 82       	std	Z+2, r2	; 0x02
    1dbe:	24 83       	std	Z+4, r18	; 0x04
    1dc0:	35 83       	std	Z+5, r19	; 0x05
    1dc2:	46 83       	std	Z+6, r20	; 0x06
    1dc4:	57 83       	std	Z+7, r21	; 0x07
    1dc6:	1d c0       	rjmp	.+58     	; 0x1e02 <_fpadd_parts+0x20e>
    1dc8:	81 e0       	ldi	r24, 0x01	; 1
    1dca:	81 83       	std	Z+1, r24	; 0x01
    1dcc:	33 82       	std	Z+3, r3	; 0x03
    1dce:	22 82       	std	Z+2, r2	; 0x02
    1dd0:	88 27       	eor	r24, r24
    1dd2:	99 27       	eor	r25, r25
    1dd4:	dc 01       	movw	r26, r24
    1dd6:	82 1b       	sub	r24, r18
    1dd8:	93 0b       	sbc	r25, r19
    1dda:	a4 0b       	sbc	r26, r20
    1ddc:	b5 0b       	sbc	r27, r21
    1dde:	84 83       	std	Z+4, r24	; 0x04
    1de0:	95 83       	std	Z+5, r25	; 0x05
    1de2:	a6 83       	std	Z+6, r26	; 0x06
    1de4:	b7 83       	std	Z+7, r27	; 0x07
    1de6:	0d c0       	rjmp	.+26     	; 0x1e02 <_fpadd_parts+0x20e>
    1de8:	22 0f       	add	r18, r18
    1dea:	33 1f       	adc	r19, r19
    1dec:	44 1f       	adc	r20, r20
    1dee:	55 1f       	adc	r21, r21
    1df0:	24 83       	std	Z+4, r18	; 0x04
    1df2:	35 83       	std	Z+5, r19	; 0x05
    1df4:	46 83       	std	Z+6, r20	; 0x06
    1df6:	57 83       	std	Z+7, r21	; 0x07
    1df8:	82 81       	ldd	r24, Z+2	; 0x02
    1dfa:	93 81       	ldd	r25, Z+3	; 0x03
    1dfc:	01 97       	sbiw	r24, 0x01	; 1
    1dfe:	93 83       	std	Z+3, r25	; 0x03
    1e00:	82 83       	std	Z+2, r24	; 0x02
    1e02:	24 81       	ldd	r18, Z+4	; 0x04
    1e04:	35 81       	ldd	r19, Z+5	; 0x05
    1e06:	46 81       	ldd	r20, Z+6	; 0x06
    1e08:	57 81       	ldd	r21, Z+7	; 0x07
    1e0a:	da 01       	movw	r26, r20
    1e0c:	c9 01       	movw	r24, r18
    1e0e:	01 97       	sbiw	r24, 0x01	; 1
    1e10:	a1 09       	sbc	r26, r1
    1e12:	b1 09       	sbc	r27, r1
    1e14:	8f 5f       	subi	r24, 0xFF	; 255
    1e16:	9f 4f       	sbci	r25, 0xFF	; 255
    1e18:	af 4f       	sbci	r26, 0xFF	; 255
    1e1a:	bf 43       	sbci	r27, 0x3F	; 63
    1e1c:	28 f3       	brcs	.-54     	; 0x1de8 <_fpadd_parts+0x1f4>
    1e1e:	0b c0       	rjmp	.+22     	; 0x1e36 <_fpadd_parts+0x242>
    1e20:	91 83       	std	Z+1, r25	; 0x01
    1e22:	33 82       	std	Z+3, r3	; 0x03
    1e24:	22 82       	std	Z+2, r2	; 0x02
    1e26:	ea 0c       	add	r14, r10
    1e28:	fb 1c       	adc	r15, r11
    1e2a:	0c 1d       	adc	r16, r12
    1e2c:	1d 1d       	adc	r17, r13
    1e2e:	e4 82       	std	Z+4, r14	; 0x04
    1e30:	f5 82       	std	Z+5, r15	; 0x05
    1e32:	06 83       	std	Z+6, r16	; 0x06
    1e34:	17 83       	std	Z+7, r17	; 0x07
    1e36:	83 e0       	ldi	r24, 0x03	; 3
    1e38:	80 83       	st	Z, r24
    1e3a:	24 81       	ldd	r18, Z+4	; 0x04
    1e3c:	35 81       	ldd	r19, Z+5	; 0x05
    1e3e:	46 81       	ldd	r20, Z+6	; 0x06
    1e40:	57 81       	ldd	r21, Z+7	; 0x07
    1e42:	57 ff       	sbrs	r21, 7
    1e44:	1a c0       	rjmp	.+52     	; 0x1e7a <_fpadd_parts+0x286>
    1e46:	c9 01       	movw	r24, r18
    1e48:	aa 27       	eor	r26, r26
    1e4a:	97 fd       	sbrc	r25, 7
    1e4c:	a0 95       	com	r26
    1e4e:	ba 2f       	mov	r27, r26
    1e50:	81 70       	andi	r24, 0x01	; 1
    1e52:	90 70       	andi	r25, 0x00	; 0
    1e54:	a0 70       	andi	r26, 0x00	; 0
    1e56:	b0 70       	andi	r27, 0x00	; 0
    1e58:	56 95       	lsr	r21
    1e5a:	47 95       	ror	r20
    1e5c:	37 95       	ror	r19
    1e5e:	27 95       	ror	r18
    1e60:	82 2b       	or	r24, r18
    1e62:	93 2b       	or	r25, r19
    1e64:	a4 2b       	or	r26, r20
    1e66:	b5 2b       	or	r27, r21
    1e68:	84 83       	std	Z+4, r24	; 0x04
    1e6a:	95 83       	std	Z+5, r25	; 0x05
    1e6c:	a6 83       	std	Z+6, r26	; 0x06
    1e6e:	b7 83       	std	Z+7, r27	; 0x07
    1e70:	82 81       	ldd	r24, Z+2	; 0x02
    1e72:	93 81       	ldd	r25, Z+3	; 0x03
    1e74:	01 96       	adiw	r24, 0x01	; 1
    1e76:	93 83       	std	Z+3, r25	; 0x03
    1e78:	82 83       	std	Z+2, r24	; 0x02
    1e7a:	df 01       	movw	r26, r30
    1e7c:	01 c0       	rjmp	.+2      	; 0x1e80 <_fpadd_parts+0x28c>
    1e7e:	d2 01       	movw	r26, r4
    1e80:	cd 01       	movw	r24, r26
    1e82:	cd b7       	in	r28, 0x3d	; 61
    1e84:	de b7       	in	r29, 0x3e	; 62
    1e86:	e2 e1       	ldi	r30, 0x12	; 18
    1e88:	0c 94 5c 25 	jmp	0x4ab8	; 0x4ab8 <__epilogue_restores__>

00001e8c <__subsf3>:
    1e8c:	a0 e2       	ldi	r26, 0x20	; 32
    1e8e:	b0 e0       	ldi	r27, 0x00	; 0
    1e90:	ec e4       	ldi	r30, 0x4C	; 76
    1e92:	ff e0       	ldi	r31, 0x0F	; 15
    1e94:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__prologue_saves__+0x18>
    1e98:	69 83       	std	Y+1, r22	; 0x01
    1e9a:	7a 83       	std	Y+2, r23	; 0x02
    1e9c:	8b 83       	std	Y+3, r24	; 0x03
    1e9e:	9c 83       	std	Y+4, r25	; 0x04
    1ea0:	2d 83       	std	Y+5, r18	; 0x05
    1ea2:	3e 83       	std	Y+6, r19	; 0x06
    1ea4:	4f 83       	std	Y+7, r20	; 0x07
    1ea6:	58 87       	std	Y+8, r21	; 0x08
    1ea8:	e9 e0       	ldi	r30, 0x09	; 9
    1eaa:	ee 2e       	mov	r14, r30
    1eac:	f1 2c       	mov	r15, r1
    1eae:	ec 0e       	add	r14, r28
    1eb0:	fd 1e       	adc	r15, r29
    1eb2:	ce 01       	movw	r24, r28
    1eb4:	01 96       	adiw	r24, 0x01	; 1
    1eb6:	b7 01       	movw	r22, r14
    1eb8:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1ebc:	8e 01       	movw	r16, r28
    1ebe:	0f 5e       	subi	r16, 0xEF	; 239
    1ec0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec2:	ce 01       	movw	r24, r28
    1ec4:	05 96       	adiw	r24, 0x05	; 5
    1ec6:	b8 01       	movw	r22, r16
    1ec8:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1ecc:	8a 89       	ldd	r24, Y+18	; 0x12
    1ece:	91 e0       	ldi	r25, 0x01	; 1
    1ed0:	89 27       	eor	r24, r25
    1ed2:	8a 8b       	std	Y+18, r24	; 0x12
    1ed4:	c7 01       	movw	r24, r14
    1ed6:	b8 01       	movw	r22, r16
    1ed8:	ae 01       	movw	r20, r28
    1eda:	47 5e       	subi	r20, 0xE7	; 231
    1edc:	5f 4f       	sbci	r21, 0xFF	; 255
    1ede:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <_fpadd_parts>
    1ee2:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    1ee6:	a0 96       	adiw	r28, 0x20	; 32
    1ee8:	e6 e0       	ldi	r30, 0x06	; 6
    1eea:	0c 94 68 25 	jmp	0x4ad0	; 0x4ad0 <__epilogue_restores__+0x18>

00001eee <__addsf3>:
    1eee:	a0 e2       	ldi	r26, 0x20	; 32
    1ef0:	b0 e0       	ldi	r27, 0x00	; 0
    1ef2:	ed e7       	ldi	r30, 0x7D	; 125
    1ef4:	ff e0       	ldi	r31, 0x0F	; 15
    1ef6:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__prologue_saves__+0x18>
    1efa:	69 83       	std	Y+1, r22	; 0x01
    1efc:	7a 83       	std	Y+2, r23	; 0x02
    1efe:	8b 83       	std	Y+3, r24	; 0x03
    1f00:	9c 83       	std	Y+4, r25	; 0x04
    1f02:	2d 83       	std	Y+5, r18	; 0x05
    1f04:	3e 83       	std	Y+6, r19	; 0x06
    1f06:	4f 83       	std	Y+7, r20	; 0x07
    1f08:	58 87       	std	Y+8, r21	; 0x08
    1f0a:	f9 e0       	ldi	r31, 0x09	; 9
    1f0c:	ef 2e       	mov	r14, r31
    1f0e:	f1 2c       	mov	r15, r1
    1f10:	ec 0e       	add	r14, r28
    1f12:	fd 1e       	adc	r15, r29
    1f14:	ce 01       	movw	r24, r28
    1f16:	01 96       	adiw	r24, 0x01	; 1
    1f18:	b7 01       	movw	r22, r14
    1f1a:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1f1e:	8e 01       	movw	r16, r28
    1f20:	0f 5e       	subi	r16, 0xEF	; 239
    1f22:	1f 4f       	sbci	r17, 0xFF	; 255
    1f24:	ce 01       	movw	r24, r28
    1f26:	05 96       	adiw	r24, 0x05	; 5
    1f28:	b8 01       	movw	r22, r16
    1f2a:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1f2e:	c7 01       	movw	r24, r14
    1f30:	b8 01       	movw	r22, r16
    1f32:	ae 01       	movw	r20, r28
    1f34:	47 5e       	subi	r20, 0xE7	; 231
    1f36:	5f 4f       	sbci	r21, 0xFF	; 255
    1f38:	0e 94 fa 0d 	call	0x1bf4	; 0x1bf4 <_fpadd_parts>
    1f3c:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    1f40:	a0 96       	adiw	r28, 0x20	; 32
    1f42:	e6 e0       	ldi	r30, 0x06	; 6
    1f44:	0c 94 68 25 	jmp	0x4ad0	; 0x4ad0 <__epilogue_restores__+0x18>

00001f48 <__mulsf3>:
    1f48:	a0 e2       	ldi	r26, 0x20	; 32
    1f4a:	b0 e0       	ldi	r27, 0x00	; 0
    1f4c:	ea ea       	ldi	r30, 0xAA	; 170
    1f4e:	ff e0       	ldi	r31, 0x0F	; 15
    1f50:	0c 94 40 25 	jmp	0x4a80	; 0x4a80 <__prologue_saves__>
    1f54:	69 83       	std	Y+1, r22	; 0x01
    1f56:	7a 83       	std	Y+2, r23	; 0x02
    1f58:	8b 83       	std	Y+3, r24	; 0x03
    1f5a:	9c 83       	std	Y+4, r25	; 0x04
    1f5c:	2d 83       	std	Y+5, r18	; 0x05
    1f5e:	3e 83       	std	Y+6, r19	; 0x06
    1f60:	4f 83       	std	Y+7, r20	; 0x07
    1f62:	58 87       	std	Y+8, r21	; 0x08
    1f64:	ce 01       	movw	r24, r28
    1f66:	01 96       	adiw	r24, 0x01	; 1
    1f68:	be 01       	movw	r22, r28
    1f6a:	67 5f       	subi	r22, 0xF7	; 247
    1f6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1f6e:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1f72:	ce 01       	movw	r24, r28
    1f74:	05 96       	adiw	r24, 0x05	; 5
    1f76:	be 01       	movw	r22, r28
    1f78:	6f 5e       	subi	r22, 0xEF	; 239
    1f7a:	7f 4f       	sbci	r23, 0xFF	; 255
    1f7c:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    1f80:	99 85       	ldd	r25, Y+9	; 0x09
    1f82:	92 30       	cpi	r25, 0x02	; 2
    1f84:	88 f0       	brcs	.+34     	; 0x1fa8 <__mulsf3+0x60>
    1f86:	89 89       	ldd	r24, Y+17	; 0x11
    1f88:	82 30       	cpi	r24, 0x02	; 2
    1f8a:	c8 f0       	brcs	.+50     	; 0x1fbe <__mulsf3+0x76>
    1f8c:	94 30       	cpi	r25, 0x04	; 4
    1f8e:	19 f4       	brne	.+6      	; 0x1f96 <__mulsf3+0x4e>
    1f90:	82 30       	cpi	r24, 0x02	; 2
    1f92:	51 f4       	brne	.+20     	; 0x1fa8 <__mulsf3+0x60>
    1f94:	04 c0       	rjmp	.+8      	; 0x1f9e <__mulsf3+0x56>
    1f96:	84 30       	cpi	r24, 0x04	; 4
    1f98:	29 f4       	brne	.+10     	; 0x1fa4 <__mulsf3+0x5c>
    1f9a:	92 30       	cpi	r25, 0x02	; 2
    1f9c:	81 f4       	brne	.+32     	; 0x1fbe <__mulsf3+0x76>
    1f9e:	81 e8       	ldi	r24, 0x81	; 129
    1fa0:	90 e0       	ldi	r25, 0x00	; 0
    1fa2:	c6 c0       	rjmp	.+396    	; 0x2130 <__mulsf3+0x1e8>
    1fa4:	92 30       	cpi	r25, 0x02	; 2
    1fa6:	49 f4       	brne	.+18     	; 0x1fba <__mulsf3+0x72>
    1fa8:	20 e0       	ldi	r18, 0x00	; 0
    1faa:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fac:	8a 89       	ldd	r24, Y+18	; 0x12
    1fae:	98 13       	cpse	r25, r24
    1fb0:	21 e0       	ldi	r18, 0x01	; 1
    1fb2:	2a 87       	std	Y+10, r18	; 0x0a
    1fb4:	ce 01       	movw	r24, r28
    1fb6:	09 96       	adiw	r24, 0x09	; 9
    1fb8:	bb c0       	rjmp	.+374    	; 0x2130 <__mulsf3+0x1e8>
    1fba:	82 30       	cpi	r24, 0x02	; 2
    1fbc:	49 f4       	brne	.+18     	; 0x1fd0 <__mulsf3+0x88>
    1fbe:	20 e0       	ldi	r18, 0x00	; 0
    1fc0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1fc2:	8a 89       	ldd	r24, Y+18	; 0x12
    1fc4:	98 13       	cpse	r25, r24
    1fc6:	21 e0       	ldi	r18, 0x01	; 1
    1fc8:	2a 8b       	std	Y+18, r18	; 0x12
    1fca:	ce 01       	movw	r24, r28
    1fcc:	41 96       	adiw	r24, 0x11	; 17
    1fce:	b0 c0       	rjmp	.+352    	; 0x2130 <__mulsf3+0x1e8>
    1fd0:	2d 84       	ldd	r2, Y+13	; 0x0d
    1fd2:	3e 84       	ldd	r3, Y+14	; 0x0e
    1fd4:	4f 84       	ldd	r4, Y+15	; 0x0f
    1fd6:	58 88       	ldd	r5, Y+16	; 0x10
    1fd8:	6d 88       	ldd	r6, Y+21	; 0x15
    1fda:	7e 88       	ldd	r7, Y+22	; 0x16
    1fdc:	8f 88       	ldd	r8, Y+23	; 0x17
    1fde:	98 8c       	ldd	r9, Y+24	; 0x18
    1fe0:	ee 24       	eor	r14, r14
    1fe2:	ff 24       	eor	r15, r15
    1fe4:	87 01       	movw	r16, r14
    1fe6:	aa 24       	eor	r10, r10
    1fe8:	bb 24       	eor	r11, r11
    1fea:	65 01       	movw	r12, r10
    1fec:	40 e0       	ldi	r20, 0x00	; 0
    1fee:	50 e0       	ldi	r21, 0x00	; 0
    1ff0:	60 e0       	ldi	r22, 0x00	; 0
    1ff2:	70 e0       	ldi	r23, 0x00	; 0
    1ff4:	e0 e0       	ldi	r30, 0x00	; 0
    1ff6:	f0 e0       	ldi	r31, 0x00	; 0
    1ff8:	c1 01       	movw	r24, r2
    1ffa:	81 70       	andi	r24, 0x01	; 1
    1ffc:	90 70       	andi	r25, 0x00	; 0
    1ffe:	89 2b       	or	r24, r25
    2000:	e9 f0       	breq	.+58     	; 0x203c <__mulsf3+0xf4>
    2002:	e6 0c       	add	r14, r6
    2004:	f7 1c       	adc	r15, r7
    2006:	08 1d       	adc	r16, r8
    2008:	19 1d       	adc	r17, r9
    200a:	9a 01       	movw	r18, r20
    200c:	ab 01       	movw	r20, r22
    200e:	2a 0d       	add	r18, r10
    2010:	3b 1d       	adc	r19, r11
    2012:	4c 1d       	adc	r20, r12
    2014:	5d 1d       	adc	r21, r13
    2016:	80 e0       	ldi	r24, 0x00	; 0
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	a0 e0       	ldi	r26, 0x00	; 0
    201c:	b0 e0       	ldi	r27, 0x00	; 0
    201e:	e6 14       	cp	r14, r6
    2020:	f7 04       	cpc	r15, r7
    2022:	08 05       	cpc	r16, r8
    2024:	19 05       	cpc	r17, r9
    2026:	20 f4       	brcc	.+8      	; 0x2030 <__mulsf3+0xe8>
    2028:	81 e0       	ldi	r24, 0x01	; 1
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	a0 e0       	ldi	r26, 0x00	; 0
    202e:	b0 e0       	ldi	r27, 0x00	; 0
    2030:	ba 01       	movw	r22, r20
    2032:	a9 01       	movw	r20, r18
    2034:	48 0f       	add	r20, r24
    2036:	59 1f       	adc	r21, r25
    2038:	6a 1f       	adc	r22, r26
    203a:	7b 1f       	adc	r23, r27
    203c:	aa 0c       	add	r10, r10
    203e:	bb 1c       	adc	r11, r11
    2040:	cc 1c       	adc	r12, r12
    2042:	dd 1c       	adc	r13, r13
    2044:	97 fe       	sbrs	r9, 7
    2046:	08 c0       	rjmp	.+16     	; 0x2058 <__mulsf3+0x110>
    2048:	81 e0       	ldi	r24, 0x01	; 1
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	a0 e0       	ldi	r26, 0x00	; 0
    204e:	b0 e0       	ldi	r27, 0x00	; 0
    2050:	a8 2a       	or	r10, r24
    2052:	b9 2a       	or	r11, r25
    2054:	ca 2a       	or	r12, r26
    2056:	db 2a       	or	r13, r27
    2058:	31 96       	adiw	r30, 0x01	; 1
    205a:	e0 32       	cpi	r30, 0x20	; 32
    205c:	f1 05       	cpc	r31, r1
    205e:	49 f0       	breq	.+18     	; 0x2072 <__mulsf3+0x12a>
    2060:	66 0c       	add	r6, r6
    2062:	77 1c       	adc	r7, r7
    2064:	88 1c       	adc	r8, r8
    2066:	99 1c       	adc	r9, r9
    2068:	56 94       	lsr	r5
    206a:	47 94       	ror	r4
    206c:	37 94       	ror	r3
    206e:	27 94       	ror	r2
    2070:	c3 cf       	rjmp	.-122    	; 0x1ff8 <__mulsf3+0xb0>
    2072:	fa 85       	ldd	r31, Y+10	; 0x0a
    2074:	ea 89       	ldd	r30, Y+18	; 0x12
    2076:	2b 89       	ldd	r18, Y+19	; 0x13
    2078:	3c 89       	ldd	r19, Y+20	; 0x14
    207a:	8b 85       	ldd	r24, Y+11	; 0x0b
    207c:	9c 85       	ldd	r25, Y+12	; 0x0c
    207e:	28 0f       	add	r18, r24
    2080:	39 1f       	adc	r19, r25
    2082:	2e 5f       	subi	r18, 0xFE	; 254
    2084:	3f 4f       	sbci	r19, 0xFF	; 255
    2086:	17 c0       	rjmp	.+46     	; 0x20b6 <__mulsf3+0x16e>
    2088:	ca 01       	movw	r24, r20
    208a:	81 70       	andi	r24, 0x01	; 1
    208c:	90 70       	andi	r25, 0x00	; 0
    208e:	89 2b       	or	r24, r25
    2090:	61 f0       	breq	.+24     	; 0x20aa <__mulsf3+0x162>
    2092:	16 95       	lsr	r17
    2094:	07 95       	ror	r16
    2096:	f7 94       	ror	r15
    2098:	e7 94       	ror	r14
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	90 e0       	ldi	r25, 0x00	; 0
    209e:	a0 e0       	ldi	r26, 0x00	; 0
    20a0:	b0 e8       	ldi	r27, 0x80	; 128
    20a2:	e8 2a       	or	r14, r24
    20a4:	f9 2a       	or	r15, r25
    20a6:	0a 2b       	or	r16, r26
    20a8:	1b 2b       	or	r17, r27
    20aa:	76 95       	lsr	r23
    20ac:	67 95       	ror	r22
    20ae:	57 95       	ror	r21
    20b0:	47 95       	ror	r20
    20b2:	2f 5f       	subi	r18, 0xFF	; 255
    20b4:	3f 4f       	sbci	r19, 0xFF	; 255
    20b6:	77 fd       	sbrc	r23, 7
    20b8:	e7 cf       	rjmp	.-50     	; 0x2088 <__mulsf3+0x140>
    20ba:	0c c0       	rjmp	.+24     	; 0x20d4 <__mulsf3+0x18c>
    20bc:	44 0f       	add	r20, r20
    20be:	55 1f       	adc	r21, r21
    20c0:	66 1f       	adc	r22, r22
    20c2:	77 1f       	adc	r23, r23
    20c4:	17 fd       	sbrc	r17, 7
    20c6:	41 60       	ori	r20, 0x01	; 1
    20c8:	ee 0c       	add	r14, r14
    20ca:	ff 1c       	adc	r15, r15
    20cc:	00 1f       	adc	r16, r16
    20ce:	11 1f       	adc	r17, r17
    20d0:	21 50       	subi	r18, 0x01	; 1
    20d2:	30 40       	sbci	r19, 0x00	; 0
    20d4:	40 30       	cpi	r20, 0x00	; 0
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	59 07       	cpc	r21, r25
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	69 07       	cpc	r22, r25
    20de:	90 e4       	ldi	r25, 0x40	; 64
    20e0:	79 07       	cpc	r23, r25
    20e2:	60 f3       	brcs	.-40     	; 0x20bc <__mulsf3+0x174>
    20e4:	2b 8f       	std	Y+27, r18	; 0x1b
    20e6:	3c 8f       	std	Y+28, r19	; 0x1c
    20e8:	db 01       	movw	r26, r22
    20ea:	ca 01       	movw	r24, r20
    20ec:	8f 77       	andi	r24, 0x7F	; 127
    20ee:	90 70       	andi	r25, 0x00	; 0
    20f0:	a0 70       	andi	r26, 0x00	; 0
    20f2:	b0 70       	andi	r27, 0x00	; 0
    20f4:	80 34       	cpi	r24, 0x40	; 64
    20f6:	91 05       	cpc	r25, r1
    20f8:	a1 05       	cpc	r26, r1
    20fa:	b1 05       	cpc	r27, r1
    20fc:	61 f4       	brne	.+24     	; 0x2116 <__mulsf3+0x1ce>
    20fe:	47 fd       	sbrc	r20, 7
    2100:	0a c0       	rjmp	.+20     	; 0x2116 <__mulsf3+0x1ce>
    2102:	e1 14       	cp	r14, r1
    2104:	f1 04       	cpc	r15, r1
    2106:	01 05       	cpc	r16, r1
    2108:	11 05       	cpc	r17, r1
    210a:	29 f0       	breq	.+10     	; 0x2116 <__mulsf3+0x1ce>
    210c:	40 5c       	subi	r20, 0xC0	; 192
    210e:	5f 4f       	sbci	r21, 0xFF	; 255
    2110:	6f 4f       	sbci	r22, 0xFF	; 255
    2112:	7f 4f       	sbci	r23, 0xFF	; 255
    2114:	40 78       	andi	r20, 0x80	; 128
    2116:	1a 8e       	std	Y+26, r1	; 0x1a
    2118:	fe 17       	cp	r31, r30
    211a:	11 f0       	breq	.+4      	; 0x2120 <__mulsf3+0x1d8>
    211c:	81 e0       	ldi	r24, 0x01	; 1
    211e:	8a 8f       	std	Y+26, r24	; 0x1a
    2120:	4d 8f       	std	Y+29, r20	; 0x1d
    2122:	5e 8f       	std	Y+30, r21	; 0x1e
    2124:	6f 8f       	std	Y+31, r22	; 0x1f
    2126:	78 a3       	std	Y+32, r23	; 0x20
    2128:	83 e0       	ldi	r24, 0x03	; 3
    212a:	89 8f       	std	Y+25, r24	; 0x19
    212c:	ce 01       	movw	r24, r28
    212e:	49 96       	adiw	r24, 0x19	; 25
    2130:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    2134:	a0 96       	adiw	r28, 0x20	; 32
    2136:	e2 e1       	ldi	r30, 0x12	; 18
    2138:	0c 94 5c 25 	jmp	0x4ab8	; 0x4ab8 <__epilogue_restores__>

0000213c <__divsf3>:
    213c:	a8 e1       	ldi	r26, 0x18	; 24
    213e:	b0 e0       	ldi	r27, 0x00	; 0
    2140:	e4 ea       	ldi	r30, 0xA4	; 164
    2142:	f0 e1       	ldi	r31, 0x10	; 16
    2144:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__prologue_saves__+0x10>
    2148:	69 83       	std	Y+1, r22	; 0x01
    214a:	7a 83       	std	Y+2, r23	; 0x02
    214c:	8b 83       	std	Y+3, r24	; 0x03
    214e:	9c 83       	std	Y+4, r25	; 0x04
    2150:	2d 83       	std	Y+5, r18	; 0x05
    2152:	3e 83       	std	Y+6, r19	; 0x06
    2154:	4f 83       	std	Y+7, r20	; 0x07
    2156:	58 87       	std	Y+8, r21	; 0x08
    2158:	b9 e0       	ldi	r27, 0x09	; 9
    215a:	eb 2e       	mov	r14, r27
    215c:	f1 2c       	mov	r15, r1
    215e:	ec 0e       	add	r14, r28
    2160:	fd 1e       	adc	r15, r29
    2162:	ce 01       	movw	r24, r28
    2164:	01 96       	adiw	r24, 0x01	; 1
    2166:	b7 01       	movw	r22, r14
    2168:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    216c:	8e 01       	movw	r16, r28
    216e:	0f 5e       	subi	r16, 0xEF	; 239
    2170:	1f 4f       	sbci	r17, 0xFF	; 255
    2172:	ce 01       	movw	r24, r28
    2174:	05 96       	adiw	r24, 0x05	; 5
    2176:	b8 01       	movw	r22, r16
    2178:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    217c:	29 85       	ldd	r18, Y+9	; 0x09
    217e:	22 30       	cpi	r18, 0x02	; 2
    2180:	08 f4       	brcc	.+2      	; 0x2184 <__divsf3+0x48>
    2182:	7e c0       	rjmp	.+252    	; 0x2280 <__divsf3+0x144>
    2184:	39 89       	ldd	r19, Y+17	; 0x11
    2186:	32 30       	cpi	r19, 0x02	; 2
    2188:	10 f4       	brcc	.+4      	; 0x218e <__divsf3+0x52>
    218a:	b8 01       	movw	r22, r16
    218c:	7c c0       	rjmp	.+248    	; 0x2286 <__divsf3+0x14a>
    218e:	8a 85       	ldd	r24, Y+10	; 0x0a
    2190:	9a 89       	ldd	r25, Y+18	; 0x12
    2192:	89 27       	eor	r24, r25
    2194:	8a 87       	std	Y+10, r24	; 0x0a
    2196:	24 30       	cpi	r18, 0x04	; 4
    2198:	11 f0       	breq	.+4      	; 0x219e <__divsf3+0x62>
    219a:	22 30       	cpi	r18, 0x02	; 2
    219c:	31 f4       	brne	.+12     	; 0x21aa <__divsf3+0x6e>
    219e:	23 17       	cp	r18, r19
    21a0:	09 f0       	breq	.+2      	; 0x21a4 <__divsf3+0x68>
    21a2:	6e c0       	rjmp	.+220    	; 0x2280 <__divsf3+0x144>
    21a4:	61 e8       	ldi	r22, 0x81	; 129
    21a6:	70 e0       	ldi	r23, 0x00	; 0
    21a8:	6e c0       	rjmp	.+220    	; 0x2286 <__divsf3+0x14a>
    21aa:	34 30       	cpi	r19, 0x04	; 4
    21ac:	39 f4       	brne	.+14     	; 0x21bc <__divsf3+0x80>
    21ae:	1d 86       	std	Y+13, r1	; 0x0d
    21b0:	1e 86       	std	Y+14, r1	; 0x0e
    21b2:	1f 86       	std	Y+15, r1	; 0x0f
    21b4:	18 8a       	std	Y+16, r1	; 0x10
    21b6:	1c 86       	std	Y+12, r1	; 0x0c
    21b8:	1b 86       	std	Y+11, r1	; 0x0b
    21ba:	04 c0       	rjmp	.+8      	; 0x21c4 <__divsf3+0x88>
    21bc:	32 30       	cpi	r19, 0x02	; 2
    21be:	21 f4       	brne	.+8      	; 0x21c8 <__divsf3+0x8c>
    21c0:	84 e0       	ldi	r24, 0x04	; 4
    21c2:	89 87       	std	Y+9, r24	; 0x09
    21c4:	b7 01       	movw	r22, r14
    21c6:	5f c0       	rjmp	.+190    	; 0x2286 <__divsf3+0x14a>
    21c8:	2b 85       	ldd	r18, Y+11	; 0x0b
    21ca:	3c 85       	ldd	r19, Y+12	; 0x0c
    21cc:	8b 89       	ldd	r24, Y+19	; 0x13
    21ce:	9c 89       	ldd	r25, Y+20	; 0x14
    21d0:	28 1b       	sub	r18, r24
    21d2:	39 0b       	sbc	r19, r25
    21d4:	3c 87       	std	Y+12, r19	; 0x0c
    21d6:	2b 87       	std	Y+11, r18	; 0x0b
    21d8:	ed 84       	ldd	r14, Y+13	; 0x0d
    21da:	fe 84       	ldd	r15, Y+14	; 0x0e
    21dc:	0f 85       	ldd	r16, Y+15	; 0x0f
    21de:	18 89       	ldd	r17, Y+16	; 0x10
    21e0:	ad 88       	ldd	r10, Y+21	; 0x15
    21e2:	be 88       	ldd	r11, Y+22	; 0x16
    21e4:	cf 88       	ldd	r12, Y+23	; 0x17
    21e6:	d8 8c       	ldd	r13, Y+24	; 0x18
    21e8:	ea 14       	cp	r14, r10
    21ea:	fb 04       	cpc	r15, r11
    21ec:	0c 05       	cpc	r16, r12
    21ee:	1d 05       	cpc	r17, r13
    21f0:	40 f4       	brcc	.+16     	; 0x2202 <__divsf3+0xc6>
    21f2:	ee 0c       	add	r14, r14
    21f4:	ff 1c       	adc	r15, r15
    21f6:	00 1f       	adc	r16, r16
    21f8:	11 1f       	adc	r17, r17
    21fa:	21 50       	subi	r18, 0x01	; 1
    21fc:	30 40       	sbci	r19, 0x00	; 0
    21fe:	3c 87       	std	Y+12, r19	; 0x0c
    2200:	2b 87       	std	Y+11, r18	; 0x0b
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	40 e0       	ldi	r20, 0x00	; 0
    2208:	50 e0       	ldi	r21, 0x00	; 0
    220a:	80 e0       	ldi	r24, 0x00	; 0
    220c:	90 e0       	ldi	r25, 0x00	; 0
    220e:	a0 e0       	ldi	r26, 0x00	; 0
    2210:	b0 e4       	ldi	r27, 0x40	; 64
    2212:	60 e0       	ldi	r22, 0x00	; 0
    2214:	70 e0       	ldi	r23, 0x00	; 0
    2216:	ea 14       	cp	r14, r10
    2218:	fb 04       	cpc	r15, r11
    221a:	0c 05       	cpc	r16, r12
    221c:	1d 05       	cpc	r17, r13
    221e:	40 f0       	brcs	.+16     	; 0x2230 <__divsf3+0xf4>
    2220:	28 2b       	or	r18, r24
    2222:	39 2b       	or	r19, r25
    2224:	4a 2b       	or	r20, r26
    2226:	5b 2b       	or	r21, r27
    2228:	ea 18       	sub	r14, r10
    222a:	fb 08       	sbc	r15, r11
    222c:	0c 09       	sbc	r16, r12
    222e:	1d 09       	sbc	r17, r13
    2230:	b6 95       	lsr	r27
    2232:	a7 95       	ror	r26
    2234:	97 95       	ror	r25
    2236:	87 95       	ror	r24
    2238:	ee 0c       	add	r14, r14
    223a:	ff 1c       	adc	r15, r15
    223c:	00 1f       	adc	r16, r16
    223e:	11 1f       	adc	r17, r17
    2240:	6f 5f       	subi	r22, 0xFF	; 255
    2242:	7f 4f       	sbci	r23, 0xFF	; 255
    2244:	6f 31       	cpi	r22, 0x1F	; 31
    2246:	71 05       	cpc	r23, r1
    2248:	31 f7       	brne	.-52     	; 0x2216 <__divsf3+0xda>
    224a:	da 01       	movw	r26, r20
    224c:	c9 01       	movw	r24, r18
    224e:	8f 77       	andi	r24, 0x7F	; 127
    2250:	90 70       	andi	r25, 0x00	; 0
    2252:	a0 70       	andi	r26, 0x00	; 0
    2254:	b0 70       	andi	r27, 0x00	; 0
    2256:	80 34       	cpi	r24, 0x40	; 64
    2258:	91 05       	cpc	r25, r1
    225a:	a1 05       	cpc	r26, r1
    225c:	b1 05       	cpc	r27, r1
    225e:	61 f4       	brne	.+24     	; 0x2278 <__divsf3+0x13c>
    2260:	27 fd       	sbrc	r18, 7
    2262:	0a c0       	rjmp	.+20     	; 0x2278 <__divsf3+0x13c>
    2264:	e1 14       	cp	r14, r1
    2266:	f1 04       	cpc	r15, r1
    2268:	01 05       	cpc	r16, r1
    226a:	11 05       	cpc	r17, r1
    226c:	29 f0       	breq	.+10     	; 0x2278 <__divsf3+0x13c>
    226e:	20 5c       	subi	r18, 0xC0	; 192
    2270:	3f 4f       	sbci	r19, 0xFF	; 255
    2272:	4f 4f       	sbci	r20, 0xFF	; 255
    2274:	5f 4f       	sbci	r21, 0xFF	; 255
    2276:	20 78       	andi	r18, 0x80	; 128
    2278:	2d 87       	std	Y+13, r18	; 0x0d
    227a:	3e 87       	std	Y+14, r19	; 0x0e
    227c:	4f 87       	std	Y+15, r20	; 0x0f
    227e:	58 8b       	std	Y+16, r21	; 0x10
    2280:	be 01       	movw	r22, r28
    2282:	67 5f       	subi	r22, 0xF7	; 247
    2284:	7f 4f       	sbci	r23, 0xFF	; 255
    2286:	cb 01       	movw	r24, r22
    2288:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    228c:	68 96       	adiw	r28, 0x18	; 24
    228e:	ea e0       	ldi	r30, 0x0A	; 10
    2290:	0c 94 64 25 	jmp	0x4ac8	; 0x4ac8 <__epilogue_restores__+0x10>

00002294 <__gtsf2>:
    2294:	a8 e1       	ldi	r26, 0x18	; 24
    2296:	b0 e0       	ldi	r27, 0x00	; 0
    2298:	e0 e5       	ldi	r30, 0x50	; 80
    229a:	f1 e1       	ldi	r31, 0x11	; 17
    229c:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__prologue_saves__+0x18>
    22a0:	69 83       	std	Y+1, r22	; 0x01
    22a2:	7a 83       	std	Y+2, r23	; 0x02
    22a4:	8b 83       	std	Y+3, r24	; 0x03
    22a6:	9c 83       	std	Y+4, r25	; 0x04
    22a8:	2d 83       	std	Y+5, r18	; 0x05
    22aa:	3e 83       	std	Y+6, r19	; 0x06
    22ac:	4f 83       	std	Y+7, r20	; 0x07
    22ae:	58 87       	std	Y+8, r21	; 0x08
    22b0:	89 e0       	ldi	r24, 0x09	; 9
    22b2:	e8 2e       	mov	r14, r24
    22b4:	f1 2c       	mov	r15, r1
    22b6:	ec 0e       	add	r14, r28
    22b8:	fd 1e       	adc	r15, r29
    22ba:	ce 01       	movw	r24, r28
    22bc:	01 96       	adiw	r24, 0x01	; 1
    22be:	b7 01       	movw	r22, r14
    22c0:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    22c4:	8e 01       	movw	r16, r28
    22c6:	0f 5e       	subi	r16, 0xEF	; 239
    22c8:	1f 4f       	sbci	r17, 0xFF	; 255
    22ca:	ce 01       	movw	r24, r28
    22cc:	05 96       	adiw	r24, 0x05	; 5
    22ce:	b8 01       	movw	r22, r16
    22d0:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    22d4:	89 85       	ldd	r24, Y+9	; 0x09
    22d6:	82 30       	cpi	r24, 0x02	; 2
    22d8:	40 f0       	brcs	.+16     	; 0x22ea <__gtsf2+0x56>
    22da:	89 89       	ldd	r24, Y+17	; 0x11
    22dc:	82 30       	cpi	r24, 0x02	; 2
    22de:	28 f0       	brcs	.+10     	; 0x22ea <__gtsf2+0x56>
    22e0:	c7 01       	movw	r24, r14
    22e2:	b8 01       	movw	r22, r16
    22e4:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    22e8:	01 c0       	rjmp	.+2      	; 0x22ec <__gtsf2+0x58>
    22ea:	8f ef       	ldi	r24, 0xFF	; 255
    22ec:	68 96       	adiw	r28, 0x18	; 24
    22ee:	e6 e0       	ldi	r30, 0x06	; 6
    22f0:	0c 94 68 25 	jmp	0x4ad0	; 0x4ad0 <__epilogue_restores__+0x18>

000022f4 <__gesf2>:
    22f4:	a8 e1       	ldi	r26, 0x18	; 24
    22f6:	b0 e0       	ldi	r27, 0x00	; 0
    22f8:	e0 e8       	ldi	r30, 0x80	; 128
    22fa:	f1 e1       	ldi	r31, 0x11	; 17
    22fc:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__prologue_saves__+0x18>
    2300:	69 83       	std	Y+1, r22	; 0x01
    2302:	7a 83       	std	Y+2, r23	; 0x02
    2304:	8b 83       	std	Y+3, r24	; 0x03
    2306:	9c 83       	std	Y+4, r25	; 0x04
    2308:	2d 83       	std	Y+5, r18	; 0x05
    230a:	3e 83       	std	Y+6, r19	; 0x06
    230c:	4f 83       	std	Y+7, r20	; 0x07
    230e:	58 87       	std	Y+8, r21	; 0x08
    2310:	89 e0       	ldi	r24, 0x09	; 9
    2312:	e8 2e       	mov	r14, r24
    2314:	f1 2c       	mov	r15, r1
    2316:	ec 0e       	add	r14, r28
    2318:	fd 1e       	adc	r15, r29
    231a:	ce 01       	movw	r24, r28
    231c:	01 96       	adiw	r24, 0x01	; 1
    231e:	b7 01       	movw	r22, r14
    2320:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2324:	8e 01       	movw	r16, r28
    2326:	0f 5e       	subi	r16, 0xEF	; 239
    2328:	1f 4f       	sbci	r17, 0xFF	; 255
    232a:	ce 01       	movw	r24, r28
    232c:	05 96       	adiw	r24, 0x05	; 5
    232e:	b8 01       	movw	r22, r16
    2330:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2334:	89 85       	ldd	r24, Y+9	; 0x09
    2336:	82 30       	cpi	r24, 0x02	; 2
    2338:	40 f0       	brcs	.+16     	; 0x234a <__gesf2+0x56>
    233a:	89 89       	ldd	r24, Y+17	; 0x11
    233c:	82 30       	cpi	r24, 0x02	; 2
    233e:	28 f0       	brcs	.+10     	; 0x234a <__gesf2+0x56>
    2340:	c7 01       	movw	r24, r14
    2342:	b8 01       	movw	r22, r16
    2344:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    2348:	01 c0       	rjmp	.+2      	; 0x234c <__gesf2+0x58>
    234a:	8f ef       	ldi	r24, 0xFF	; 255
    234c:	68 96       	adiw	r28, 0x18	; 24
    234e:	e6 e0       	ldi	r30, 0x06	; 6
    2350:	0c 94 68 25 	jmp	0x4ad0	; 0x4ad0 <__epilogue_restores__+0x18>

00002354 <__ltsf2>:
    2354:	a8 e1       	ldi	r26, 0x18	; 24
    2356:	b0 e0       	ldi	r27, 0x00	; 0
    2358:	e0 eb       	ldi	r30, 0xB0	; 176
    235a:	f1 e1       	ldi	r31, 0x11	; 17
    235c:	0c 94 4c 25 	jmp	0x4a98	; 0x4a98 <__prologue_saves__+0x18>
    2360:	69 83       	std	Y+1, r22	; 0x01
    2362:	7a 83       	std	Y+2, r23	; 0x02
    2364:	8b 83       	std	Y+3, r24	; 0x03
    2366:	9c 83       	std	Y+4, r25	; 0x04
    2368:	2d 83       	std	Y+5, r18	; 0x05
    236a:	3e 83       	std	Y+6, r19	; 0x06
    236c:	4f 83       	std	Y+7, r20	; 0x07
    236e:	58 87       	std	Y+8, r21	; 0x08
    2370:	89 e0       	ldi	r24, 0x09	; 9
    2372:	e8 2e       	mov	r14, r24
    2374:	f1 2c       	mov	r15, r1
    2376:	ec 0e       	add	r14, r28
    2378:	fd 1e       	adc	r15, r29
    237a:	ce 01       	movw	r24, r28
    237c:	01 96       	adiw	r24, 0x01	; 1
    237e:	b7 01       	movw	r22, r14
    2380:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2384:	8e 01       	movw	r16, r28
    2386:	0f 5e       	subi	r16, 0xEF	; 239
    2388:	1f 4f       	sbci	r17, 0xFF	; 255
    238a:	ce 01       	movw	r24, r28
    238c:	05 96       	adiw	r24, 0x05	; 5
    238e:	b8 01       	movw	r22, r16
    2390:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    2394:	89 85       	ldd	r24, Y+9	; 0x09
    2396:	82 30       	cpi	r24, 0x02	; 2
    2398:	40 f0       	brcs	.+16     	; 0x23aa <__ltsf2+0x56>
    239a:	89 89       	ldd	r24, Y+17	; 0x11
    239c:	82 30       	cpi	r24, 0x02	; 2
    239e:	28 f0       	brcs	.+10     	; 0x23aa <__ltsf2+0x56>
    23a0:	c7 01       	movw	r24, r14
    23a2:	b8 01       	movw	r22, r16
    23a4:	0e 94 c2 14 	call	0x2984	; 0x2984 <__fpcmp_parts_f>
    23a8:	01 c0       	rjmp	.+2      	; 0x23ac <__ltsf2+0x58>
    23aa:	81 e0       	ldi	r24, 0x01	; 1
    23ac:	68 96       	adiw	r28, 0x18	; 24
    23ae:	e6 e0       	ldi	r30, 0x06	; 6
    23b0:	0c 94 68 25 	jmp	0x4ad0	; 0x4ad0 <__epilogue_restores__+0x18>

000023b4 <__fixsfsi>:
    23b4:	ac e0       	ldi	r26, 0x0C	; 12
    23b6:	b0 e0       	ldi	r27, 0x00	; 0
    23b8:	e0 ee       	ldi	r30, 0xE0	; 224
    23ba:	f1 e1       	ldi	r31, 0x11	; 17
    23bc:	0c 94 50 25 	jmp	0x4aa0	; 0x4aa0 <__prologue_saves__+0x20>
    23c0:	69 83       	std	Y+1, r22	; 0x01
    23c2:	7a 83       	std	Y+2, r23	; 0x02
    23c4:	8b 83       	std	Y+3, r24	; 0x03
    23c6:	9c 83       	std	Y+4, r25	; 0x04
    23c8:	ce 01       	movw	r24, r28
    23ca:	01 96       	adiw	r24, 0x01	; 1
    23cc:	be 01       	movw	r22, r28
    23ce:	6b 5f       	subi	r22, 0xFB	; 251
    23d0:	7f 4f       	sbci	r23, 0xFF	; 255
    23d2:	0e 94 4a 14 	call	0x2894	; 0x2894 <__unpack_f>
    23d6:	8d 81       	ldd	r24, Y+5	; 0x05
    23d8:	82 30       	cpi	r24, 0x02	; 2
    23da:	61 f1       	breq	.+88     	; 0x2434 <__fixsfsi+0x80>
    23dc:	82 30       	cpi	r24, 0x02	; 2
    23de:	50 f1       	brcs	.+84     	; 0x2434 <__fixsfsi+0x80>
    23e0:	84 30       	cpi	r24, 0x04	; 4
    23e2:	21 f4       	brne	.+8      	; 0x23ec <__fixsfsi+0x38>
    23e4:	8e 81       	ldd	r24, Y+6	; 0x06
    23e6:	88 23       	and	r24, r24
    23e8:	51 f1       	breq	.+84     	; 0x243e <__fixsfsi+0x8a>
    23ea:	2e c0       	rjmp	.+92     	; 0x2448 <__fixsfsi+0x94>
    23ec:	2f 81       	ldd	r18, Y+7	; 0x07
    23ee:	38 85       	ldd	r19, Y+8	; 0x08
    23f0:	37 fd       	sbrc	r19, 7
    23f2:	20 c0       	rjmp	.+64     	; 0x2434 <__fixsfsi+0x80>
    23f4:	6e 81       	ldd	r22, Y+6	; 0x06
    23f6:	2f 31       	cpi	r18, 0x1F	; 31
    23f8:	31 05       	cpc	r19, r1
    23fa:	1c f0       	brlt	.+6      	; 0x2402 <__fixsfsi+0x4e>
    23fc:	66 23       	and	r22, r22
    23fe:	f9 f0       	breq	.+62     	; 0x243e <__fixsfsi+0x8a>
    2400:	23 c0       	rjmp	.+70     	; 0x2448 <__fixsfsi+0x94>
    2402:	8e e1       	ldi	r24, 0x1E	; 30
    2404:	90 e0       	ldi	r25, 0x00	; 0
    2406:	82 1b       	sub	r24, r18
    2408:	93 0b       	sbc	r25, r19
    240a:	29 85       	ldd	r18, Y+9	; 0x09
    240c:	3a 85       	ldd	r19, Y+10	; 0x0a
    240e:	4b 85       	ldd	r20, Y+11	; 0x0b
    2410:	5c 85       	ldd	r21, Y+12	; 0x0c
    2412:	04 c0       	rjmp	.+8      	; 0x241c <__fixsfsi+0x68>
    2414:	56 95       	lsr	r21
    2416:	47 95       	ror	r20
    2418:	37 95       	ror	r19
    241a:	27 95       	ror	r18
    241c:	8a 95       	dec	r24
    241e:	d2 f7       	brpl	.-12     	; 0x2414 <__fixsfsi+0x60>
    2420:	66 23       	and	r22, r22
    2422:	b1 f0       	breq	.+44     	; 0x2450 <__fixsfsi+0x9c>
    2424:	50 95       	com	r21
    2426:	40 95       	com	r20
    2428:	30 95       	com	r19
    242a:	21 95       	neg	r18
    242c:	3f 4f       	sbci	r19, 0xFF	; 255
    242e:	4f 4f       	sbci	r20, 0xFF	; 255
    2430:	5f 4f       	sbci	r21, 0xFF	; 255
    2432:	0e c0       	rjmp	.+28     	; 0x2450 <__fixsfsi+0x9c>
    2434:	20 e0       	ldi	r18, 0x00	; 0
    2436:	30 e0       	ldi	r19, 0x00	; 0
    2438:	40 e0       	ldi	r20, 0x00	; 0
    243a:	50 e0       	ldi	r21, 0x00	; 0
    243c:	09 c0       	rjmp	.+18     	; 0x2450 <__fixsfsi+0x9c>
    243e:	2f ef       	ldi	r18, 0xFF	; 255
    2440:	3f ef       	ldi	r19, 0xFF	; 255
    2442:	4f ef       	ldi	r20, 0xFF	; 255
    2444:	5f e7       	ldi	r21, 0x7F	; 127
    2446:	04 c0       	rjmp	.+8      	; 0x2450 <__fixsfsi+0x9c>
    2448:	20 e0       	ldi	r18, 0x00	; 0
    244a:	30 e0       	ldi	r19, 0x00	; 0
    244c:	40 e0       	ldi	r20, 0x00	; 0
    244e:	50 e8       	ldi	r21, 0x80	; 128
    2450:	b9 01       	movw	r22, r18
    2452:	ca 01       	movw	r24, r20
    2454:	2c 96       	adiw	r28, 0x0c	; 12
    2456:	e2 e0       	ldi	r30, 0x02	; 2
    2458:	0c 94 6c 25 	jmp	0x4ad8	; 0x4ad8 <__epilogue_restores__+0x20>

0000245c <__floatunsisf>:
    245c:	a8 e0       	ldi	r26, 0x08	; 8
    245e:	b0 e0       	ldi	r27, 0x00	; 0
    2460:	e4 e3       	ldi	r30, 0x34	; 52
    2462:	f2 e1       	ldi	r31, 0x12	; 18
    2464:	0c 94 48 25 	jmp	0x4a90	; 0x4a90 <__prologue_saves__+0x10>
    2468:	7b 01       	movw	r14, r22
    246a:	8c 01       	movw	r16, r24
    246c:	61 15       	cp	r22, r1
    246e:	71 05       	cpc	r23, r1
    2470:	81 05       	cpc	r24, r1
    2472:	91 05       	cpc	r25, r1
    2474:	19 f4       	brne	.+6      	; 0x247c <__floatunsisf+0x20>
    2476:	82 e0       	ldi	r24, 0x02	; 2
    2478:	89 83       	std	Y+1, r24	; 0x01
    247a:	60 c0       	rjmp	.+192    	; 0x253c <__floatunsisf+0xe0>
    247c:	83 e0       	ldi	r24, 0x03	; 3
    247e:	89 83       	std	Y+1, r24	; 0x01
    2480:	8e e1       	ldi	r24, 0x1E	; 30
    2482:	c8 2e       	mov	r12, r24
    2484:	d1 2c       	mov	r13, r1
    2486:	dc 82       	std	Y+4, r13	; 0x04
    2488:	cb 82       	std	Y+3, r12	; 0x03
    248a:	ed 82       	std	Y+5, r14	; 0x05
    248c:	fe 82       	std	Y+6, r15	; 0x06
    248e:	0f 83       	std	Y+7, r16	; 0x07
    2490:	18 87       	std	Y+8, r17	; 0x08
    2492:	c8 01       	movw	r24, r16
    2494:	b7 01       	movw	r22, r14
    2496:	0e 94 26 13 	call	0x264c	; 0x264c <__clzsi2>
    249a:	fc 01       	movw	r30, r24
    249c:	31 97       	sbiw	r30, 0x01	; 1
    249e:	f7 ff       	sbrs	r31, 7
    24a0:	3b c0       	rjmp	.+118    	; 0x2518 <__floatunsisf+0xbc>
    24a2:	22 27       	eor	r18, r18
    24a4:	33 27       	eor	r19, r19
    24a6:	2e 1b       	sub	r18, r30
    24a8:	3f 0b       	sbc	r19, r31
    24aa:	57 01       	movw	r10, r14
    24ac:	68 01       	movw	r12, r16
    24ae:	02 2e       	mov	r0, r18
    24b0:	04 c0       	rjmp	.+8      	; 0x24ba <__floatunsisf+0x5e>
    24b2:	d6 94       	lsr	r13
    24b4:	c7 94       	ror	r12
    24b6:	b7 94       	ror	r11
    24b8:	a7 94       	ror	r10
    24ba:	0a 94       	dec	r0
    24bc:	d2 f7       	brpl	.-12     	; 0x24b2 <__floatunsisf+0x56>
    24be:	40 e0       	ldi	r20, 0x00	; 0
    24c0:	50 e0       	ldi	r21, 0x00	; 0
    24c2:	60 e0       	ldi	r22, 0x00	; 0
    24c4:	70 e0       	ldi	r23, 0x00	; 0
    24c6:	81 e0       	ldi	r24, 0x01	; 1
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	a0 e0       	ldi	r26, 0x00	; 0
    24cc:	b0 e0       	ldi	r27, 0x00	; 0
    24ce:	04 c0       	rjmp	.+8      	; 0x24d8 <__floatunsisf+0x7c>
    24d0:	88 0f       	add	r24, r24
    24d2:	99 1f       	adc	r25, r25
    24d4:	aa 1f       	adc	r26, r26
    24d6:	bb 1f       	adc	r27, r27
    24d8:	2a 95       	dec	r18
    24da:	d2 f7       	brpl	.-12     	; 0x24d0 <__floatunsisf+0x74>
    24dc:	01 97       	sbiw	r24, 0x01	; 1
    24de:	a1 09       	sbc	r26, r1
    24e0:	b1 09       	sbc	r27, r1
    24e2:	8e 21       	and	r24, r14
    24e4:	9f 21       	and	r25, r15
    24e6:	a0 23       	and	r26, r16
    24e8:	b1 23       	and	r27, r17
    24ea:	00 97       	sbiw	r24, 0x00	; 0
    24ec:	a1 05       	cpc	r26, r1
    24ee:	b1 05       	cpc	r27, r1
    24f0:	21 f0       	breq	.+8      	; 0x24fa <__floatunsisf+0x9e>
    24f2:	41 e0       	ldi	r20, 0x01	; 1
    24f4:	50 e0       	ldi	r21, 0x00	; 0
    24f6:	60 e0       	ldi	r22, 0x00	; 0
    24f8:	70 e0       	ldi	r23, 0x00	; 0
    24fa:	4a 29       	or	r20, r10
    24fc:	5b 29       	or	r21, r11
    24fe:	6c 29       	or	r22, r12
    2500:	7d 29       	or	r23, r13
    2502:	4d 83       	std	Y+5, r20	; 0x05
    2504:	5e 83       	std	Y+6, r21	; 0x06
    2506:	6f 83       	std	Y+7, r22	; 0x07
    2508:	78 87       	std	Y+8, r23	; 0x08
    250a:	8e e1       	ldi	r24, 0x1E	; 30
    250c:	90 e0       	ldi	r25, 0x00	; 0
    250e:	8e 1b       	sub	r24, r30
    2510:	9f 0b       	sbc	r25, r31
    2512:	9c 83       	std	Y+4, r25	; 0x04
    2514:	8b 83       	std	Y+3, r24	; 0x03
    2516:	12 c0       	rjmp	.+36     	; 0x253c <__floatunsisf+0xe0>
    2518:	30 97       	sbiw	r30, 0x00	; 0
    251a:	81 f0       	breq	.+32     	; 0x253c <__floatunsisf+0xe0>
    251c:	0e 2e       	mov	r0, r30
    251e:	04 c0       	rjmp	.+8      	; 0x2528 <__floatunsisf+0xcc>
    2520:	ee 0c       	add	r14, r14
    2522:	ff 1c       	adc	r15, r15
    2524:	00 1f       	adc	r16, r16
    2526:	11 1f       	adc	r17, r17
    2528:	0a 94       	dec	r0
    252a:	d2 f7       	brpl	.-12     	; 0x2520 <__floatunsisf+0xc4>
    252c:	ed 82       	std	Y+5, r14	; 0x05
    252e:	fe 82       	std	Y+6, r15	; 0x06
    2530:	0f 83       	std	Y+7, r16	; 0x07
    2532:	18 87       	std	Y+8, r17	; 0x08
    2534:	ce 1a       	sub	r12, r30
    2536:	df 0a       	sbc	r13, r31
    2538:	dc 82       	std	Y+4, r13	; 0x04
    253a:	cb 82       	std	Y+3, r12	; 0x03
    253c:	1a 82       	std	Y+2, r1	; 0x02
    253e:	ce 01       	movw	r24, r28
    2540:	01 96       	adiw	r24, 0x01	; 1
    2542:	0e 94 75 13 	call	0x26ea	; 0x26ea <__pack_f>
    2546:	28 96       	adiw	r28, 0x08	; 8
    2548:	ea e0       	ldi	r30, 0x0A	; 10
    254a:	0c 94 64 25 	jmp	0x4ac8	; 0x4ac8 <__epilogue_restores__+0x10>

0000254e <__ashldi3>:
    254e:	ef 92       	push	r14
    2550:	ff 92       	push	r15
    2552:	0f 93       	push	r16
    2554:	df 93       	push	r29
    2556:	cf 93       	push	r28
    2558:	cd b7       	in	r28, 0x3d	; 61
    255a:	de b7       	in	r29, 0x3e	; 62
    255c:	60 97       	sbiw	r28, 0x10	; 16
    255e:	0f b6       	in	r0, 0x3f	; 63
    2560:	f8 94       	cli
    2562:	de bf       	out	0x3e, r29	; 62
    2564:	0f be       	out	0x3f, r0	; 63
    2566:	cd bf       	out	0x3d, r28	; 61
    2568:	a8 2f       	mov	r26, r24
    256a:	00 23       	and	r16, r16
    256c:	09 f4       	brne	.+2      	; 0x2570 <__ashldi3+0x22>
    256e:	61 c0       	rjmp	.+194    	; 0x2632 <__ashldi3+0xe4>
    2570:	7e 01       	movw	r14, r28
    2572:	08 94       	sec
    2574:	e1 1c       	adc	r14, r1
    2576:	f1 1c       	adc	r15, r1
    2578:	88 e0       	ldi	r24, 0x08	; 8
    257a:	f7 01       	movw	r30, r14
    257c:	11 92       	st	Z+, r1
    257e:	8a 95       	dec	r24
    2580:	e9 f7       	brne	.-6      	; 0x257c <__ashldi3+0x2e>
    2582:	29 83       	std	Y+1, r18	; 0x01
    2584:	3a 83       	std	Y+2, r19	; 0x02
    2586:	4b 83       	std	Y+3, r20	; 0x03
    2588:	5c 83       	std	Y+4, r21	; 0x04
    258a:	6d 83       	std	Y+5, r22	; 0x05
    258c:	7e 83       	std	Y+6, r23	; 0x06
    258e:	af 83       	std	Y+7, r26	; 0x07
    2590:	98 87       	std	Y+8, r25	; 0x08
    2592:	80 e2       	ldi	r24, 0x20	; 32
    2594:	80 1b       	sub	r24, r16
    2596:	e8 2f       	mov	r30, r24
    2598:	ff 27       	eor	r31, r31
    259a:	e7 fd       	sbrc	r30, 7
    259c:	f0 95       	com	r31
    259e:	49 81       	ldd	r20, Y+1	; 0x01
    25a0:	5a 81       	ldd	r21, Y+2	; 0x02
    25a2:	6b 81       	ldd	r22, Y+3	; 0x03
    25a4:	7c 81       	ldd	r23, Y+4	; 0x04
    25a6:	18 16       	cp	r1, r24
    25a8:	84 f0       	brlt	.+32     	; 0x25ca <__ashldi3+0x7c>
    25aa:	19 86       	std	Y+9, r1	; 0x09
    25ac:	1a 86       	std	Y+10, r1	; 0x0a
    25ae:	1b 86       	std	Y+11, r1	; 0x0b
    25b0:	1c 86       	std	Y+12, r1	; 0x0c
    25b2:	88 27       	eor	r24, r24
    25b4:	99 27       	eor	r25, r25
    25b6:	8e 1b       	sub	r24, r30
    25b8:	9f 0b       	sbc	r25, r31
    25ba:	04 c0       	rjmp	.+8      	; 0x25c4 <__ashldi3+0x76>
    25bc:	44 0f       	add	r20, r20
    25be:	55 1f       	adc	r21, r21
    25c0:	66 1f       	adc	r22, r22
    25c2:	77 1f       	adc	r23, r23
    25c4:	8a 95       	dec	r24
    25c6:	d2 f7       	brpl	.-12     	; 0x25bc <__ashldi3+0x6e>
    25c8:	28 c0       	rjmp	.+80     	; 0x261a <__ashldi3+0xcc>
    25ca:	20 2f       	mov	r18, r16
    25cc:	33 27       	eor	r19, r19
    25ce:	27 fd       	sbrc	r18, 7
    25d0:	30 95       	com	r19
    25d2:	db 01       	movw	r26, r22
    25d4:	ca 01       	movw	r24, r20
    25d6:	02 2e       	mov	r0, r18
    25d8:	04 c0       	rjmp	.+8      	; 0x25e2 <__ashldi3+0x94>
    25da:	88 0f       	add	r24, r24
    25dc:	99 1f       	adc	r25, r25
    25de:	aa 1f       	adc	r26, r26
    25e0:	bb 1f       	adc	r27, r27
    25e2:	0a 94       	dec	r0
    25e4:	d2 f7       	brpl	.-12     	; 0x25da <__ashldi3+0x8c>
    25e6:	89 87       	std	Y+9, r24	; 0x09
    25e8:	9a 87       	std	Y+10, r25	; 0x0a
    25ea:	ab 87       	std	Y+11, r26	; 0x0b
    25ec:	bc 87       	std	Y+12, r27	; 0x0c
    25ee:	04 c0       	rjmp	.+8      	; 0x25f8 <__ashldi3+0xaa>
    25f0:	76 95       	lsr	r23
    25f2:	67 95       	ror	r22
    25f4:	57 95       	ror	r21
    25f6:	47 95       	ror	r20
    25f8:	ea 95       	dec	r30
    25fa:	d2 f7       	brpl	.-12     	; 0x25f0 <__ashldi3+0xa2>
    25fc:	8d 81       	ldd	r24, Y+5	; 0x05
    25fe:	9e 81       	ldd	r25, Y+6	; 0x06
    2600:	af 81       	ldd	r26, Y+7	; 0x07
    2602:	b8 85       	ldd	r27, Y+8	; 0x08
    2604:	04 c0       	rjmp	.+8      	; 0x260e <__ashldi3+0xc0>
    2606:	88 0f       	add	r24, r24
    2608:	99 1f       	adc	r25, r25
    260a:	aa 1f       	adc	r26, r26
    260c:	bb 1f       	adc	r27, r27
    260e:	2a 95       	dec	r18
    2610:	d2 f7       	brpl	.-12     	; 0x2606 <__ashldi3+0xb8>
    2612:	48 2b       	or	r20, r24
    2614:	59 2b       	or	r21, r25
    2616:	6a 2b       	or	r22, r26
    2618:	7b 2b       	or	r23, r27
    261a:	4d 87       	std	Y+13, r20	; 0x0d
    261c:	5e 87       	std	Y+14, r21	; 0x0e
    261e:	6f 87       	std	Y+15, r22	; 0x0f
    2620:	78 8b       	std	Y+16, r23	; 0x10
    2622:	29 85       	ldd	r18, Y+9	; 0x09
    2624:	3a 85       	ldd	r19, Y+10	; 0x0a
    2626:	4b 85       	ldd	r20, Y+11	; 0x0b
    2628:	5c 85       	ldd	r21, Y+12	; 0x0c
    262a:	6d 85       	ldd	r22, Y+13	; 0x0d
    262c:	7e 85       	ldd	r23, Y+14	; 0x0e
    262e:	af 85       	ldd	r26, Y+15	; 0x0f
    2630:	98 89       	ldd	r25, Y+16	; 0x10
    2632:	8a 2f       	mov	r24, r26
    2634:	60 96       	adiw	r28, 0x10	; 16
    2636:	0f b6       	in	r0, 0x3f	; 63
    2638:	f8 94       	cli
    263a:	de bf       	out	0x3e, r29	; 62
    263c:	0f be       	out	0x3f, r0	; 63
    263e:	cd bf       	out	0x3d, r28	; 61
    2640:	cf 91       	pop	r28
    2642:	df 91       	pop	r29
    2644:	0f 91       	pop	r16
    2646:	ff 90       	pop	r15
    2648:	ef 90       	pop	r14
    264a:	08 95       	ret

0000264c <__clzsi2>:
    264c:	ef 92       	push	r14
    264e:	ff 92       	push	r15
    2650:	0f 93       	push	r16
    2652:	1f 93       	push	r17
    2654:	7b 01       	movw	r14, r22
    2656:	8c 01       	movw	r16, r24
    2658:	80 e0       	ldi	r24, 0x00	; 0
    265a:	e8 16       	cp	r14, r24
    265c:	80 e0       	ldi	r24, 0x00	; 0
    265e:	f8 06       	cpc	r15, r24
    2660:	81 e0       	ldi	r24, 0x01	; 1
    2662:	08 07       	cpc	r16, r24
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	18 07       	cpc	r17, r24
    2668:	88 f4       	brcc	.+34     	; 0x268c <__clzsi2+0x40>
    266a:	8f ef       	ldi	r24, 0xFF	; 255
    266c:	e8 16       	cp	r14, r24
    266e:	f1 04       	cpc	r15, r1
    2670:	01 05       	cpc	r16, r1
    2672:	11 05       	cpc	r17, r1
    2674:	31 f0       	breq	.+12     	; 0x2682 <__clzsi2+0x36>
    2676:	28 f0       	brcs	.+10     	; 0x2682 <__clzsi2+0x36>
    2678:	88 e0       	ldi	r24, 0x08	; 8
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	a0 e0       	ldi	r26, 0x00	; 0
    267e:	b0 e0       	ldi	r27, 0x00	; 0
    2680:	17 c0       	rjmp	.+46     	; 0x26b0 <__clzsi2+0x64>
    2682:	80 e0       	ldi	r24, 0x00	; 0
    2684:	90 e0       	ldi	r25, 0x00	; 0
    2686:	a0 e0       	ldi	r26, 0x00	; 0
    2688:	b0 e0       	ldi	r27, 0x00	; 0
    268a:	12 c0       	rjmp	.+36     	; 0x26b0 <__clzsi2+0x64>
    268c:	80 e0       	ldi	r24, 0x00	; 0
    268e:	e8 16       	cp	r14, r24
    2690:	80 e0       	ldi	r24, 0x00	; 0
    2692:	f8 06       	cpc	r15, r24
    2694:	80 e0       	ldi	r24, 0x00	; 0
    2696:	08 07       	cpc	r16, r24
    2698:	81 e0       	ldi	r24, 0x01	; 1
    269a:	18 07       	cpc	r17, r24
    269c:	28 f0       	brcs	.+10     	; 0x26a8 <__clzsi2+0x5c>
    269e:	88 e1       	ldi	r24, 0x18	; 24
    26a0:	90 e0       	ldi	r25, 0x00	; 0
    26a2:	a0 e0       	ldi	r26, 0x00	; 0
    26a4:	b0 e0       	ldi	r27, 0x00	; 0
    26a6:	04 c0       	rjmp	.+8      	; 0x26b0 <__clzsi2+0x64>
    26a8:	80 e1       	ldi	r24, 0x10	; 16
    26aa:	90 e0       	ldi	r25, 0x00	; 0
    26ac:	a0 e0       	ldi	r26, 0x00	; 0
    26ae:	b0 e0       	ldi	r27, 0x00	; 0
    26b0:	20 e2       	ldi	r18, 0x20	; 32
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	40 e0       	ldi	r20, 0x00	; 0
    26b6:	50 e0       	ldi	r21, 0x00	; 0
    26b8:	28 1b       	sub	r18, r24
    26ba:	39 0b       	sbc	r19, r25
    26bc:	4a 0b       	sbc	r20, r26
    26be:	5b 0b       	sbc	r21, r27
    26c0:	04 c0       	rjmp	.+8      	; 0x26ca <__clzsi2+0x7e>
    26c2:	16 95       	lsr	r17
    26c4:	07 95       	ror	r16
    26c6:	f7 94       	ror	r15
    26c8:	e7 94       	ror	r14
    26ca:	8a 95       	dec	r24
    26cc:	d2 f7       	brpl	.-12     	; 0x26c2 <__clzsi2+0x76>
    26ce:	f7 01       	movw	r30, r14
    26d0:	e7 57       	subi	r30, 0x77	; 119
    26d2:	ff 4f       	sbci	r31, 0xFF	; 255
    26d4:	80 81       	ld	r24, Z
    26d6:	28 1b       	sub	r18, r24
    26d8:	31 09       	sbc	r19, r1
    26da:	41 09       	sbc	r20, r1
    26dc:	51 09       	sbc	r21, r1
    26de:	c9 01       	movw	r24, r18
    26e0:	1f 91       	pop	r17
    26e2:	0f 91       	pop	r16
    26e4:	ff 90       	pop	r15
    26e6:	ef 90       	pop	r14
    26e8:	08 95       	ret

000026ea <__pack_f>:
    26ea:	df 92       	push	r13
    26ec:	ef 92       	push	r14
    26ee:	ff 92       	push	r15
    26f0:	0f 93       	push	r16
    26f2:	1f 93       	push	r17
    26f4:	fc 01       	movw	r30, r24
    26f6:	e4 80       	ldd	r14, Z+4	; 0x04
    26f8:	f5 80       	ldd	r15, Z+5	; 0x05
    26fa:	06 81       	ldd	r16, Z+6	; 0x06
    26fc:	17 81       	ldd	r17, Z+7	; 0x07
    26fe:	d1 80       	ldd	r13, Z+1	; 0x01
    2700:	80 81       	ld	r24, Z
    2702:	82 30       	cpi	r24, 0x02	; 2
    2704:	48 f4       	brcc	.+18     	; 0x2718 <__pack_f+0x2e>
    2706:	80 e0       	ldi	r24, 0x00	; 0
    2708:	90 e0       	ldi	r25, 0x00	; 0
    270a:	a0 e1       	ldi	r26, 0x10	; 16
    270c:	b0 e0       	ldi	r27, 0x00	; 0
    270e:	e8 2a       	or	r14, r24
    2710:	f9 2a       	or	r15, r25
    2712:	0a 2b       	or	r16, r26
    2714:	1b 2b       	or	r17, r27
    2716:	a5 c0       	rjmp	.+330    	; 0x2862 <__pack_f+0x178>
    2718:	84 30       	cpi	r24, 0x04	; 4
    271a:	09 f4       	brne	.+2      	; 0x271e <__pack_f+0x34>
    271c:	9f c0       	rjmp	.+318    	; 0x285c <__pack_f+0x172>
    271e:	82 30       	cpi	r24, 0x02	; 2
    2720:	21 f4       	brne	.+8      	; 0x272a <__pack_f+0x40>
    2722:	ee 24       	eor	r14, r14
    2724:	ff 24       	eor	r15, r15
    2726:	87 01       	movw	r16, r14
    2728:	05 c0       	rjmp	.+10     	; 0x2734 <__pack_f+0x4a>
    272a:	e1 14       	cp	r14, r1
    272c:	f1 04       	cpc	r15, r1
    272e:	01 05       	cpc	r16, r1
    2730:	11 05       	cpc	r17, r1
    2732:	19 f4       	brne	.+6      	; 0x273a <__pack_f+0x50>
    2734:	e0 e0       	ldi	r30, 0x00	; 0
    2736:	f0 e0       	ldi	r31, 0x00	; 0
    2738:	96 c0       	rjmp	.+300    	; 0x2866 <__pack_f+0x17c>
    273a:	62 81       	ldd	r22, Z+2	; 0x02
    273c:	73 81       	ldd	r23, Z+3	; 0x03
    273e:	9f ef       	ldi	r25, 0xFF	; 255
    2740:	62 38       	cpi	r22, 0x82	; 130
    2742:	79 07       	cpc	r23, r25
    2744:	0c f0       	brlt	.+2      	; 0x2748 <__pack_f+0x5e>
    2746:	5b c0       	rjmp	.+182    	; 0x27fe <__pack_f+0x114>
    2748:	22 e8       	ldi	r18, 0x82	; 130
    274a:	3f ef       	ldi	r19, 0xFF	; 255
    274c:	26 1b       	sub	r18, r22
    274e:	37 0b       	sbc	r19, r23
    2750:	2a 31       	cpi	r18, 0x1A	; 26
    2752:	31 05       	cpc	r19, r1
    2754:	2c f0       	brlt	.+10     	; 0x2760 <__pack_f+0x76>
    2756:	20 e0       	ldi	r18, 0x00	; 0
    2758:	30 e0       	ldi	r19, 0x00	; 0
    275a:	40 e0       	ldi	r20, 0x00	; 0
    275c:	50 e0       	ldi	r21, 0x00	; 0
    275e:	2a c0       	rjmp	.+84     	; 0x27b4 <__pack_f+0xca>
    2760:	b8 01       	movw	r22, r16
    2762:	a7 01       	movw	r20, r14
    2764:	02 2e       	mov	r0, r18
    2766:	04 c0       	rjmp	.+8      	; 0x2770 <__pack_f+0x86>
    2768:	76 95       	lsr	r23
    276a:	67 95       	ror	r22
    276c:	57 95       	ror	r21
    276e:	47 95       	ror	r20
    2770:	0a 94       	dec	r0
    2772:	d2 f7       	brpl	.-12     	; 0x2768 <__pack_f+0x7e>
    2774:	81 e0       	ldi	r24, 0x01	; 1
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	a0 e0       	ldi	r26, 0x00	; 0
    277a:	b0 e0       	ldi	r27, 0x00	; 0
    277c:	04 c0       	rjmp	.+8      	; 0x2786 <__pack_f+0x9c>
    277e:	88 0f       	add	r24, r24
    2780:	99 1f       	adc	r25, r25
    2782:	aa 1f       	adc	r26, r26
    2784:	bb 1f       	adc	r27, r27
    2786:	2a 95       	dec	r18
    2788:	d2 f7       	brpl	.-12     	; 0x277e <__pack_f+0x94>
    278a:	01 97       	sbiw	r24, 0x01	; 1
    278c:	a1 09       	sbc	r26, r1
    278e:	b1 09       	sbc	r27, r1
    2790:	8e 21       	and	r24, r14
    2792:	9f 21       	and	r25, r15
    2794:	a0 23       	and	r26, r16
    2796:	b1 23       	and	r27, r17
    2798:	00 97       	sbiw	r24, 0x00	; 0
    279a:	a1 05       	cpc	r26, r1
    279c:	b1 05       	cpc	r27, r1
    279e:	21 f0       	breq	.+8      	; 0x27a8 <__pack_f+0xbe>
    27a0:	81 e0       	ldi	r24, 0x01	; 1
    27a2:	90 e0       	ldi	r25, 0x00	; 0
    27a4:	a0 e0       	ldi	r26, 0x00	; 0
    27a6:	b0 e0       	ldi	r27, 0x00	; 0
    27a8:	9a 01       	movw	r18, r20
    27aa:	ab 01       	movw	r20, r22
    27ac:	28 2b       	or	r18, r24
    27ae:	39 2b       	or	r19, r25
    27b0:	4a 2b       	or	r20, r26
    27b2:	5b 2b       	or	r21, r27
    27b4:	da 01       	movw	r26, r20
    27b6:	c9 01       	movw	r24, r18
    27b8:	8f 77       	andi	r24, 0x7F	; 127
    27ba:	90 70       	andi	r25, 0x00	; 0
    27bc:	a0 70       	andi	r26, 0x00	; 0
    27be:	b0 70       	andi	r27, 0x00	; 0
    27c0:	80 34       	cpi	r24, 0x40	; 64
    27c2:	91 05       	cpc	r25, r1
    27c4:	a1 05       	cpc	r26, r1
    27c6:	b1 05       	cpc	r27, r1
    27c8:	39 f4       	brne	.+14     	; 0x27d8 <__pack_f+0xee>
    27ca:	27 ff       	sbrs	r18, 7
    27cc:	09 c0       	rjmp	.+18     	; 0x27e0 <__pack_f+0xf6>
    27ce:	20 5c       	subi	r18, 0xC0	; 192
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	4f 4f       	sbci	r20, 0xFF	; 255
    27d4:	5f 4f       	sbci	r21, 0xFF	; 255
    27d6:	04 c0       	rjmp	.+8      	; 0x27e0 <__pack_f+0xf6>
    27d8:	21 5c       	subi	r18, 0xC1	; 193
    27da:	3f 4f       	sbci	r19, 0xFF	; 255
    27dc:	4f 4f       	sbci	r20, 0xFF	; 255
    27de:	5f 4f       	sbci	r21, 0xFF	; 255
    27e0:	e0 e0       	ldi	r30, 0x00	; 0
    27e2:	f0 e0       	ldi	r31, 0x00	; 0
    27e4:	20 30       	cpi	r18, 0x00	; 0
    27e6:	a0 e0       	ldi	r26, 0x00	; 0
    27e8:	3a 07       	cpc	r19, r26
    27ea:	a0 e0       	ldi	r26, 0x00	; 0
    27ec:	4a 07       	cpc	r20, r26
    27ee:	a0 e4       	ldi	r26, 0x40	; 64
    27f0:	5a 07       	cpc	r21, r26
    27f2:	10 f0       	brcs	.+4      	; 0x27f8 <__pack_f+0x10e>
    27f4:	e1 e0       	ldi	r30, 0x01	; 1
    27f6:	f0 e0       	ldi	r31, 0x00	; 0
    27f8:	79 01       	movw	r14, r18
    27fa:	8a 01       	movw	r16, r20
    27fc:	27 c0       	rjmp	.+78     	; 0x284c <__pack_f+0x162>
    27fe:	60 38       	cpi	r22, 0x80	; 128
    2800:	71 05       	cpc	r23, r1
    2802:	64 f5       	brge	.+88     	; 0x285c <__pack_f+0x172>
    2804:	fb 01       	movw	r30, r22
    2806:	e1 58       	subi	r30, 0x81	; 129
    2808:	ff 4f       	sbci	r31, 0xFF	; 255
    280a:	d8 01       	movw	r26, r16
    280c:	c7 01       	movw	r24, r14
    280e:	8f 77       	andi	r24, 0x7F	; 127
    2810:	90 70       	andi	r25, 0x00	; 0
    2812:	a0 70       	andi	r26, 0x00	; 0
    2814:	b0 70       	andi	r27, 0x00	; 0
    2816:	80 34       	cpi	r24, 0x40	; 64
    2818:	91 05       	cpc	r25, r1
    281a:	a1 05       	cpc	r26, r1
    281c:	b1 05       	cpc	r27, r1
    281e:	39 f4       	brne	.+14     	; 0x282e <__pack_f+0x144>
    2820:	e7 fe       	sbrs	r14, 7
    2822:	0d c0       	rjmp	.+26     	; 0x283e <__pack_f+0x154>
    2824:	80 e4       	ldi	r24, 0x40	; 64
    2826:	90 e0       	ldi	r25, 0x00	; 0
    2828:	a0 e0       	ldi	r26, 0x00	; 0
    282a:	b0 e0       	ldi	r27, 0x00	; 0
    282c:	04 c0       	rjmp	.+8      	; 0x2836 <__pack_f+0x14c>
    282e:	8f e3       	ldi	r24, 0x3F	; 63
    2830:	90 e0       	ldi	r25, 0x00	; 0
    2832:	a0 e0       	ldi	r26, 0x00	; 0
    2834:	b0 e0       	ldi	r27, 0x00	; 0
    2836:	e8 0e       	add	r14, r24
    2838:	f9 1e       	adc	r15, r25
    283a:	0a 1f       	adc	r16, r26
    283c:	1b 1f       	adc	r17, r27
    283e:	17 ff       	sbrs	r17, 7
    2840:	05 c0       	rjmp	.+10     	; 0x284c <__pack_f+0x162>
    2842:	16 95       	lsr	r17
    2844:	07 95       	ror	r16
    2846:	f7 94       	ror	r15
    2848:	e7 94       	ror	r14
    284a:	31 96       	adiw	r30, 0x01	; 1
    284c:	87 e0       	ldi	r24, 0x07	; 7
    284e:	16 95       	lsr	r17
    2850:	07 95       	ror	r16
    2852:	f7 94       	ror	r15
    2854:	e7 94       	ror	r14
    2856:	8a 95       	dec	r24
    2858:	d1 f7       	brne	.-12     	; 0x284e <__pack_f+0x164>
    285a:	05 c0       	rjmp	.+10     	; 0x2866 <__pack_f+0x17c>
    285c:	ee 24       	eor	r14, r14
    285e:	ff 24       	eor	r15, r15
    2860:	87 01       	movw	r16, r14
    2862:	ef ef       	ldi	r30, 0xFF	; 255
    2864:	f0 e0       	ldi	r31, 0x00	; 0
    2866:	6e 2f       	mov	r22, r30
    2868:	67 95       	ror	r22
    286a:	66 27       	eor	r22, r22
    286c:	67 95       	ror	r22
    286e:	90 2f       	mov	r25, r16
    2870:	9f 77       	andi	r25, 0x7F	; 127
    2872:	d7 94       	ror	r13
    2874:	dd 24       	eor	r13, r13
    2876:	d7 94       	ror	r13
    2878:	8e 2f       	mov	r24, r30
    287a:	86 95       	lsr	r24
    287c:	49 2f       	mov	r20, r25
    287e:	46 2b       	or	r20, r22
    2880:	58 2f       	mov	r21, r24
    2882:	5d 29       	or	r21, r13
    2884:	b7 01       	movw	r22, r14
    2886:	ca 01       	movw	r24, r20
    2888:	1f 91       	pop	r17
    288a:	0f 91       	pop	r16
    288c:	ff 90       	pop	r15
    288e:	ef 90       	pop	r14
    2890:	df 90       	pop	r13
    2892:	08 95       	ret

00002894 <__unpack_f>:
    2894:	fc 01       	movw	r30, r24
    2896:	db 01       	movw	r26, r22
    2898:	40 81       	ld	r20, Z
    289a:	51 81       	ldd	r21, Z+1	; 0x01
    289c:	22 81       	ldd	r18, Z+2	; 0x02
    289e:	62 2f       	mov	r22, r18
    28a0:	6f 77       	andi	r22, 0x7F	; 127
    28a2:	70 e0       	ldi	r23, 0x00	; 0
    28a4:	22 1f       	adc	r18, r18
    28a6:	22 27       	eor	r18, r18
    28a8:	22 1f       	adc	r18, r18
    28aa:	93 81       	ldd	r25, Z+3	; 0x03
    28ac:	89 2f       	mov	r24, r25
    28ae:	88 0f       	add	r24, r24
    28b0:	82 2b       	or	r24, r18
    28b2:	28 2f       	mov	r18, r24
    28b4:	30 e0       	ldi	r19, 0x00	; 0
    28b6:	99 1f       	adc	r25, r25
    28b8:	99 27       	eor	r25, r25
    28ba:	99 1f       	adc	r25, r25
    28bc:	11 96       	adiw	r26, 0x01	; 1
    28be:	9c 93       	st	X, r25
    28c0:	11 97       	sbiw	r26, 0x01	; 1
    28c2:	21 15       	cp	r18, r1
    28c4:	31 05       	cpc	r19, r1
    28c6:	a9 f5       	brne	.+106    	; 0x2932 <__unpack_f+0x9e>
    28c8:	41 15       	cp	r20, r1
    28ca:	51 05       	cpc	r21, r1
    28cc:	61 05       	cpc	r22, r1
    28ce:	71 05       	cpc	r23, r1
    28d0:	11 f4       	brne	.+4      	; 0x28d6 <__unpack_f+0x42>
    28d2:	82 e0       	ldi	r24, 0x02	; 2
    28d4:	37 c0       	rjmp	.+110    	; 0x2944 <__unpack_f+0xb0>
    28d6:	82 e8       	ldi	r24, 0x82	; 130
    28d8:	9f ef       	ldi	r25, 0xFF	; 255
    28da:	13 96       	adiw	r26, 0x03	; 3
    28dc:	9c 93       	st	X, r25
    28de:	8e 93       	st	-X, r24
    28e0:	12 97       	sbiw	r26, 0x02	; 2
    28e2:	9a 01       	movw	r18, r20
    28e4:	ab 01       	movw	r20, r22
    28e6:	67 e0       	ldi	r22, 0x07	; 7
    28e8:	22 0f       	add	r18, r18
    28ea:	33 1f       	adc	r19, r19
    28ec:	44 1f       	adc	r20, r20
    28ee:	55 1f       	adc	r21, r21
    28f0:	6a 95       	dec	r22
    28f2:	d1 f7       	brne	.-12     	; 0x28e8 <__unpack_f+0x54>
    28f4:	83 e0       	ldi	r24, 0x03	; 3
    28f6:	8c 93       	st	X, r24
    28f8:	0d c0       	rjmp	.+26     	; 0x2914 <__unpack_f+0x80>
    28fa:	22 0f       	add	r18, r18
    28fc:	33 1f       	adc	r19, r19
    28fe:	44 1f       	adc	r20, r20
    2900:	55 1f       	adc	r21, r21
    2902:	12 96       	adiw	r26, 0x02	; 2
    2904:	8d 91       	ld	r24, X+
    2906:	9c 91       	ld	r25, X
    2908:	13 97       	sbiw	r26, 0x03	; 3
    290a:	01 97       	sbiw	r24, 0x01	; 1
    290c:	13 96       	adiw	r26, 0x03	; 3
    290e:	9c 93       	st	X, r25
    2910:	8e 93       	st	-X, r24
    2912:	12 97       	sbiw	r26, 0x02	; 2
    2914:	20 30       	cpi	r18, 0x00	; 0
    2916:	80 e0       	ldi	r24, 0x00	; 0
    2918:	38 07       	cpc	r19, r24
    291a:	80 e0       	ldi	r24, 0x00	; 0
    291c:	48 07       	cpc	r20, r24
    291e:	80 e4       	ldi	r24, 0x40	; 64
    2920:	58 07       	cpc	r21, r24
    2922:	58 f3       	brcs	.-42     	; 0x28fa <__unpack_f+0x66>
    2924:	14 96       	adiw	r26, 0x04	; 4
    2926:	2d 93       	st	X+, r18
    2928:	3d 93       	st	X+, r19
    292a:	4d 93       	st	X+, r20
    292c:	5c 93       	st	X, r21
    292e:	17 97       	sbiw	r26, 0x07	; 7
    2930:	08 95       	ret
    2932:	2f 3f       	cpi	r18, 0xFF	; 255
    2934:	31 05       	cpc	r19, r1
    2936:	79 f4       	brne	.+30     	; 0x2956 <__unpack_f+0xc2>
    2938:	41 15       	cp	r20, r1
    293a:	51 05       	cpc	r21, r1
    293c:	61 05       	cpc	r22, r1
    293e:	71 05       	cpc	r23, r1
    2940:	19 f4       	brne	.+6      	; 0x2948 <__unpack_f+0xb4>
    2942:	84 e0       	ldi	r24, 0x04	; 4
    2944:	8c 93       	st	X, r24
    2946:	08 95       	ret
    2948:	64 ff       	sbrs	r22, 4
    294a:	03 c0       	rjmp	.+6      	; 0x2952 <__unpack_f+0xbe>
    294c:	81 e0       	ldi	r24, 0x01	; 1
    294e:	8c 93       	st	X, r24
    2950:	12 c0       	rjmp	.+36     	; 0x2976 <__unpack_f+0xe2>
    2952:	1c 92       	st	X, r1
    2954:	10 c0       	rjmp	.+32     	; 0x2976 <__unpack_f+0xe2>
    2956:	2f 57       	subi	r18, 0x7F	; 127
    2958:	30 40       	sbci	r19, 0x00	; 0
    295a:	13 96       	adiw	r26, 0x03	; 3
    295c:	3c 93       	st	X, r19
    295e:	2e 93       	st	-X, r18
    2960:	12 97       	sbiw	r26, 0x02	; 2
    2962:	83 e0       	ldi	r24, 0x03	; 3
    2964:	8c 93       	st	X, r24
    2966:	87 e0       	ldi	r24, 0x07	; 7
    2968:	44 0f       	add	r20, r20
    296a:	55 1f       	adc	r21, r21
    296c:	66 1f       	adc	r22, r22
    296e:	77 1f       	adc	r23, r23
    2970:	8a 95       	dec	r24
    2972:	d1 f7       	brne	.-12     	; 0x2968 <__unpack_f+0xd4>
    2974:	70 64       	ori	r23, 0x40	; 64
    2976:	14 96       	adiw	r26, 0x04	; 4
    2978:	4d 93       	st	X+, r20
    297a:	5d 93       	st	X+, r21
    297c:	6d 93       	st	X+, r22
    297e:	7c 93       	st	X, r23
    2980:	17 97       	sbiw	r26, 0x07	; 7
    2982:	08 95       	ret

00002984 <__fpcmp_parts_f>:
    2984:	1f 93       	push	r17
    2986:	dc 01       	movw	r26, r24
    2988:	fb 01       	movw	r30, r22
    298a:	9c 91       	ld	r25, X
    298c:	92 30       	cpi	r25, 0x02	; 2
    298e:	08 f4       	brcc	.+2      	; 0x2992 <__fpcmp_parts_f+0xe>
    2990:	47 c0       	rjmp	.+142    	; 0x2a20 <__fpcmp_parts_f+0x9c>
    2992:	80 81       	ld	r24, Z
    2994:	82 30       	cpi	r24, 0x02	; 2
    2996:	08 f4       	brcc	.+2      	; 0x299a <__fpcmp_parts_f+0x16>
    2998:	43 c0       	rjmp	.+134    	; 0x2a20 <__fpcmp_parts_f+0x9c>
    299a:	94 30       	cpi	r25, 0x04	; 4
    299c:	51 f4       	brne	.+20     	; 0x29b2 <__fpcmp_parts_f+0x2e>
    299e:	11 96       	adiw	r26, 0x01	; 1
    29a0:	1c 91       	ld	r17, X
    29a2:	84 30       	cpi	r24, 0x04	; 4
    29a4:	99 f5       	brne	.+102    	; 0x2a0c <__fpcmp_parts_f+0x88>
    29a6:	81 81       	ldd	r24, Z+1	; 0x01
    29a8:	68 2f       	mov	r22, r24
    29aa:	70 e0       	ldi	r23, 0x00	; 0
    29ac:	61 1b       	sub	r22, r17
    29ae:	71 09       	sbc	r23, r1
    29b0:	3f c0       	rjmp	.+126    	; 0x2a30 <__fpcmp_parts_f+0xac>
    29b2:	84 30       	cpi	r24, 0x04	; 4
    29b4:	21 f0       	breq	.+8      	; 0x29be <__fpcmp_parts_f+0x3a>
    29b6:	92 30       	cpi	r25, 0x02	; 2
    29b8:	31 f4       	brne	.+12     	; 0x29c6 <__fpcmp_parts_f+0x42>
    29ba:	82 30       	cpi	r24, 0x02	; 2
    29bc:	b9 f1       	breq	.+110    	; 0x2a2c <__fpcmp_parts_f+0xa8>
    29be:	81 81       	ldd	r24, Z+1	; 0x01
    29c0:	88 23       	and	r24, r24
    29c2:	89 f1       	breq	.+98     	; 0x2a26 <__fpcmp_parts_f+0xa2>
    29c4:	2d c0       	rjmp	.+90     	; 0x2a20 <__fpcmp_parts_f+0x9c>
    29c6:	11 96       	adiw	r26, 0x01	; 1
    29c8:	1c 91       	ld	r17, X
    29ca:	11 97       	sbiw	r26, 0x01	; 1
    29cc:	82 30       	cpi	r24, 0x02	; 2
    29ce:	f1 f0       	breq	.+60     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29d0:	81 81       	ldd	r24, Z+1	; 0x01
    29d2:	18 17       	cp	r17, r24
    29d4:	d9 f4       	brne	.+54     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29d6:	12 96       	adiw	r26, 0x02	; 2
    29d8:	2d 91       	ld	r18, X+
    29da:	3c 91       	ld	r19, X
    29dc:	13 97       	sbiw	r26, 0x03	; 3
    29de:	82 81       	ldd	r24, Z+2	; 0x02
    29e0:	93 81       	ldd	r25, Z+3	; 0x03
    29e2:	82 17       	cp	r24, r18
    29e4:	93 07       	cpc	r25, r19
    29e6:	94 f0       	brlt	.+36     	; 0x2a0c <__fpcmp_parts_f+0x88>
    29e8:	28 17       	cp	r18, r24
    29ea:	39 07       	cpc	r19, r25
    29ec:	bc f0       	brlt	.+46     	; 0x2a1c <__fpcmp_parts_f+0x98>
    29ee:	14 96       	adiw	r26, 0x04	; 4
    29f0:	8d 91       	ld	r24, X+
    29f2:	9d 91       	ld	r25, X+
    29f4:	0d 90       	ld	r0, X+
    29f6:	bc 91       	ld	r27, X
    29f8:	a0 2d       	mov	r26, r0
    29fa:	24 81       	ldd	r18, Z+4	; 0x04
    29fc:	35 81       	ldd	r19, Z+5	; 0x05
    29fe:	46 81       	ldd	r20, Z+6	; 0x06
    2a00:	57 81       	ldd	r21, Z+7	; 0x07
    2a02:	28 17       	cp	r18, r24
    2a04:	39 07       	cpc	r19, r25
    2a06:	4a 07       	cpc	r20, r26
    2a08:	5b 07       	cpc	r21, r27
    2a0a:	18 f4       	brcc	.+6      	; 0x2a12 <__fpcmp_parts_f+0x8e>
    2a0c:	11 23       	and	r17, r17
    2a0e:	41 f0       	breq	.+16     	; 0x2a20 <__fpcmp_parts_f+0x9c>
    2a10:	0a c0       	rjmp	.+20     	; 0x2a26 <__fpcmp_parts_f+0xa2>
    2a12:	82 17       	cp	r24, r18
    2a14:	93 07       	cpc	r25, r19
    2a16:	a4 07       	cpc	r26, r20
    2a18:	b5 07       	cpc	r27, r21
    2a1a:	40 f4       	brcc	.+16     	; 0x2a2c <__fpcmp_parts_f+0xa8>
    2a1c:	11 23       	and	r17, r17
    2a1e:	19 f0       	breq	.+6      	; 0x2a26 <__fpcmp_parts_f+0xa2>
    2a20:	61 e0       	ldi	r22, 0x01	; 1
    2a22:	70 e0       	ldi	r23, 0x00	; 0
    2a24:	05 c0       	rjmp	.+10     	; 0x2a30 <__fpcmp_parts_f+0xac>
    2a26:	6f ef       	ldi	r22, 0xFF	; 255
    2a28:	7f ef       	ldi	r23, 0xFF	; 255
    2a2a:	02 c0       	rjmp	.+4      	; 0x2a30 <__fpcmp_parts_f+0xac>
    2a2c:	60 e0       	ldi	r22, 0x00	; 0
    2a2e:	70 e0       	ldi	r23, 0x00	; 0
    2a30:	cb 01       	movw	r24, r22
    2a32:	1f 91       	pop	r17
    2a34:	08 95       	ret

00002a36 <ADC_voidInit>:
#include"ADC_private.h"
#include"ADC_config.h"


void ADC_voidInit(void)
{
    2a36:	df 93       	push	r29
    2a38:	cf 93       	push	r28
    2a3a:	cd b7       	in	r28, 0x3d	; 61
    2a3c:	de b7       	in	r29, 0x3e	; 62

	ADCMUX_REG |= ADC_REFERNECE_VOLTAGE | ADLAR;
    2a3e:	a7 e2       	ldi	r26, 0x27	; 39
    2a40:	b0 e0       	ldi	r27, 0x00	; 0
    2a42:	e7 e2       	ldi	r30, 0x27	; 39
    2a44:	f0 e0       	ldi	r31, 0x00	; 0
    2a46:	80 81       	ld	r24, Z
    2a48:	80 66       	ori	r24, 0x60	; 96
    2a4a:	8c 93       	st	X, r24
	ADCSRA_REG |= ADC_STATE | ADC_INTERRUPT | ADC_CLK;
    2a4c:	a6 e2       	ldi	r26, 0x26	; 38
    2a4e:	b0 e0       	ldi	r27, 0x00	; 0
    2a50:	e6 e2       	ldi	r30, 0x26	; 38
    2a52:	f0 e0       	ldi	r31, 0x00	; 0
    2a54:	80 81       	ld	r24, Z
    2a56:	87 68       	ori	r24, 0x87	; 135
    2a58:	8c 93       	st	X, r24


}
    2a5a:	cf 91       	pop	r28
    2a5c:	df 91       	pop	r29
    2a5e:	08 95       	ret

00002a60 <ADC_16ReadChannelADC>:

u16 ADC_16ReadChannelADC( u8 Copy_u8Channel_Id )

{
    2a60:	df 93       	push	r29
    2a62:	cf 93       	push	r28
    2a64:	00 d0       	rcall	.+0      	; 0x2a66 <ADC_16ReadChannelADC+0x6>
    2a66:	0f 92       	push	r0
    2a68:	cd b7       	in	r28, 0x3d	; 61
    2a6a:	de b7       	in	r29, 0x3e	; 62
    2a6c:	8b 83       	std	Y+3, r24	; 0x03

	u16 Result = 0;
    2a6e:	1a 82       	std	Y+2, r1	; 0x02
    2a70:	19 82       	std	Y+1, r1	; 0x01
	ADCMUX_REG &=~(0b11111);
    2a72:	a7 e2       	ldi	r26, 0x27	; 39
    2a74:	b0 e0       	ldi	r27, 0x00	; 0
    2a76:	e7 e2       	ldi	r30, 0x27	; 39
    2a78:	f0 e0       	ldi	r31, 0x00	; 0
    2a7a:	80 81       	ld	r24, Z
    2a7c:	80 7e       	andi	r24, 0xE0	; 224
    2a7e:	8c 93       	st	X, r24
	ADCMUX_REG |= Copy_u8Channel_Id; // select Channel
    2a80:	a7 e2       	ldi	r26, 0x27	; 39
    2a82:	b0 e0       	ldi	r27, 0x00	; 0
    2a84:	e7 e2       	ldi	r30, 0x27	; 39
    2a86:	f0 e0       	ldi	r31, 0x00	; 0
    2a88:	90 81       	ld	r25, Z
    2a8a:	8b 81       	ldd	r24, Y+3	; 0x03
    2a8c:	89 2b       	or	r24, r25
    2a8e:	8c 93       	st	X, r24
	// Start Conversion
	ADCSRA_REG |= start_con;
    2a90:	a6 e2       	ldi	r26, 0x26	; 38
    2a92:	b0 e0       	ldi	r27, 0x00	; 0
    2a94:	e6 e2       	ldi	r30, 0x26	; 38
    2a96:	f0 e0       	ldi	r31, 0x00	; 0
    2a98:	80 81       	ld	r24, Z
    2a9a:	80 64       	ori	r24, 0x40	; 64
    2a9c:	8c 93       	st	X, r24
	while( ( (ADCSRA_REG >> 4)& 1) == 0 ) // wait the flag to be set
    2a9e:	e6 e2       	ldi	r30, 0x26	; 38
    2aa0:	f0 e0       	ldi	r31, 0x00	; 0
    2aa2:	80 81       	ld	r24, Z
    2aa4:	82 95       	swap	r24
    2aa6:	8f 70       	andi	r24, 0x0F	; 15
    2aa8:	88 2f       	mov	r24, r24
    2aaa:	90 e0       	ldi	r25, 0x00	; 0
    2aac:	81 70       	andi	r24, 0x01	; 1
    2aae:	90 70       	andi	r25, 0x00	; 0
    2ab0:	00 97       	sbiw	r24, 0x00	; 0
    2ab2:	a9 f3       	breq	.-22     	; 0x2a9e <ADC_16ReadChannelADC+0x3e>
	}
#if ADLAR == ADC_LEFT_ADJUST_DISABEL
	Result = ADCL_REG | (ADCH_REG <<8 );

#elif ADLAR == ADC_LEFT_ADJUST_ENABLE
	Result = (ADCH_REG << 2);
    2ab4:	e5 e2       	ldi	r30, 0x25	; 37
    2ab6:	f0 e0       	ldi	r31, 0x00	; 0
    2ab8:	80 81       	ld	r24, Z
    2aba:	88 2f       	mov	r24, r24
    2abc:	90 e0       	ldi	r25, 0x00	; 0
    2abe:	88 0f       	add	r24, r24
    2ac0:	99 1f       	adc	r25, r25
    2ac2:	88 0f       	add	r24, r24
    2ac4:	99 1f       	adc	r25, r25
    2ac6:	9a 83       	std	Y+2, r25	; 0x02
    2ac8:	89 83       	std	Y+1, r24	; 0x01
#endif
	// clear flag
		ADCSRA_REG |= (1 << 4);
    2aca:	a6 e2       	ldi	r26, 0x26	; 38
    2acc:	b0 e0       	ldi	r27, 0x00	; 0
    2ace:	e6 e2       	ldi	r30, 0x26	; 38
    2ad0:	f0 e0       	ldi	r31, 0x00	; 0
    2ad2:	80 81       	ld	r24, Z
    2ad4:	80 61       	ori	r24, 0x10	; 16
    2ad6:	8c 93       	st	X, r24
	return Result;
    2ad8:	89 81       	ldd	r24, Y+1	; 0x01
    2ada:	9a 81       	ldd	r25, Y+2	; 0x02

}
    2adc:	0f 90       	pop	r0
    2ade:	0f 90       	pop	r0
    2ae0:	0f 90       	pop	r0
    2ae2:	cf 91       	pop	r28
    2ae4:	df 91       	pop	r29
    2ae6:	08 95       	ret

00002ae8 <DIO_enumSetPortDirection>:
#include "DIO_private.h"
#include "DIO_interface.h"
#include "DIO_config.h"


DIO_ErrorStatus DIO_enumSetPortDirection( u8 Copy_u8Port , u8 Copy_u8Direction ){
    2ae8:	df 93       	push	r29
    2aea:	cf 93       	push	r28
    2aec:	00 d0       	rcall	.+0      	; 0x2aee <DIO_enumSetPortDirection+0x6>
    2aee:	00 d0       	rcall	.+0      	; 0x2af0 <DIO_enumSetPortDirection+0x8>
    2af0:	0f 92       	push	r0
    2af2:	cd b7       	in	r28, 0x3d	; 61
    2af4:	de b7       	in	r29, 0x3e	; 62
    2af6:	8a 83       	std	Y+2, r24	; 0x02
    2af8:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    2afa:	81 e0       	ldi	r24, 0x01	; 1
    2afc:	89 83       	std	Y+1, r24	; 0x01
 if(Copy_u8Port<=DIO_PORTD){
    2afe:	8a 81       	ldd	r24, Y+2	; 0x02
    2b00:	84 30       	cpi	r24, 0x04	; 4
    2b02:	a8 f5       	brcc	.+106    	; 0x2b6e <DIO_enumSetPortDirection+0x86>

		switch( Copy_u8Port ){
    2b04:	8a 81       	ldd	r24, Y+2	; 0x02
    2b06:	28 2f       	mov	r18, r24
    2b08:	30 e0       	ldi	r19, 0x00	; 0
    2b0a:	3d 83       	std	Y+5, r19	; 0x05
    2b0c:	2c 83       	std	Y+4, r18	; 0x04
    2b0e:	8c 81       	ldd	r24, Y+4	; 0x04
    2b10:	9d 81       	ldd	r25, Y+5	; 0x05
    2b12:	81 30       	cpi	r24, 0x01	; 1
    2b14:	91 05       	cpc	r25, r1
    2b16:	d1 f0       	breq	.+52     	; 0x2b4c <DIO_enumSetPortDirection+0x64>
    2b18:	2c 81       	ldd	r18, Y+4	; 0x04
    2b1a:	3d 81       	ldd	r19, Y+5	; 0x05
    2b1c:	22 30       	cpi	r18, 0x02	; 2
    2b1e:	31 05       	cpc	r19, r1
    2b20:	2c f4       	brge	.+10     	; 0x2b2c <DIO_enumSetPortDirection+0x44>
    2b22:	8c 81       	ldd	r24, Y+4	; 0x04
    2b24:	9d 81       	ldd	r25, Y+5	; 0x05
    2b26:	00 97       	sbiw	r24, 0x00	; 0
    2b28:	61 f0       	breq	.+24     	; 0x2b42 <DIO_enumSetPortDirection+0x5a>
    2b2a:	1f c0       	rjmp	.+62     	; 0x2b6a <DIO_enumSetPortDirection+0x82>
    2b2c:	2c 81       	ldd	r18, Y+4	; 0x04
    2b2e:	3d 81       	ldd	r19, Y+5	; 0x05
    2b30:	22 30       	cpi	r18, 0x02	; 2
    2b32:	31 05       	cpc	r19, r1
    2b34:	81 f0       	breq	.+32     	; 0x2b56 <DIO_enumSetPortDirection+0x6e>
    2b36:	8c 81       	ldd	r24, Y+4	; 0x04
    2b38:	9d 81       	ldd	r25, Y+5	; 0x05
    2b3a:	83 30       	cpi	r24, 0x03	; 3
    2b3c:	91 05       	cpc	r25, r1
    2b3e:	81 f0       	breq	.+32     	; 0x2b60 <DIO_enumSetPortDirection+0x78>
    2b40:	14 c0       	rjmp	.+40     	; 0x2b6a <DIO_enumSetPortDirection+0x82>

		case DIO_PORTA: DDRA_REG = Copy_u8Direction   ;  break;
    2b42:	ea e3       	ldi	r30, 0x3A	; 58
    2b44:	f0 e0       	ldi	r31, 0x00	; 0
    2b46:	8b 81       	ldd	r24, Y+3	; 0x03
    2b48:	80 83       	st	Z, r24
    2b4a:	12 c0       	rjmp	.+36     	; 0x2b70 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTB: DDRB_REG = Copy_u8Direction   ;  break;
    2b4c:	e7 e3       	ldi	r30, 0x37	; 55
    2b4e:	f0 e0       	ldi	r31, 0x00	; 0
    2b50:	8b 81       	ldd	r24, Y+3	; 0x03
    2b52:	80 83       	st	Z, r24
    2b54:	0d c0       	rjmp	.+26     	; 0x2b70 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTC: DDRC_REG = Copy_u8Direction   ;  break;
    2b56:	e4 e3       	ldi	r30, 0x34	; 52
    2b58:	f0 e0       	ldi	r31, 0x00	; 0
    2b5a:	8b 81       	ldd	r24, Y+3	; 0x03
    2b5c:	80 83       	st	Z, r24
    2b5e:	08 c0       	rjmp	.+16     	; 0x2b70 <DIO_enumSetPortDirection+0x88>
		case DIO_PORTD: DDRD_REG = Copy_u8Direction   ;  break;
    2b60:	e1 e3       	ldi	r30, 0x31	; 49
    2b62:	f0 e0       	ldi	r31, 0x00	; 0
    2b64:	8b 81       	ldd	r24, Y+3	; 0x03
    2b66:	80 83       	st	Z, r24
    2b68:	03 c0       	rjmp	.+6      	; 0x2b70 <DIO_enumSetPortDirection+0x88>
		default       : LOC_enumState = DIO_NOK   ;  break;
    2b6a:	19 82       	std	Y+1, r1	; 0x01
    2b6c:	01 c0       	rjmp	.+2      	; 0x2b70 <DIO_enumSetPortDirection+0x88>

		}

 }
 else {
	 LOC_enumState = DIO_NOK;
    2b6e:	19 82       	std	Y+1, r1	; 0x01
 }
	return LOC_enumState ;
    2b70:	89 81       	ldd	r24, Y+1	; 0x01

}
    2b72:	0f 90       	pop	r0
    2b74:	0f 90       	pop	r0
    2b76:	0f 90       	pop	r0
    2b78:	0f 90       	pop	r0
    2b7a:	0f 90       	pop	r0
    2b7c:	cf 91       	pop	r28
    2b7e:	df 91       	pop	r29
    2b80:	08 95       	ret

00002b82 <DIO_enumSetPortValue>:


DIO_ErrorStatus DIO_enumSetPortValue    ( u8 Copy_u8Port , u8 Copy_u8Value ){
    2b82:	df 93       	push	r29
    2b84:	cf 93       	push	r28
    2b86:	00 d0       	rcall	.+0      	; 0x2b88 <DIO_enumSetPortValue+0x6>
    2b88:	00 d0       	rcall	.+0      	; 0x2b8a <DIO_enumSetPortValue+0x8>
    2b8a:	0f 92       	push	r0
    2b8c:	cd b7       	in	r28, 0x3d	; 61
    2b8e:	de b7       	in	r29, 0x3e	; 62
    2b90:	8a 83       	std	Y+2, r24	; 0x02
    2b92:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    2b94:	81 e0       	ldi	r24, 0x01	; 1
    2b96:	89 83       	std	Y+1, r24	; 0x01
	 if(Copy_u8Port<=DIO_PORTD){
    2b98:	8a 81       	ldd	r24, Y+2	; 0x02
    2b9a:	84 30       	cpi	r24, 0x04	; 4
    2b9c:	a8 f5       	brcc	.+106    	; 0x2c08 <DIO_enumSetPortValue+0x86>
	switch( Copy_u8Port ){
    2b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2ba0:	28 2f       	mov	r18, r24
    2ba2:	30 e0       	ldi	r19, 0x00	; 0
    2ba4:	3d 83       	std	Y+5, r19	; 0x05
    2ba6:	2c 83       	std	Y+4, r18	; 0x04
    2ba8:	8c 81       	ldd	r24, Y+4	; 0x04
    2baa:	9d 81       	ldd	r25, Y+5	; 0x05
    2bac:	81 30       	cpi	r24, 0x01	; 1
    2bae:	91 05       	cpc	r25, r1
    2bb0:	d1 f0       	breq	.+52     	; 0x2be6 <DIO_enumSetPortValue+0x64>
    2bb2:	2c 81       	ldd	r18, Y+4	; 0x04
    2bb4:	3d 81       	ldd	r19, Y+5	; 0x05
    2bb6:	22 30       	cpi	r18, 0x02	; 2
    2bb8:	31 05       	cpc	r19, r1
    2bba:	2c f4       	brge	.+10     	; 0x2bc6 <DIO_enumSetPortValue+0x44>
    2bbc:	8c 81       	ldd	r24, Y+4	; 0x04
    2bbe:	9d 81       	ldd	r25, Y+5	; 0x05
    2bc0:	00 97       	sbiw	r24, 0x00	; 0
    2bc2:	61 f0       	breq	.+24     	; 0x2bdc <DIO_enumSetPortValue+0x5a>
    2bc4:	1f c0       	rjmp	.+62     	; 0x2c04 <DIO_enumSetPortValue+0x82>
    2bc6:	2c 81       	ldd	r18, Y+4	; 0x04
    2bc8:	3d 81       	ldd	r19, Y+5	; 0x05
    2bca:	22 30       	cpi	r18, 0x02	; 2
    2bcc:	31 05       	cpc	r19, r1
    2bce:	81 f0       	breq	.+32     	; 0x2bf0 <DIO_enumSetPortValue+0x6e>
    2bd0:	8c 81       	ldd	r24, Y+4	; 0x04
    2bd2:	9d 81       	ldd	r25, Y+5	; 0x05
    2bd4:	83 30       	cpi	r24, 0x03	; 3
    2bd6:	91 05       	cpc	r25, r1
    2bd8:	81 f0       	breq	.+32     	; 0x2bfa <DIO_enumSetPortValue+0x78>
    2bda:	14 c0       	rjmp	.+40     	; 0x2c04 <DIO_enumSetPortValue+0x82>

	case DIO_PORTA: PORTA_REG = Copy_u8Value     ;  break;
    2bdc:	eb e3       	ldi	r30, 0x3B	; 59
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	8b 81       	ldd	r24, Y+3	; 0x03
    2be2:	80 83       	st	Z, r24
    2be4:	12 c0       	rjmp	.+36     	; 0x2c0a <DIO_enumSetPortValue+0x88>
	case DIO_PORTB: PORTB_REG = Copy_u8Value     ;  break;
    2be6:	e8 e3       	ldi	r30, 0x38	; 56
    2be8:	f0 e0       	ldi	r31, 0x00	; 0
    2bea:	8b 81       	ldd	r24, Y+3	; 0x03
    2bec:	80 83       	st	Z, r24
    2bee:	0d c0       	rjmp	.+26     	; 0x2c0a <DIO_enumSetPortValue+0x88>
	case DIO_PORTC: PORTC_REG = Copy_u8Value     ;  break;
    2bf0:	e5 e3       	ldi	r30, 0x35	; 53
    2bf2:	f0 e0       	ldi	r31, 0x00	; 0
    2bf4:	8b 81       	ldd	r24, Y+3	; 0x03
    2bf6:	80 83       	st	Z, r24
    2bf8:	08 c0       	rjmp	.+16     	; 0x2c0a <DIO_enumSetPortValue+0x88>
	case DIO_PORTD: PORTD_REG = Copy_u8Value     ;  break;
    2bfa:	e2 e3       	ldi	r30, 0x32	; 50
    2bfc:	f0 e0       	ldi	r31, 0x00	; 0
    2bfe:	8b 81       	ldd	r24, Y+3	; 0x03
    2c00:	80 83       	st	Z, r24
    2c02:	03 c0       	rjmp	.+6      	; 0x2c0a <DIO_enumSetPortValue+0x88>
	default       : LOC_enumState = DIO_NOK  ;  break;
    2c04:	19 82       	std	Y+1, r1	; 0x01
    2c06:	01 c0       	rjmp	.+2      	; 0x2c0a <DIO_enumSetPortValue+0x88>

	}
	 }
	 else {
	 	 LOC_enumState = DIO_NOK;
    2c08:	19 82       	std	Y+1, r1	; 0x01
	  }

	return LOC_enumState ;
    2c0a:	89 81       	ldd	r24, Y+1	; 0x01

}
    2c0c:	0f 90       	pop	r0
    2c0e:	0f 90       	pop	r0
    2c10:	0f 90       	pop	r0
    2c12:	0f 90       	pop	r0
    2c14:	0f 90       	pop	r0
    2c16:	cf 91       	pop	r28
    2c18:	df 91       	pop	r29
    2c1a:	08 95       	ret

00002c1c <DIO_enumTogPortValue>:

DIO_ErrorStatus DIO_enumTogPortValue    ( u8 Copy_u8Port ){
    2c1c:	df 93       	push	r29
    2c1e:	cf 93       	push	r28
    2c20:	00 d0       	rcall	.+0      	; 0x2c22 <DIO_enumTogPortValue+0x6>
    2c22:	00 d0       	rcall	.+0      	; 0x2c24 <DIO_enumTogPortValue+0x8>
    2c24:	cd b7       	in	r28, 0x3d	; 61
    2c26:	de b7       	in	r29, 0x3e	; 62
    2c28:	8a 83       	std	Y+2, r24	; 0x02

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    2c2a:	81 e0       	ldi	r24, 0x01	; 1
    2c2c:	89 83       	std	Y+1, r24	; 0x01
	 if(Copy_u8Port<=DIO_PORTD){
    2c2e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c30:	84 30       	cpi	r24, 0x04	; 4
    2c32:	08 f0       	brcs	.+2      	; 0x2c36 <DIO_enumTogPortValue+0x1a>
    2c34:	41 c0       	rjmp	.+130    	; 0x2cb8 <DIO_enumTogPortValue+0x9c>
	switch( Copy_u8Port ){
    2c36:	8a 81       	ldd	r24, Y+2	; 0x02
    2c38:	28 2f       	mov	r18, r24
    2c3a:	30 e0       	ldi	r19, 0x00	; 0
    2c3c:	3c 83       	std	Y+4, r19	; 0x04
    2c3e:	2b 83       	std	Y+3, r18	; 0x03
    2c40:	8b 81       	ldd	r24, Y+3	; 0x03
    2c42:	9c 81       	ldd	r25, Y+4	; 0x04
    2c44:	81 30       	cpi	r24, 0x01	; 1
    2c46:	91 05       	cpc	r25, r1
    2c48:	e9 f0       	breq	.+58     	; 0x2c84 <DIO_enumTogPortValue+0x68>
    2c4a:	2b 81       	ldd	r18, Y+3	; 0x03
    2c4c:	3c 81       	ldd	r19, Y+4	; 0x04
    2c4e:	22 30       	cpi	r18, 0x02	; 2
    2c50:	31 05       	cpc	r19, r1
    2c52:	2c f4       	brge	.+10     	; 0x2c5e <DIO_enumTogPortValue+0x42>
    2c54:	8b 81       	ldd	r24, Y+3	; 0x03
    2c56:	9c 81       	ldd	r25, Y+4	; 0x04
    2c58:	00 97       	sbiw	r24, 0x00	; 0
    2c5a:	61 f0       	breq	.+24     	; 0x2c74 <DIO_enumTogPortValue+0x58>
    2c5c:	2b c0       	rjmp	.+86     	; 0x2cb4 <DIO_enumTogPortValue+0x98>
    2c5e:	2b 81       	ldd	r18, Y+3	; 0x03
    2c60:	3c 81       	ldd	r19, Y+4	; 0x04
    2c62:	22 30       	cpi	r18, 0x02	; 2
    2c64:	31 05       	cpc	r19, r1
    2c66:	b1 f0       	breq	.+44     	; 0x2c94 <DIO_enumTogPortValue+0x78>
    2c68:	8b 81       	ldd	r24, Y+3	; 0x03
    2c6a:	9c 81       	ldd	r25, Y+4	; 0x04
    2c6c:	83 30       	cpi	r24, 0x03	; 3
    2c6e:	91 05       	cpc	r25, r1
    2c70:	c9 f0       	breq	.+50     	; 0x2ca4 <DIO_enumTogPortValue+0x88>
    2c72:	20 c0       	rjmp	.+64     	; 0x2cb4 <DIO_enumTogPortValue+0x98>

	case DIO_PORTA: PORTA_REG =   ~ PORTA_REG     ;  break;
    2c74:	ab e3       	ldi	r26, 0x3B	; 59
    2c76:	b0 e0       	ldi	r27, 0x00	; 0
    2c78:	eb e3       	ldi	r30, 0x3B	; 59
    2c7a:	f0 e0       	ldi	r31, 0x00	; 0
    2c7c:	80 81       	ld	r24, Z
    2c7e:	80 95       	com	r24
    2c80:	8c 93       	st	X, r24
    2c82:	1b c0       	rjmp	.+54     	; 0x2cba <DIO_enumTogPortValue+0x9e>
	case DIO_PORTB: PORTB_REG =   ~ PORTB_REG     ;  break;
    2c84:	a8 e3       	ldi	r26, 0x38	; 56
    2c86:	b0 e0       	ldi	r27, 0x00	; 0
    2c88:	e8 e3       	ldi	r30, 0x38	; 56
    2c8a:	f0 e0       	ldi	r31, 0x00	; 0
    2c8c:	80 81       	ld	r24, Z
    2c8e:	80 95       	com	r24
    2c90:	8c 93       	st	X, r24
    2c92:	13 c0       	rjmp	.+38     	; 0x2cba <DIO_enumTogPortValue+0x9e>
	case DIO_PORTC: PORTC_REG =   ~ PORTC_REG     ;  break;
    2c94:	a5 e3       	ldi	r26, 0x35	; 53
    2c96:	b0 e0       	ldi	r27, 0x00	; 0
    2c98:	e5 e3       	ldi	r30, 0x35	; 53
    2c9a:	f0 e0       	ldi	r31, 0x00	; 0
    2c9c:	80 81       	ld	r24, Z
    2c9e:	80 95       	com	r24
    2ca0:	8c 93       	st	X, r24
    2ca2:	0b c0       	rjmp	.+22     	; 0x2cba <DIO_enumTogPortValue+0x9e>
	case DIO_PORTD: PORTD_REG =   ~PORTD_REG     ;  break;
    2ca4:	a2 e3       	ldi	r26, 0x32	; 50
    2ca6:	b0 e0       	ldi	r27, 0x00	; 0
    2ca8:	e2 e3       	ldi	r30, 0x32	; 50
    2caa:	f0 e0       	ldi	r31, 0x00	; 0
    2cac:	80 81       	ld	r24, Z
    2cae:	80 95       	com	r24
    2cb0:	8c 93       	st	X, r24
    2cb2:	03 c0       	rjmp	.+6      	; 0x2cba <DIO_enumTogPortValue+0x9e>
	default       : LOC_enumState = DIO_NOK     ;  break;
    2cb4:	19 82       	std	Y+1, r1	; 0x01
    2cb6:	01 c0       	rjmp	.+2      	; 0x2cba <DIO_enumTogPortValue+0x9e>

	}
	 }
	 else {
	 	 LOC_enumState = DIO_NOK;
    2cb8:	19 82       	std	Y+1, r1	; 0x01
	  }

	return LOC_enumState ;
    2cba:	89 81       	ldd	r24, Y+1	; 0x01

}
    2cbc:	0f 90       	pop	r0
    2cbe:	0f 90       	pop	r0
    2cc0:	0f 90       	pop	r0
    2cc2:	0f 90       	pop	r0
    2cc4:	cf 91       	pop	r28
    2cc6:	df 91       	pop	r29
    2cc8:	08 95       	ret

00002cca <DIO_enumGetPortValue>:

DIO_ErrorStatus DIO_enumGetPortValue     ( u8 Copy_u8Port , u8 * Copy_u8ptrData ){
    2cca:	df 93       	push	r29
    2ccc:	cf 93       	push	r28
    2cce:	00 d0       	rcall	.+0      	; 0x2cd0 <DIO_enumGetPortValue+0x6>
    2cd0:	00 d0       	rcall	.+0      	; 0x2cd2 <DIO_enumGetPortValue+0x8>
    2cd2:	00 d0       	rcall	.+0      	; 0x2cd4 <DIO_enumGetPortValue+0xa>
    2cd4:	cd b7       	in	r28, 0x3d	; 61
    2cd6:	de b7       	in	r29, 0x3e	; 62
    2cd8:	8a 83       	std	Y+2, r24	; 0x02
    2cda:	7c 83       	std	Y+4, r23	; 0x04
    2cdc:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK;
    2cde:	81 e0       	ldi	r24, 0x01	; 1
    2ce0:	89 83       	std	Y+1, r24	; 0x01
	 if(Copy_u8Port<=DIO_PORTD){
    2ce2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ce4:	84 30       	cpi	r24, 0x04	; 4
    2ce6:	e8 f5       	brcc	.+122    	; 0x2d62 <DIO_enumGetPortValue+0x98>
	switch( Copy_u8Port ){
    2ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    2cea:	28 2f       	mov	r18, r24
    2cec:	30 e0       	ldi	r19, 0x00	; 0
    2cee:	3e 83       	std	Y+6, r19	; 0x06
    2cf0:	2d 83       	std	Y+5, r18	; 0x05
    2cf2:	8d 81       	ldd	r24, Y+5	; 0x05
    2cf4:	9e 81       	ldd	r25, Y+6	; 0x06
    2cf6:	81 30       	cpi	r24, 0x01	; 1
    2cf8:	91 05       	cpc	r25, r1
    2cfa:	e1 f0       	breq	.+56     	; 0x2d34 <DIO_enumGetPortValue+0x6a>
    2cfc:	2d 81       	ldd	r18, Y+5	; 0x05
    2cfe:	3e 81       	ldd	r19, Y+6	; 0x06
    2d00:	22 30       	cpi	r18, 0x02	; 2
    2d02:	31 05       	cpc	r19, r1
    2d04:	2c f4       	brge	.+10     	; 0x2d10 <DIO_enumGetPortValue+0x46>
    2d06:	8d 81       	ldd	r24, Y+5	; 0x05
    2d08:	9e 81       	ldd	r25, Y+6	; 0x06
    2d0a:	00 97       	sbiw	r24, 0x00	; 0
    2d0c:	61 f0       	breq	.+24     	; 0x2d26 <DIO_enumGetPortValue+0x5c>
    2d0e:	27 c0       	rjmp	.+78     	; 0x2d5e <DIO_enumGetPortValue+0x94>
    2d10:	2d 81       	ldd	r18, Y+5	; 0x05
    2d12:	3e 81       	ldd	r19, Y+6	; 0x06
    2d14:	22 30       	cpi	r18, 0x02	; 2
    2d16:	31 05       	cpc	r19, r1
    2d18:	a1 f0       	breq	.+40     	; 0x2d42 <DIO_enumGetPortValue+0x78>
    2d1a:	8d 81       	ldd	r24, Y+5	; 0x05
    2d1c:	9e 81       	ldd	r25, Y+6	; 0x06
    2d1e:	83 30       	cpi	r24, 0x03	; 3
    2d20:	91 05       	cpc	r25, r1
    2d22:	b1 f0       	breq	.+44     	; 0x2d50 <DIO_enumGetPortValue+0x86>
    2d24:	1c c0       	rjmp	.+56     	; 0x2d5e <DIO_enumGetPortValue+0x94>

	case DIO_PORTA : *Copy_u8ptrData = PINA_REG ; break;
    2d26:	e9 e3       	ldi	r30, 0x39	; 57
    2d28:	f0 e0       	ldi	r31, 0x00	; 0
    2d2a:	80 81       	ld	r24, Z
    2d2c:	eb 81       	ldd	r30, Y+3	; 0x03
    2d2e:	fc 81       	ldd	r31, Y+4	; 0x04
    2d30:	80 83       	st	Z, r24
    2d32:	18 c0       	rjmp	.+48     	; 0x2d64 <DIO_enumGetPortValue+0x9a>
	case DIO_PORTB : *Copy_u8ptrData = PINB_REG ; break;
    2d34:	e6 e3       	ldi	r30, 0x36	; 54
    2d36:	f0 e0       	ldi	r31, 0x00	; 0
    2d38:	80 81       	ld	r24, Z
    2d3a:	eb 81       	ldd	r30, Y+3	; 0x03
    2d3c:	fc 81       	ldd	r31, Y+4	; 0x04
    2d3e:	80 83       	st	Z, r24
    2d40:	11 c0       	rjmp	.+34     	; 0x2d64 <DIO_enumGetPortValue+0x9a>
	case DIO_PORTC : *Copy_u8ptrData = PINC_REG ; break;
    2d42:	e3 e3       	ldi	r30, 0x33	; 51
    2d44:	f0 e0       	ldi	r31, 0x00	; 0
    2d46:	80 81       	ld	r24, Z
    2d48:	eb 81       	ldd	r30, Y+3	; 0x03
    2d4a:	fc 81       	ldd	r31, Y+4	; 0x04
    2d4c:	80 83       	st	Z, r24
    2d4e:	0a c0       	rjmp	.+20     	; 0x2d64 <DIO_enumGetPortValue+0x9a>
	case DIO_PORTD : *Copy_u8ptrData = PIND_REG ; break;
    2d50:	e0 e3       	ldi	r30, 0x30	; 48
    2d52:	f0 e0       	ldi	r31, 0x00	; 0
    2d54:	80 81       	ld	r24, Z
    2d56:	eb 81       	ldd	r30, Y+3	; 0x03
    2d58:	fc 81       	ldd	r31, Y+4	; 0x04
    2d5a:	80 83       	st	Z, r24
    2d5c:	03 c0       	rjmp	.+6      	; 0x2d64 <DIO_enumGetPortValue+0x9a>
	default        : LOC_enumState = DIO_NOK    ; break;
    2d5e:	19 82       	std	Y+1, r1	; 0x01
    2d60:	01 c0       	rjmp	.+2      	; 0x2d64 <DIO_enumGetPortValue+0x9a>

	}
	 }
	 else {
	 	 	 LOC_enumState = DIO_NOK;
    2d62:	19 82       	std	Y+1, r1	; 0x01
	 	  }
	return LOC_enumState ;
    2d64:	89 81       	ldd	r24, Y+1	; 0x01

}
    2d66:	26 96       	adiw	r28, 0x06	; 6
    2d68:	0f b6       	in	r0, 0x3f	; 63
    2d6a:	f8 94       	cli
    2d6c:	de bf       	out	0x3e, r29	; 62
    2d6e:	0f be       	out	0x3f, r0	; 63
    2d70:	cd bf       	out	0x3d, r28	; 61
    2d72:	cf 91       	pop	r28
    2d74:	df 91       	pop	r29
    2d76:	08 95       	ret

00002d78 <DIO_enumSetPinDirection>:


DIO_ErrorStatus DIO_enumSetPinDirection  ( u8 Copy_u8Port , u8 Copy_u8PinNumber , u8 Copy_u8Direction ){
    2d78:	df 93       	push	r29
    2d7a:	cf 93       	push	r28
    2d7c:	00 d0       	rcall	.+0      	; 0x2d7e <DIO_enumSetPinDirection+0x6>
    2d7e:	00 d0       	rcall	.+0      	; 0x2d80 <DIO_enumSetPinDirection+0x8>
    2d80:	00 d0       	rcall	.+0      	; 0x2d82 <DIO_enumSetPinDirection+0xa>
    2d82:	cd b7       	in	r28, 0x3d	; 61
    2d84:	de b7       	in	r29, 0x3e	; 62
    2d86:	8a 83       	std	Y+2, r24	; 0x02
    2d88:	6b 83       	std	Y+3, r22	; 0x03
    2d8a:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    2d8c:	81 e0       	ldi	r24, 0x01	; 1
    2d8e:	89 83       	std	Y+1, r24	; 0x01

	if((Copy_u8Port<=DIO_PORTD) && ( Copy_u8PinNumber >= DIO_PIN0 ) && ( Copy_u8PinNumber <= DIO_PIN7 ) ){
    2d90:	8a 81       	ldd	r24, Y+2	; 0x02
    2d92:	84 30       	cpi	r24, 0x04	; 4
    2d94:	08 f0       	brcs	.+2      	; 0x2d98 <DIO_enumSetPinDirection+0x20>
    2d96:	ec c0       	rjmp	.+472    	; 0x2f70 <DIO_enumSetPinDirection+0x1f8>
    2d98:	8b 81       	ldd	r24, Y+3	; 0x03
    2d9a:	88 30       	cpi	r24, 0x08	; 8
    2d9c:	08 f0       	brcs	.+2      	; 0x2da0 <DIO_enumSetPinDirection+0x28>
    2d9e:	e8 c0       	rjmp	.+464    	; 0x2f70 <DIO_enumSetPinDirection+0x1f8>

		switch( Copy_u8Port ){
    2da0:	8a 81       	ldd	r24, Y+2	; 0x02
    2da2:	28 2f       	mov	r18, r24
    2da4:	30 e0       	ldi	r19, 0x00	; 0
    2da6:	3e 83       	std	Y+6, r19	; 0x06
    2da8:	2d 83       	std	Y+5, r18	; 0x05
    2daa:	8d 81       	ldd	r24, Y+5	; 0x05
    2dac:	9e 81       	ldd	r25, Y+6	; 0x06
    2dae:	81 30       	cpi	r24, 0x01	; 1
    2db0:	91 05       	cpc	r25, r1
    2db2:	09 f4       	brne	.+2      	; 0x2db6 <DIO_enumSetPinDirection+0x3e>
    2db4:	48 c0       	rjmp	.+144    	; 0x2e46 <DIO_enumSetPinDirection+0xce>
    2db6:	2d 81       	ldd	r18, Y+5	; 0x05
    2db8:	3e 81       	ldd	r19, Y+6	; 0x06
    2dba:	22 30       	cpi	r18, 0x02	; 2
    2dbc:	31 05       	cpc	r19, r1
    2dbe:	2c f4       	brge	.+10     	; 0x2dca <DIO_enumSetPinDirection+0x52>
    2dc0:	8d 81       	ldd	r24, Y+5	; 0x05
    2dc2:	9e 81       	ldd	r25, Y+6	; 0x06
    2dc4:	00 97       	sbiw	r24, 0x00	; 0
    2dc6:	71 f0       	breq	.+28     	; 0x2de4 <DIO_enumSetPinDirection+0x6c>
    2dc8:	d1 c0       	rjmp	.+418    	; 0x2f6c <DIO_enumSetPinDirection+0x1f4>
    2dca:	2d 81       	ldd	r18, Y+5	; 0x05
    2dcc:	3e 81       	ldd	r19, Y+6	; 0x06
    2dce:	22 30       	cpi	r18, 0x02	; 2
    2dd0:	31 05       	cpc	r19, r1
    2dd2:	09 f4       	brne	.+2      	; 0x2dd6 <DIO_enumSetPinDirection+0x5e>
    2dd4:	69 c0       	rjmp	.+210    	; 0x2ea8 <DIO_enumSetPinDirection+0x130>
    2dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    2dd8:	9e 81       	ldd	r25, Y+6	; 0x06
    2dda:	83 30       	cpi	r24, 0x03	; 3
    2ddc:	91 05       	cpc	r25, r1
    2dde:	09 f4       	brne	.+2      	; 0x2de2 <DIO_enumSetPinDirection+0x6a>
    2de0:	94 c0       	rjmp	.+296    	; 0x2f0a <DIO_enumSetPinDirection+0x192>
    2de2:	c4 c0       	rjmp	.+392    	; 0x2f6c <DIO_enumSetPinDirection+0x1f4>

		case DIO_PORTA:

			if      ( Copy_u8Direction == DIO_OUTPUT ){ (DDRA_REG |=  (1<<Copy_u8PinNumber)); }
    2de4:	8c 81       	ldd	r24, Y+4	; 0x04
    2de6:	81 30       	cpi	r24, 0x01	; 1
    2de8:	a1 f4       	brne	.+40     	; 0x2e12 <DIO_enumSetPinDirection+0x9a>
    2dea:	aa e3       	ldi	r26, 0x3A	; 58
    2dec:	b0 e0       	ldi	r27, 0x00	; 0
    2dee:	ea e3       	ldi	r30, 0x3A	; 58
    2df0:	f0 e0       	ldi	r31, 0x00	; 0
    2df2:	80 81       	ld	r24, Z
    2df4:	48 2f       	mov	r20, r24
    2df6:	8b 81       	ldd	r24, Y+3	; 0x03
    2df8:	28 2f       	mov	r18, r24
    2dfa:	30 e0       	ldi	r19, 0x00	; 0
    2dfc:	81 e0       	ldi	r24, 0x01	; 1
    2dfe:	90 e0       	ldi	r25, 0x00	; 0
    2e00:	02 2e       	mov	r0, r18
    2e02:	02 c0       	rjmp	.+4      	; 0x2e08 <DIO_enumSetPinDirection+0x90>
    2e04:	88 0f       	add	r24, r24
    2e06:	99 1f       	adc	r25, r25
    2e08:	0a 94       	dec	r0
    2e0a:	e2 f7       	brpl	.-8      	; 0x2e04 <DIO_enumSetPinDirection+0x8c>
    2e0c:	84 2b       	or	r24, r20
    2e0e:	8c 93       	st	X, r24
    2e10:	b0 c0       	rjmp	.+352    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else if ( Copy_u8Direction == DIO_INPUT  ){(DDRA_REG &= ~ (1<<Copy_u8PinNumber)); }
    2e12:	8c 81       	ldd	r24, Y+4	; 0x04
    2e14:	88 23       	and	r24, r24
    2e16:	a9 f4       	brne	.+42     	; 0x2e42 <DIO_enumSetPinDirection+0xca>
    2e18:	aa e3       	ldi	r26, 0x3A	; 58
    2e1a:	b0 e0       	ldi	r27, 0x00	; 0
    2e1c:	ea e3       	ldi	r30, 0x3A	; 58
    2e1e:	f0 e0       	ldi	r31, 0x00	; 0
    2e20:	80 81       	ld	r24, Z
    2e22:	48 2f       	mov	r20, r24
    2e24:	8b 81       	ldd	r24, Y+3	; 0x03
    2e26:	28 2f       	mov	r18, r24
    2e28:	30 e0       	ldi	r19, 0x00	; 0
    2e2a:	81 e0       	ldi	r24, 0x01	; 1
    2e2c:	90 e0       	ldi	r25, 0x00	; 0
    2e2e:	02 2e       	mov	r0, r18
    2e30:	02 c0       	rjmp	.+4      	; 0x2e36 <DIO_enumSetPinDirection+0xbe>
    2e32:	88 0f       	add	r24, r24
    2e34:	99 1f       	adc	r25, r25
    2e36:	0a 94       	dec	r0
    2e38:	e2 f7       	brpl	.-8      	; 0x2e32 <DIO_enumSetPinDirection+0xba>
    2e3a:	80 95       	com	r24
    2e3c:	84 23       	and	r24, r20
    2e3e:	8c 93       	st	X, r24
    2e40:	98 c0       	rjmp	.+304    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else{ LOC_enumState = DIO_NOK ; }
    2e42:	19 82       	std	Y+1, r1	; 0x01
    2e44:	96 c0       	rjmp	.+300    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			break;

		case DIO_PORTB:

			if      ( Copy_u8Direction == DIO_OUTPUT ){ (DDRB_REG |=  (1<<Copy_u8PinNumber)); }
    2e46:	8c 81       	ldd	r24, Y+4	; 0x04
    2e48:	81 30       	cpi	r24, 0x01	; 1
    2e4a:	a1 f4       	brne	.+40     	; 0x2e74 <DIO_enumSetPinDirection+0xfc>
    2e4c:	a7 e3       	ldi	r26, 0x37	; 55
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	e7 e3       	ldi	r30, 0x37	; 55
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	80 81       	ld	r24, Z
    2e56:	48 2f       	mov	r20, r24
    2e58:	8b 81       	ldd	r24, Y+3	; 0x03
    2e5a:	28 2f       	mov	r18, r24
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	02 2e       	mov	r0, r18
    2e64:	02 c0       	rjmp	.+4      	; 0x2e6a <DIO_enumSetPinDirection+0xf2>
    2e66:	88 0f       	add	r24, r24
    2e68:	99 1f       	adc	r25, r25
    2e6a:	0a 94       	dec	r0
    2e6c:	e2 f7       	brpl	.-8      	; 0x2e66 <DIO_enumSetPinDirection+0xee>
    2e6e:	84 2b       	or	r24, r20
    2e70:	8c 93       	st	X, r24
    2e72:	7f c0       	rjmp	.+254    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else if ( Copy_u8Direction == DIO_INPUT  ){(DDRB_REG &= ~ (1<<Copy_u8PinNumber)); }
    2e74:	8c 81       	ldd	r24, Y+4	; 0x04
    2e76:	88 23       	and	r24, r24
    2e78:	a9 f4       	brne	.+42     	; 0x2ea4 <DIO_enumSetPinDirection+0x12c>
    2e7a:	a7 e3       	ldi	r26, 0x37	; 55
    2e7c:	b0 e0       	ldi	r27, 0x00	; 0
    2e7e:	e7 e3       	ldi	r30, 0x37	; 55
    2e80:	f0 e0       	ldi	r31, 0x00	; 0
    2e82:	80 81       	ld	r24, Z
    2e84:	48 2f       	mov	r20, r24
    2e86:	8b 81       	ldd	r24, Y+3	; 0x03
    2e88:	28 2f       	mov	r18, r24
    2e8a:	30 e0       	ldi	r19, 0x00	; 0
    2e8c:	81 e0       	ldi	r24, 0x01	; 1
    2e8e:	90 e0       	ldi	r25, 0x00	; 0
    2e90:	02 2e       	mov	r0, r18
    2e92:	02 c0       	rjmp	.+4      	; 0x2e98 <DIO_enumSetPinDirection+0x120>
    2e94:	88 0f       	add	r24, r24
    2e96:	99 1f       	adc	r25, r25
    2e98:	0a 94       	dec	r0
    2e9a:	e2 f7       	brpl	.-8      	; 0x2e94 <DIO_enumSetPinDirection+0x11c>
    2e9c:	80 95       	com	r24
    2e9e:	84 23       	and	r24, r20
    2ea0:	8c 93       	st	X, r24
    2ea2:	67 c0       	rjmp	.+206    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else{ LOC_enumState = DIO_NOK ; }
    2ea4:	19 82       	std	Y+1, r1	; 0x01
    2ea6:	65 c0       	rjmp	.+202    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			break;
		case DIO_PORTC:

			if      ( Copy_u8Direction == DIO_OUTPUT ){ (DDRC_REG |=  (1<<Copy_u8PinNumber)); }
    2ea8:	8c 81       	ldd	r24, Y+4	; 0x04
    2eaa:	81 30       	cpi	r24, 0x01	; 1
    2eac:	a1 f4       	brne	.+40     	; 0x2ed6 <DIO_enumSetPinDirection+0x15e>
    2eae:	a4 e3       	ldi	r26, 0x34	; 52
    2eb0:	b0 e0       	ldi	r27, 0x00	; 0
    2eb2:	e4 e3       	ldi	r30, 0x34	; 52
    2eb4:	f0 e0       	ldi	r31, 0x00	; 0
    2eb6:	80 81       	ld	r24, Z
    2eb8:	48 2f       	mov	r20, r24
    2eba:	8b 81       	ldd	r24, Y+3	; 0x03
    2ebc:	28 2f       	mov	r18, r24
    2ebe:	30 e0       	ldi	r19, 0x00	; 0
    2ec0:	81 e0       	ldi	r24, 0x01	; 1
    2ec2:	90 e0       	ldi	r25, 0x00	; 0
    2ec4:	02 2e       	mov	r0, r18
    2ec6:	02 c0       	rjmp	.+4      	; 0x2ecc <DIO_enumSetPinDirection+0x154>
    2ec8:	88 0f       	add	r24, r24
    2eca:	99 1f       	adc	r25, r25
    2ecc:	0a 94       	dec	r0
    2ece:	e2 f7       	brpl	.-8      	; 0x2ec8 <DIO_enumSetPinDirection+0x150>
    2ed0:	84 2b       	or	r24, r20
    2ed2:	8c 93       	st	X, r24
    2ed4:	4e c0       	rjmp	.+156    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else if ( Copy_u8Direction == DIO_INPUT  ){ (DDRC_REG &= ~ (1<<Copy_u8PinNumber)); }
    2ed6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ed8:	88 23       	and	r24, r24
    2eda:	a9 f4       	brne	.+42     	; 0x2f06 <DIO_enumSetPinDirection+0x18e>
    2edc:	a4 e3       	ldi	r26, 0x34	; 52
    2ede:	b0 e0       	ldi	r27, 0x00	; 0
    2ee0:	e4 e3       	ldi	r30, 0x34	; 52
    2ee2:	f0 e0       	ldi	r31, 0x00	; 0
    2ee4:	80 81       	ld	r24, Z
    2ee6:	48 2f       	mov	r20, r24
    2ee8:	8b 81       	ldd	r24, Y+3	; 0x03
    2eea:	28 2f       	mov	r18, r24
    2eec:	30 e0       	ldi	r19, 0x00	; 0
    2eee:	81 e0       	ldi	r24, 0x01	; 1
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	02 2e       	mov	r0, r18
    2ef4:	02 c0       	rjmp	.+4      	; 0x2efa <DIO_enumSetPinDirection+0x182>
    2ef6:	88 0f       	add	r24, r24
    2ef8:	99 1f       	adc	r25, r25
    2efa:	0a 94       	dec	r0
    2efc:	e2 f7       	brpl	.-8      	; 0x2ef6 <DIO_enumSetPinDirection+0x17e>
    2efe:	80 95       	com	r24
    2f00:	84 23       	and	r24, r20
    2f02:	8c 93       	st	X, r24
    2f04:	36 c0       	rjmp	.+108    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else{ LOC_enumState = DIO_NOK ; }
    2f06:	19 82       	std	Y+1, r1	; 0x01
    2f08:	34 c0       	rjmp	.+104    	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			break;
		case DIO_PORTD:

			if      ( Copy_u8Direction == DIO_OUTPUT ){ (DDRD_REG |=  (1<<Copy_u8PinNumber)); }
    2f0a:	8c 81       	ldd	r24, Y+4	; 0x04
    2f0c:	81 30       	cpi	r24, 0x01	; 1
    2f0e:	a1 f4       	brne	.+40     	; 0x2f38 <DIO_enumSetPinDirection+0x1c0>
    2f10:	a1 e3       	ldi	r26, 0x31	; 49
    2f12:	b0 e0       	ldi	r27, 0x00	; 0
    2f14:	e1 e3       	ldi	r30, 0x31	; 49
    2f16:	f0 e0       	ldi	r31, 0x00	; 0
    2f18:	80 81       	ld	r24, Z
    2f1a:	48 2f       	mov	r20, r24
    2f1c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f1e:	28 2f       	mov	r18, r24
    2f20:	30 e0       	ldi	r19, 0x00	; 0
    2f22:	81 e0       	ldi	r24, 0x01	; 1
    2f24:	90 e0       	ldi	r25, 0x00	; 0
    2f26:	02 2e       	mov	r0, r18
    2f28:	02 c0       	rjmp	.+4      	; 0x2f2e <DIO_enumSetPinDirection+0x1b6>
    2f2a:	88 0f       	add	r24, r24
    2f2c:	99 1f       	adc	r25, r25
    2f2e:	0a 94       	dec	r0
    2f30:	e2 f7       	brpl	.-8      	; 0x2f2a <DIO_enumSetPinDirection+0x1b2>
    2f32:	84 2b       	or	r24, r20
    2f34:	8c 93       	st	X, r24
    2f36:	1d c0       	rjmp	.+58     	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else if ( Copy_u8Direction == DIO_INPUT  ){ (DDRD_REG &= ~ (1<<Copy_u8PinNumber)); }
    2f38:	8c 81       	ldd	r24, Y+4	; 0x04
    2f3a:	88 23       	and	r24, r24
    2f3c:	a9 f4       	brne	.+42     	; 0x2f68 <DIO_enumSetPinDirection+0x1f0>
    2f3e:	a1 e3       	ldi	r26, 0x31	; 49
    2f40:	b0 e0       	ldi	r27, 0x00	; 0
    2f42:	e1 e3       	ldi	r30, 0x31	; 49
    2f44:	f0 e0       	ldi	r31, 0x00	; 0
    2f46:	80 81       	ld	r24, Z
    2f48:	48 2f       	mov	r20, r24
    2f4a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f4c:	28 2f       	mov	r18, r24
    2f4e:	30 e0       	ldi	r19, 0x00	; 0
    2f50:	81 e0       	ldi	r24, 0x01	; 1
    2f52:	90 e0       	ldi	r25, 0x00	; 0
    2f54:	02 2e       	mov	r0, r18
    2f56:	02 c0       	rjmp	.+4      	; 0x2f5c <DIO_enumSetPinDirection+0x1e4>
    2f58:	88 0f       	add	r24, r24
    2f5a:	99 1f       	adc	r25, r25
    2f5c:	0a 94       	dec	r0
    2f5e:	e2 f7       	brpl	.-8      	; 0x2f58 <DIO_enumSetPinDirection+0x1e0>
    2f60:	80 95       	com	r24
    2f62:	84 23       	and	r24, r20
    2f64:	8c 93       	st	X, r24
    2f66:	05 c0       	rjmp	.+10     	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			else{ LOC_enumState = DIO_NOK ; }
    2f68:	19 82       	std	Y+1, r1	; 0x01
    2f6a:	03 c0       	rjmp	.+6      	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

			break;

		default      : LOC_enumState = DIO_NOK ; break;
    2f6c:	19 82       	std	Y+1, r1	; 0x01
    2f6e:	01 c0       	rjmp	.+2      	; 0x2f72 <DIO_enumSetPinDirection+0x1fa>

		}

	}else{ LOC_enumState = DIO_NOK ; }
    2f70:	19 82       	std	Y+1, r1	; 0x01

	return LOC_enumState ;
    2f72:	89 81       	ldd	r24, Y+1	; 0x01
}
    2f74:	26 96       	adiw	r28, 0x06	; 6
    2f76:	0f b6       	in	r0, 0x3f	; 63
    2f78:	f8 94       	cli
    2f7a:	de bf       	out	0x3e, r29	; 62
    2f7c:	0f be       	out	0x3f, r0	; 63
    2f7e:	cd bf       	out	0x3d, r28	; 61
    2f80:	cf 91       	pop	r28
    2f82:	df 91       	pop	r29
    2f84:	08 95       	ret

00002f86 <DIO_enumSetPinValue>:
DIO_ErrorStatus DIO_enumSetPinValue      ( u8 Copy_u8Port , u8 Copy_u8PinNumber , u8 Copy_u8Value     ){
    2f86:	df 93       	push	r29
    2f88:	cf 93       	push	r28
    2f8a:	00 d0       	rcall	.+0      	; 0x2f8c <DIO_enumSetPinValue+0x6>
    2f8c:	00 d0       	rcall	.+0      	; 0x2f8e <DIO_enumSetPinValue+0x8>
    2f8e:	00 d0       	rcall	.+0      	; 0x2f90 <DIO_enumSetPinValue+0xa>
    2f90:	cd b7       	in	r28, 0x3d	; 61
    2f92:	de b7       	in	r29, 0x3e	; 62
    2f94:	8a 83       	std	Y+2, r24	; 0x02
    2f96:	6b 83       	std	Y+3, r22	; 0x03
    2f98:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    2f9a:	81 e0       	ldi	r24, 0x01	; 1
    2f9c:	89 83       	std	Y+1, r24	; 0x01

	if((Copy_u8Port<=DIO_PORTD) && ( Copy_u8PinNumber >= DIO_PIN0 ) && ( Copy_u8PinNumber <= DIO_PIN7 ) ){
    2f9e:	8a 81       	ldd	r24, Y+2	; 0x02
    2fa0:	84 30       	cpi	r24, 0x04	; 4
    2fa2:	08 f0       	brcs	.+2      	; 0x2fa6 <DIO_enumSetPinValue+0x20>
    2fa4:	ea c0       	rjmp	.+468    	; 0x317a <DIO_enumSetPinValue+0x1f4>
    2fa6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fa8:	88 30       	cpi	r24, 0x08	; 8
    2faa:	08 f0       	brcs	.+2      	; 0x2fae <DIO_enumSetPinValue+0x28>
    2fac:	e6 c0       	rjmp	.+460    	; 0x317a <DIO_enumSetPinValue+0x1f4>

		switch( Copy_u8Port ){
    2fae:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb0:	28 2f       	mov	r18, r24
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	3e 83       	std	Y+6, r19	; 0x06
    2fb6:	2d 83       	std	Y+5, r18	; 0x05
    2fb8:	8d 81       	ldd	r24, Y+5	; 0x05
    2fba:	9e 81       	ldd	r25, Y+6	; 0x06
    2fbc:	81 30       	cpi	r24, 0x01	; 1
    2fbe:	91 05       	cpc	r25, r1
    2fc0:	09 f4       	brne	.+2      	; 0x2fc4 <DIO_enumSetPinValue+0x3e>
    2fc2:	48 c0       	rjmp	.+144    	; 0x3054 <DIO_enumSetPinValue+0xce>
    2fc4:	2d 81       	ldd	r18, Y+5	; 0x05
    2fc6:	3e 81       	ldd	r19, Y+6	; 0x06
    2fc8:	22 30       	cpi	r18, 0x02	; 2
    2fca:	31 05       	cpc	r19, r1
    2fcc:	2c f4       	brge	.+10     	; 0x2fd8 <DIO_enumSetPinValue+0x52>
    2fce:	8d 81       	ldd	r24, Y+5	; 0x05
    2fd0:	9e 81       	ldd	r25, Y+6	; 0x06
    2fd2:	00 97       	sbiw	r24, 0x00	; 0
    2fd4:	71 f0       	breq	.+28     	; 0x2ff2 <DIO_enumSetPinValue+0x6c>
    2fd6:	d2 c0       	rjmp	.+420    	; 0x317c <DIO_enumSetPinValue+0x1f6>
    2fd8:	2d 81       	ldd	r18, Y+5	; 0x05
    2fda:	3e 81       	ldd	r19, Y+6	; 0x06
    2fdc:	22 30       	cpi	r18, 0x02	; 2
    2fde:	31 05       	cpc	r19, r1
    2fe0:	09 f4       	brne	.+2      	; 0x2fe4 <DIO_enumSetPinValue+0x5e>
    2fe2:	69 c0       	rjmp	.+210    	; 0x30b6 <DIO_enumSetPinValue+0x130>
    2fe4:	8d 81       	ldd	r24, Y+5	; 0x05
    2fe6:	9e 81       	ldd	r25, Y+6	; 0x06
    2fe8:	83 30       	cpi	r24, 0x03	; 3
    2fea:	91 05       	cpc	r25, r1
    2fec:	09 f4       	brne	.+2      	; 0x2ff0 <DIO_enumSetPinValue+0x6a>
    2fee:	94 c0       	rjmp	.+296    	; 0x3118 <DIO_enumSetPinValue+0x192>
    2ff0:	c5 c0       	rjmp	.+394    	; 0x317c <DIO_enumSetPinValue+0x1f6>

		case DIO_PORTA:

			if      ( Copy_u8Value == DIO_HIGH ){ (PORTA_REG  |=  (1<<Copy_u8PinNumber)); }
    2ff2:	8c 81       	ldd	r24, Y+4	; 0x04
    2ff4:	81 30       	cpi	r24, 0x01	; 1
    2ff6:	a1 f4       	brne	.+40     	; 0x3020 <DIO_enumSetPinValue+0x9a>
    2ff8:	ab e3       	ldi	r26, 0x3B	; 59
    2ffa:	b0 e0       	ldi	r27, 0x00	; 0
    2ffc:	eb e3       	ldi	r30, 0x3B	; 59
    2ffe:	f0 e0       	ldi	r31, 0x00	; 0
    3000:	80 81       	ld	r24, Z
    3002:	48 2f       	mov	r20, r24
    3004:	8b 81       	ldd	r24, Y+3	; 0x03
    3006:	28 2f       	mov	r18, r24
    3008:	30 e0       	ldi	r19, 0x00	; 0
    300a:	81 e0       	ldi	r24, 0x01	; 1
    300c:	90 e0       	ldi	r25, 0x00	; 0
    300e:	02 2e       	mov	r0, r18
    3010:	02 c0       	rjmp	.+4      	; 0x3016 <DIO_enumSetPinValue+0x90>
    3012:	88 0f       	add	r24, r24
    3014:	99 1f       	adc	r25, r25
    3016:	0a 94       	dec	r0
    3018:	e2 f7       	brpl	.-8      	; 0x3012 <DIO_enumSetPinValue+0x8c>
    301a:	84 2b       	or	r24, r20
    301c:	8c 93       	st	X, r24
    301e:	ae c0       	rjmp	.+348    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else if ( Copy_u8Value == DIO_LOW   ){ (PORTA_REG &= ~ (1<<Copy_u8PinNumber));}
    3020:	8c 81       	ldd	r24, Y+4	; 0x04
    3022:	88 23       	and	r24, r24
    3024:	a9 f4       	brne	.+42     	; 0x3050 <DIO_enumSetPinValue+0xca>
    3026:	ab e3       	ldi	r26, 0x3B	; 59
    3028:	b0 e0       	ldi	r27, 0x00	; 0
    302a:	eb e3       	ldi	r30, 0x3B	; 59
    302c:	f0 e0       	ldi	r31, 0x00	; 0
    302e:	80 81       	ld	r24, Z
    3030:	48 2f       	mov	r20, r24
    3032:	8b 81       	ldd	r24, Y+3	; 0x03
    3034:	28 2f       	mov	r18, r24
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	81 e0       	ldi	r24, 0x01	; 1
    303a:	90 e0       	ldi	r25, 0x00	; 0
    303c:	02 2e       	mov	r0, r18
    303e:	02 c0       	rjmp	.+4      	; 0x3044 <DIO_enumSetPinValue+0xbe>
    3040:	88 0f       	add	r24, r24
    3042:	99 1f       	adc	r25, r25
    3044:	0a 94       	dec	r0
    3046:	e2 f7       	brpl	.-8      	; 0x3040 <DIO_enumSetPinValue+0xba>
    3048:	80 95       	com	r24
    304a:	84 23       	and	r24, r20
    304c:	8c 93       	st	X, r24
    304e:	96 c0       	rjmp	.+300    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else{ LOC_enumState = DIO_NOK ; }
    3050:	19 82       	std	Y+1, r1	; 0x01
    3052:	94 c0       	rjmp	.+296    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			break;

		case DIO_PORTB:

			if      ( Copy_u8Value == DIO_HIGH ){ (PORTB_REG  |=  (1<<Copy_u8PinNumber)); }
    3054:	8c 81       	ldd	r24, Y+4	; 0x04
    3056:	81 30       	cpi	r24, 0x01	; 1
    3058:	a1 f4       	brne	.+40     	; 0x3082 <DIO_enumSetPinValue+0xfc>
    305a:	a8 e3       	ldi	r26, 0x38	; 56
    305c:	b0 e0       	ldi	r27, 0x00	; 0
    305e:	e8 e3       	ldi	r30, 0x38	; 56
    3060:	f0 e0       	ldi	r31, 0x00	; 0
    3062:	80 81       	ld	r24, Z
    3064:	48 2f       	mov	r20, r24
    3066:	8b 81       	ldd	r24, Y+3	; 0x03
    3068:	28 2f       	mov	r18, r24
    306a:	30 e0       	ldi	r19, 0x00	; 0
    306c:	81 e0       	ldi	r24, 0x01	; 1
    306e:	90 e0       	ldi	r25, 0x00	; 0
    3070:	02 2e       	mov	r0, r18
    3072:	02 c0       	rjmp	.+4      	; 0x3078 <DIO_enumSetPinValue+0xf2>
    3074:	88 0f       	add	r24, r24
    3076:	99 1f       	adc	r25, r25
    3078:	0a 94       	dec	r0
    307a:	e2 f7       	brpl	.-8      	; 0x3074 <DIO_enumSetPinValue+0xee>
    307c:	84 2b       	or	r24, r20
    307e:	8c 93       	st	X, r24
    3080:	7d c0       	rjmp	.+250    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else if ( Copy_u8Value == DIO_LOW  ){(PORTB_REG &= ~ (1<<Copy_u8PinNumber)); }
    3082:	8c 81       	ldd	r24, Y+4	; 0x04
    3084:	88 23       	and	r24, r24
    3086:	a9 f4       	brne	.+42     	; 0x30b2 <DIO_enumSetPinValue+0x12c>
    3088:	a8 e3       	ldi	r26, 0x38	; 56
    308a:	b0 e0       	ldi	r27, 0x00	; 0
    308c:	e8 e3       	ldi	r30, 0x38	; 56
    308e:	f0 e0       	ldi	r31, 0x00	; 0
    3090:	80 81       	ld	r24, Z
    3092:	48 2f       	mov	r20, r24
    3094:	8b 81       	ldd	r24, Y+3	; 0x03
    3096:	28 2f       	mov	r18, r24
    3098:	30 e0       	ldi	r19, 0x00	; 0
    309a:	81 e0       	ldi	r24, 0x01	; 1
    309c:	90 e0       	ldi	r25, 0x00	; 0
    309e:	02 2e       	mov	r0, r18
    30a0:	02 c0       	rjmp	.+4      	; 0x30a6 <DIO_enumSetPinValue+0x120>
    30a2:	88 0f       	add	r24, r24
    30a4:	99 1f       	adc	r25, r25
    30a6:	0a 94       	dec	r0
    30a8:	e2 f7       	brpl	.-8      	; 0x30a2 <DIO_enumSetPinValue+0x11c>
    30aa:	80 95       	com	r24
    30ac:	84 23       	and	r24, r20
    30ae:	8c 93       	st	X, r24
    30b0:	65 c0       	rjmp	.+202    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else{ LOC_enumState = DIO_NOK ; }
    30b2:	19 82       	std	Y+1, r1	; 0x01
    30b4:	63 c0       	rjmp	.+198    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			break;
		case DIO_PORTC:

			if      ( Copy_u8Value == DIO_HIGH ){ (PORTC_REG  |=  (1<<Copy_u8PinNumber)); }
    30b6:	8c 81       	ldd	r24, Y+4	; 0x04
    30b8:	81 30       	cpi	r24, 0x01	; 1
    30ba:	a1 f4       	brne	.+40     	; 0x30e4 <DIO_enumSetPinValue+0x15e>
    30bc:	a5 e3       	ldi	r26, 0x35	; 53
    30be:	b0 e0       	ldi	r27, 0x00	; 0
    30c0:	e5 e3       	ldi	r30, 0x35	; 53
    30c2:	f0 e0       	ldi	r31, 0x00	; 0
    30c4:	80 81       	ld	r24, Z
    30c6:	48 2f       	mov	r20, r24
    30c8:	8b 81       	ldd	r24, Y+3	; 0x03
    30ca:	28 2f       	mov	r18, r24
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	02 2e       	mov	r0, r18
    30d4:	02 c0       	rjmp	.+4      	; 0x30da <DIO_enumSetPinValue+0x154>
    30d6:	88 0f       	add	r24, r24
    30d8:	99 1f       	adc	r25, r25
    30da:	0a 94       	dec	r0
    30dc:	e2 f7       	brpl	.-8      	; 0x30d6 <DIO_enumSetPinValue+0x150>
    30de:	84 2b       	or	r24, r20
    30e0:	8c 93       	st	X, r24
    30e2:	4c c0       	rjmp	.+152    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else if ( Copy_u8Value == DIO_LOW  ){ (PORTC_REG &= ~ (1<<Copy_u8PinNumber)); }
    30e4:	8c 81       	ldd	r24, Y+4	; 0x04
    30e6:	88 23       	and	r24, r24
    30e8:	a9 f4       	brne	.+42     	; 0x3114 <DIO_enumSetPinValue+0x18e>
    30ea:	a5 e3       	ldi	r26, 0x35	; 53
    30ec:	b0 e0       	ldi	r27, 0x00	; 0
    30ee:	e5 e3       	ldi	r30, 0x35	; 53
    30f0:	f0 e0       	ldi	r31, 0x00	; 0
    30f2:	80 81       	ld	r24, Z
    30f4:	48 2f       	mov	r20, r24
    30f6:	8b 81       	ldd	r24, Y+3	; 0x03
    30f8:	28 2f       	mov	r18, r24
    30fa:	30 e0       	ldi	r19, 0x00	; 0
    30fc:	81 e0       	ldi	r24, 0x01	; 1
    30fe:	90 e0       	ldi	r25, 0x00	; 0
    3100:	02 2e       	mov	r0, r18
    3102:	02 c0       	rjmp	.+4      	; 0x3108 <DIO_enumSetPinValue+0x182>
    3104:	88 0f       	add	r24, r24
    3106:	99 1f       	adc	r25, r25
    3108:	0a 94       	dec	r0
    310a:	e2 f7       	brpl	.-8      	; 0x3104 <DIO_enumSetPinValue+0x17e>
    310c:	80 95       	com	r24
    310e:	84 23       	and	r24, r20
    3110:	8c 93       	st	X, r24
    3112:	34 c0       	rjmp	.+104    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else{ LOC_enumState = DIO_NOK ; }
    3114:	19 82       	std	Y+1, r1	; 0x01
    3116:	32 c0       	rjmp	.+100    	; 0x317c <DIO_enumSetPinValue+0x1f6>

			break;
		case DIO_PORTD:

			if      ( Copy_u8Value == DIO_HIGH ){ (PORTD_REG  |=  (1<<Copy_u8PinNumber)); }
    3118:	8c 81       	ldd	r24, Y+4	; 0x04
    311a:	81 30       	cpi	r24, 0x01	; 1
    311c:	a1 f4       	brne	.+40     	; 0x3146 <DIO_enumSetPinValue+0x1c0>
    311e:	a2 e3       	ldi	r26, 0x32	; 50
    3120:	b0 e0       	ldi	r27, 0x00	; 0
    3122:	e2 e3       	ldi	r30, 0x32	; 50
    3124:	f0 e0       	ldi	r31, 0x00	; 0
    3126:	80 81       	ld	r24, Z
    3128:	48 2f       	mov	r20, r24
    312a:	8b 81       	ldd	r24, Y+3	; 0x03
    312c:	28 2f       	mov	r18, r24
    312e:	30 e0       	ldi	r19, 0x00	; 0
    3130:	81 e0       	ldi	r24, 0x01	; 1
    3132:	90 e0       	ldi	r25, 0x00	; 0
    3134:	02 2e       	mov	r0, r18
    3136:	02 c0       	rjmp	.+4      	; 0x313c <DIO_enumSetPinValue+0x1b6>
    3138:	88 0f       	add	r24, r24
    313a:	99 1f       	adc	r25, r25
    313c:	0a 94       	dec	r0
    313e:	e2 f7       	brpl	.-8      	; 0x3138 <DIO_enumSetPinValue+0x1b2>
    3140:	84 2b       	or	r24, r20
    3142:	8c 93       	st	X, r24
    3144:	1b c0       	rjmp	.+54     	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else if ( Copy_u8Value == DIO_LOW  ){ (PORTD_REG &= ~ (1<<Copy_u8PinNumber)); }
    3146:	8c 81       	ldd	r24, Y+4	; 0x04
    3148:	88 23       	and	r24, r24
    314a:	a9 f4       	brne	.+42     	; 0x3176 <DIO_enumSetPinValue+0x1f0>
    314c:	a2 e3       	ldi	r26, 0x32	; 50
    314e:	b0 e0       	ldi	r27, 0x00	; 0
    3150:	e2 e3       	ldi	r30, 0x32	; 50
    3152:	f0 e0       	ldi	r31, 0x00	; 0
    3154:	80 81       	ld	r24, Z
    3156:	48 2f       	mov	r20, r24
    3158:	8b 81       	ldd	r24, Y+3	; 0x03
    315a:	28 2f       	mov	r18, r24
    315c:	30 e0       	ldi	r19, 0x00	; 0
    315e:	81 e0       	ldi	r24, 0x01	; 1
    3160:	90 e0       	ldi	r25, 0x00	; 0
    3162:	02 2e       	mov	r0, r18
    3164:	02 c0       	rjmp	.+4      	; 0x316a <DIO_enumSetPinValue+0x1e4>
    3166:	88 0f       	add	r24, r24
    3168:	99 1f       	adc	r25, r25
    316a:	0a 94       	dec	r0
    316c:	e2 f7       	brpl	.-8      	; 0x3166 <DIO_enumSetPinValue+0x1e0>
    316e:	80 95       	com	r24
    3170:	84 23       	and	r24, r20
    3172:	8c 93       	st	X, r24
    3174:	03 c0       	rjmp	.+6      	; 0x317c <DIO_enumSetPinValue+0x1f6>

			else{ LOC_enumState = DIO_NOK ; }
    3176:	19 82       	std	Y+1, r1	; 0x01
    3178:	01 c0       	rjmp	.+2      	; 0x317c <DIO_enumSetPinValue+0x1f6>

			break;

		}

	}else{ LOC_enumState = DIO_NOK ; }
    317a:	19 82       	std	Y+1, r1	; 0x01

	return LOC_enumState ;
    317c:	89 81       	ldd	r24, Y+1	; 0x01

}
    317e:	26 96       	adiw	r28, 0x06	; 6
    3180:	0f b6       	in	r0, 0x3f	; 63
    3182:	f8 94       	cli
    3184:	de bf       	out	0x3e, r29	; 62
    3186:	0f be       	out	0x3f, r0	; 63
    3188:	cd bf       	out	0x3d, r28	; 61
    318a:	cf 91       	pop	r28
    318c:	df 91       	pop	r29
    318e:	08 95       	ret

00003190 <DIO_enumTogPinValue>:

DIO_ErrorStatus DIO_enumTogPinValue      ( u8 Copy_u8Port , u8 Copy_u8PinNumber  ){
    3190:	df 93       	push	r29
    3192:	cf 93       	push	r28
    3194:	00 d0       	rcall	.+0      	; 0x3196 <DIO_enumTogPinValue+0x6>
    3196:	0f 92       	push	r0
    3198:	cd b7       	in	r28, 0x3d	; 61
    319a:	de b7       	in	r29, 0x3e	; 62
    319c:	8a 83       	std	Y+2, r24	; 0x02
    319e:	6b 83       	std	Y+3, r22	; 0x03

	DIO_ErrorStatus LOC_enumState = DIO_OK ;
    31a0:	81 e0       	ldi	r24, 0x01	; 1
    31a2:	89 83       	std	Y+1, r24	; 0x01

	if((Copy_u8Port<=DIO_PORTD) && ( Copy_u8PinNumber >= DIO_PIN0 ) && ( Copy_u8PinNumber <= DIO_PIN7 ) ){
    31a4:	8a 81       	ldd	r24, Y+2	; 0x02
    31a6:	84 30       	cpi	r24, 0x04	; 4
    31a8:	18 f4       	brcc	.+6      	; 0x31b0 <DIO_enumTogPinValue+0x20>
    31aa:	8b 81       	ldd	r24, Y+3	; 0x03
    31ac:	88 30       	cpi	r24, 0x08	; 8
    31ae:	08 f0       	brcs	.+2      	; 0x31b2 <DIO_enumTogPinValue+0x22>

			break;

		}

	}else{ LOC_enumState = DIO_NOK ; }
    31b0:	19 82       	std	Y+1, r1	; 0x01

	return LOC_enumState ;
    31b2:	89 81       	ldd	r24, Y+1	; 0x01

}
    31b4:	0f 90       	pop	r0
    31b6:	0f 90       	pop	r0
    31b8:	0f 90       	pop	r0
    31ba:	cf 91       	pop	r28
    31bc:	df 91       	pop	r29
    31be:	08 95       	ret

000031c0 <DIO_enumGetPinValue>:



DIO_ErrorStatus DIO_enumGetPinValue      ( u8 Copy_u8Port , u8 Copy_u8PinNumber , u8 * Copy_u8ptrData ){
    31c0:	df 93       	push	r29
    31c2:	cf 93       	push	r28
    31c4:	cd b7       	in	r28, 0x3d	; 61
    31c6:	de b7       	in	r29, 0x3e	; 62
    31c8:	27 97       	sbiw	r28, 0x07	; 7
    31ca:	0f b6       	in	r0, 0x3f	; 63
    31cc:	f8 94       	cli
    31ce:	de bf       	out	0x3e, r29	; 62
    31d0:	0f be       	out	0x3f, r0	; 63
    31d2:	cd bf       	out	0x3d, r28	; 61
    31d4:	8a 83       	std	Y+2, r24	; 0x02
    31d6:	6b 83       	std	Y+3, r22	; 0x03
    31d8:	5d 83       	std	Y+5, r21	; 0x05
    31da:	4c 83       	std	Y+4, r20	; 0x04

	DIO_ErrorStatus LOC_enumState = DIO_OK;
    31dc:	81 e0       	ldi	r24, 0x01	; 1
    31de:	89 83       	std	Y+1, r24	; 0x01

	if( (Copy_u8Port<=DIO_PORTD) &&( Copy_u8PinNumber >= DIO_PIN0 ) && ( Copy_u8PinNumber <= DIO_PIN7 ) ){
    31e0:	8a 81       	ldd	r24, Y+2	; 0x02
    31e2:	84 30       	cpi	r24, 0x04	; 4
    31e4:	08 f0       	brcs	.+2      	; 0x31e8 <DIO_enumGetPinValue+0x28>
    31e6:	77 c0       	rjmp	.+238    	; 0x32d6 <DIO_enumGetPinValue+0x116>
    31e8:	8b 81       	ldd	r24, Y+3	; 0x03
    31ea:	88 30       	cpi	r24, 0x08	; 8
    31ec:	08 f0       	brcs	.+2      	; 0x31f0 <DIO_enumGetPinValue+0x30>
    31ee:	73 c0       	rjmp	.+230    	; 0x32d6 <DIO_enumGetPinValue+0x116>

		switch( Copy_u8Port ){
    31f0:	8a 81       	ldd	r24, Y+2	; 0x02
    31f2:	28 2f       	mov	r18, r24
    31f4:	30 e0       	ldi	r19, 0x00	; 0
    31f6:	3f 83       	std	Y+7, r19	; 0x07
    31f8:	2e 83       	std	Y+6, r18	; 0x06
    31fa:	4e 81       	ldd	r20, Y+6	; 0x06
    31fc:	5f 81       	ldd	r21, Y+7	; 0x07
    31fe:	41 30       	cpi	r20, 0x01	; 1
    3200:	51 05       	cpc	r21, r1
    3202:	59 f1       	breq	.+86     	; 0x325a <DIO_enumGetPinValue+0x9a>
    3204:	8e 81       	ldd	r24, Y+6	; 0x06
    3206:	9f 81       	ldd	r25, Y+7	; 0x07
    3208:	82 30       	cpi	r24, 0x02	; 2
    320a:	91 05       	cpc	r25, r1
    320c:	34 f4       	brge	.+12     	; 0x321a <DIO_enumGetPinValue+0x5a>
    320e:	2e 81       	ldd	r18, Y+6	; 0x06
    3210:	3f 81       	ldd	r19, Y+7	; 0x07
    3212:	21 15       	cp	r18, r1
    3214:	31 05       	cpc	r19, r1
    3216:	69 f0       	breq	.+26     	; 0x3232 <DIO_enumGetPinValue+0x72>
    3218:	5c c0       	rjmp	.+184    	; 0x32d2 <DIO_enumGetPinValue+0x112>
    321a:	4e 81       	ldd	r20, Y+6	; 0x06
    321c:	5f 81       	ldd	r21, Y+7	; 0x07
    321e:	42 30       	cpi	r20, 0x02	; 2
    3220:	51 05       	cpc	r21, r1
    3222:	79 f1       	breq	.+94     	; 0x3282 <DIO_enumGetPinValue+0xc2>
    3224:	8e 81       	ldd	r24, Y+6	; 0x06
    3226:	9f 81       	ldd	r25, Y+7	; 0x07
    3228:	83 30       	cpi	r24, 0x03	; 3
    322a:	91 05       	cpc	r25, r1
    322c:	09 f4       	brne	.+2      	; 0x3230 <DIO_enumGetPinValue+0x70>
    322e:	3d c0       	rjmp	.+122    	; 0x32aa <DIO_enumGetPinValue+0xea>
    3230:	50 c0       	rjmp	.+160    	; 0x32d2 <DIO_enumGetPinValue+0x112>

		case DIO_PORTA : *Copy_u8ptrData = ((PINA_REG >> (Copy_u8PinNumber)) & 1) ; break;
    3232:	e9 e3       	ldi	r30, 0x39	; 57
    3234:	f0 e0       	ldi	r31, 0x00	; 0
    3236:	80 81       	ld	r24, Z
    3238:	28 2f       	mov	r18, r24
    323a:	30 e0       	ldi	r19, 0x00	; 0
    323c:	8b 81       	ldd	r24, Y+3	; 0x03
    323e:	88 2f       	mov	r24, r24
    3240:	90 e0       	ldi	r25, 0x00	; 0
    3242:	a9 01       	movw	r20, r18
    3244:	02 c0       	rjmp	.+4      	; 0x324a <DIO_enumGetPinValue+0x8a>
    3246:	55 95       	asr	r21
    3248:	47 95       	ror	r20
    324a:	8a 95       	dec	r24
    324c:	e2 f7       	brpl	.-8      	; 0x3246 <DIO_enumGetPinValue+0x86>
    324e:	ca 01       	movw	r24, r20
    3250:	81 70       	andi	r24, 0x01	; 1
    3252:	ec 81       	ldd	r30, Y+4	; 0x04
    3254:	fd 81       	ldd	r31, Y+5	; 0x05
    3256:	80 83       	st	Z, r24
    3258:	3f c0       	rjmp	.+126    	; 0x32d8 <DIO_enumGetPinValue+0x118>
		case DIO_PORTB : *Copy_u8ptrData = ((PINB_REG >> (Copy_u8PinNumber)) & 1) ; break;
    325a:	e6 e3       	ldi	r30, 0x36	; 54
    325c:	f0 e0       	ldi	r31, 0x00	; 0
    325e:	80 81       	ld	r24, Z
    3260:	28 2f       	mov	r18, r24
    3262:	30 e0       	ldi	r19, 0x00	; 0
    3264:	8b 81       	ldd	r24, Y+3	; 0x03
    3266:	88 2f       	mov	r24, r24
    3268:	90 e0       	ldi	r25, 0x00	; 0
    326a:	a9 01       	movw	r20, r18
    326c:	02 c0       	rjmp	.+4      	; 0x3272 <DIO_enumGetPinValue+0xb2>
    326e:	55 95       	asr	r21
    3270:	47 95       	ror	r20
    3272:	8a 95       	dec	r24
    3274:	e2 f7       	brpl	.-8      	; 0x326e <DIO_enumGetPinValue+0xae>
    3276:	ca 01       	movw	r24, r20
    3278:	81 70       	andi	r24, 0x01	; 1
    327a:	ec 81       	ldd	r30, Y+4	; 0x04
    327c:	fd 81       	ldd	r31, Y+5	; 0x05
    327e:	80 83       	st	Z, r24
    3280:	2b c0       	rjmp	.+86     	; 0x32d8 <DIO_enumGetPinValue+0x118>
		case DIO_PORTC : *Copy_u8ptrData = ((PINC_REG >> (Copy_u8PinNumber)) & 1) ; break;
    3282:	e3 e3       	ldi	r30, 0x33	; 51
    3284:	f0 e0       	ldi	r31, 0x00	; 0
    3286:	80 81       	ld	r24, Z
    3288:	28 2f       	mov	r18, r24
    328a:	30 e0       	ldi	r19, 0x00	; 0
    328c:	8b 81       	ldd	r24, Y+3	; 0x03
    328e:	88 2f       	mov	r24, r24
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	a9 01       	movw	r20, r18
    3294:	02 c0       	rjmp	.+4      	; 0x329a <DIO_enumGetPinValue+0xda>
    3296:	55 95       	asr	r21
    3298:	47 95       	ror	r20
    329a:	8a 95       	dec	r24
    329c:	e2 f7       	brpl	.-8      	; 0x3296 <DIO_enumGetPinValue+0xd6>
    329e:	ca 01       	movw	r24, r20
    32a0:	81 70       	andi	r24, 0x01	; 1
    32a2:	ec 81       	ldd	r30, Y+4	; 0x04
    32a4:	fd 81       	ldd	r31, Y+5	; 0x05
    32a6:	80 83       	st	Z, r24
    32a8:	17 c0       	rjmp	.+46     	; 0x32d8 <DIO_enumGetPinValue+0x118>
		case DIO_PORTD : *Copy_u8ptrData = ((PIND_REG >> (Copy_u8PinNumber)) & 1) ; break;
    32aa:	e0 e3       	ldi	r30, 0x30	; 48
    32ac:	f0 e0       	ldi	r31, 0x00	; 0
    32ae:	80 81       	ld	r24, Z
    32b0:	28 2f       	mov	r18, r24
    32b2:	30 e0       	ldi	r19, 0x00	; 0
    32b4:	8b 81       	ldd	r24, Y+3	; 0x03
    32b6:	88 2f       	mov	r24, r24
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	a9 01       	movw	r20, r18
    32bc:	02 c0       	rjmp	.+4      	; 0x32c2 <DIO_enumGetPinValue+0x102>
    32be:	55 95       	asr	r21
    32c0:	47 95       	ror	r20
    32c2:	8a 95       	dec	r24
    32c4:	e2 f7       	brpl	.-8      	; 0x32be <DIO_enumGetPinValue+0xfe>
    32c6:	ca 01       	movw	r24, r20
    32c8:	81 70       	andi	r24, 0x01	; 1
    32ca:	ec 81       	ldd	r30, Y+4	; 0x04
    32cc:	fd 81       	ldd	r31, Y+5	; 0x05
    32ce:	80 83       	st	Z, r24
    32d0:	03 c0       	rjmp	.+6      	; 0x32d8 <DIO_enumGetPinValue+0x118>
		default        : LOC_enumState = DIO_NOK    ; break;
    32d2:	19 82       	std	Y+1, r1	; 0x01
    32d4:	01 c0       	rjmp	.+2      	; 0x32d8 <DIO_enumGetPinValue+0x118>

		}

	}
	else{ LOC_enumState = DIO_NOK    ; }
    32d6:	19 82       	std	Y+1, r1	; 0x01

	return LOC_enumState ;
    32d8:	89 81       	ldd	r24, Y+1	; 0x01

}
    32da:	27 96       	adiw	r28, 0x07	; 7
    32dc:	0f b6       	in	r0, 0x3f	; 63
    32de:	f8 94       	cli
    32e0:	de bf       	out	0x3e, r29	; 62
    32e2:	0f be       	out	0x3f, r0	; 63
    32e4:	cd bf       	out	0x3d, r28	; 61
    32e6:	cf 91       	pop	r28
    32e8:	df 91       	pop	r29
    32ea:	08 95       	ret

000032ec <LCD_enuInit>:




DIO_ErrorStatus LCD_enuInit(void)
{
    32ec:	df 93       	push	r29
    32ee:	cf 93       	push	r28
    32f0:	cd b7       	in	r28, 0x3d	; 61
    32f2:	de b7       	in	r29, 0x3e	; 62
    32f4:	e9 97       	sbiw	r28, 0x39	; 57
    32f6:	0f b6       	in	r0, 0x3f	; 63
    32f8:	f8 94       	cli
    32fa:	de bf       	out	0x3e, r29	; 62
    32fc:	0f be       	out	0x3f, r0	; 63
    32fe:	cd bf       	out	0x3d, r28	; 61
	DIO_ErrorStatus LOC_enumState  = DIO_OK;
    3300:	81 e0       	ldi	r24, 0x01	; 1
    3302:	89 af       	std	Y+57, r24	; 0x39

	DIO_enumSetPinDirection(RS_PORT, RS_PIN, DIO_OUTPUT);
    3304:	83 e0       	ldi	r24, 0x03	; 3
    3306:	60 e0       	ldi	r22, 0x00	; 0
    3308:	41 e0       	ldi	r20, 0x01	; 1
    330a:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(RW_PORT, RW_PIN, DIO_OUTPUT);
    330e:	83 e0       	ldi	r24, 0x03	; 3
    3310:	61 e0       	ldi	r22, 0x01	; 1
    3312:	41 e0       	ldi	r20, 0x01	; 1
    3314:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(EN_PORT, EN_PIN, DIO_OUTPUT);
    3318:	83 e0       	ldi	r24, 0x03	; 3
    331a:	62 e0       	ldi	r22, 0x02	; 2
    331c:	41 e0       	ldi	r20, 0x01	; 1
    331e:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>

	DIO_enumSetPinDirection(D7_PORT, D7_PIN, DIO_OUTPUT);
    3322:	82 e0       	ldi	r24, 0x02	; 2
    3324:	67 e0       	ldi	r22, 0x07	; 7
    3326:	41 e0       	ldi	r20, 0x01	; 1
    3328:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D6_PORT, D6_PIN, DIO_OUTPUT);
    332c:	82 e0       	ldi	r24, 0x02	; 2
    332e:	66 e0       	ldi	r22, 0x06	; 6
    3330:	41 e0       	ldi	r20, 0x01	; 1
    3332:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D5_PORT, D5_PIN, DIO_OUTPUT);
    3336:	82 e0       	ldi	r24, 0x02	; 2
    3338:	65 e0       	ldi	r22, 0x05	; 5
    333a:	41 e0       	ldi	r20, 0x01	; 1
    333c:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D4_PORT, D4_PIN, DIO_OUTPUT);
    3340:	82 e0       	ldi	r24, 0x02	; 2
    3342:	64 e0       	ldi	r22, 0x04	; 4
    3344:	41 e0       	ldi	r20, 0x01	; 1
    3346:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
    334a:	80 e0       	ldi	r24, 0x00	; 0
    334c:	90 e0       	ldi	r25, 0x00	; 0
    334e:	a0 ef       	ldi	r26, 0xF0	; 240
    3350:	b1 e4       	ldi	r27, 0x41	; 65
    3352:	8d ab       	std	Y+53, r24	; 0x35
    3354:	9e ab       	std	Y+54, r25	; 0x36
    3356:	af ab       	std	Y+55, r26	; 0x37
    3358:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    335a:	6d a9       	ldd	r22, Y+53	; 0x35
    335c:	7e a9       	ldd	r23, Y+54	; 0x36
    335e:	8f a9       	ldd	r24, Y+55	; 0x37
    3360:	98 ad       	ldd	r25, Y+56	; 0x38
    3362:	20 e0       	ldi	r18, 0x00	; 0
    3364:	30 e0       	ldi	r19, 0x00	; 0
    3366:	4a ef       	ldi	r20, 0xFA	; 250
    3368:	54 e4       	ldi	r21, 0x44	; 68
    336a:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    336e:	dc 01       	movw	r26, r24
    3370:	cb 01       	movw	r24, r22
    3372:	89 ab       	std	Y+49, r24	; 0x31
    3374:	9a ab       	std	Y+50, r25	; 0x32
    3376:	ab ab       	std	Y+51, r26	; 0x33
    3378:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    337a:	69 a9       	ldd	r22, Y+49	; 0x31
    337c:	7a a9       	ldd	r23, Y+50	; 0x32
    337e:	8b a9       	ldd	r24, Y+51	; 0x33
    3380:	9c a9       	ldd	r25, Y+52	; 0x34
    3382:	20 e0       	ldi	r18, 0x00	; 0
    3384:	30 e0       	ldi	r19, 0x00	; 0
    3386:	40 e8       	ldi	r20, 0x80	; 128
    3388:	5f e3       	ldi	r21, 0x3F	; 63
    338a:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    338e:	88 23       	and	r24, r24
    3390:	2c f4       	brge	.+10     	; 0x339c <LCD_enuInit+0xb0>
		__ticks = 1;
    3392:	81 e0       	ldi	r24, 0x01	; 1
    3394:	90 e0       	ldi	r25, 0x00	; 0
    3396:	98 ab       	std	Y+48, r25	; 0x30
    3398:	8f a7       	std	Y+47, r24	; 0x2f
    339a:	3f c0       	rjmp	.+126    	; 0x341a <LCD_enuInit+0x12e>
	else if (__tmp > 65535)
    339c:	69 a9       	ldd	r22, Y+49	; 0x31
    339e:	7a a9       	ldd	r23, Y+50	; 0x32
    33a0:	8b a9       	ldd	r24, Y+51	; 0x33
    33a2:	9c a9       	ldd	r25, Y+52	; 0x34
    33a4:	20 e0       	ldi	r18, 0x00	; 0
    33a6:	3f ef       	ldi	r19, 0xFF	; 255
    33a8:	4f e7       	ldi	r20, 0x7F	; 127
    33aa:	57 e4       	ldi	r21, 0x47	; 71
    33ac:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    33b0:	18 16       	cp	r1, r24
    33b2:	4c f5       	brge	.+82     	; 0x3406 <LCD_enuInit+0x11a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    33b4:	6d a9       	ldd	r22, Y+53	; 0x35
    33b6:	7e a9       	ldd	r23, Y+54	; 0x36
    33b8:	8f a9       	ldd	r24, Y+55	; 0x37
    33ba:	98 ad       	ldd	r25, Y+56	; 0x38
    33bc:	20 e0       	ldi	r18, 0x00	; 0
    33be:	30 e0       	ldi	r19, 0x00	; 0
    33c0:	40 e2       	ldi	r20, 0x20	; 32
    33c2:	51 e4       	ldi	r21, 0x41	; 65
    33c4:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    33c8:	dc 01       	movw	r26, r24
    33ca:	cb 01       	movw	r24, r22
    33cc:	bc 01       	movw	r22, r24
    33ce:	cd 01       	movw	r24, r26
    33d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    33d4:	dc 01       	movw	r26, r24
    33d6:	cb 01       	movw	r24, r22
    33d8:	98 ab       	std	Y+48, r25	; 0x30
    33da:	8f a7       	std	Y+47, r24	; 0x2f
    33dc:	0f c0       	rjmp	.+30     	; 0x33fc <LCD_enuInit+0x110>
    33de:	88 ec       	ldi	r24, 0xC8	; 200
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	9e a7       	std	Y+46, r25	; 0x2e
    33e4:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    33e6:	8d a5       	ldd	r24, Y+45	; 0x2d
    33e8:	9e a5       	ldd	r25, Y+46	; 0x2e
    33ea:	01 97       	sbiw	r24, 0x01	; 1
    33ec:	f1 f7       	brne	.-4      	; 0x33ea <LCD_enuInit+0xfe>
    33ee:	9e a7       	std	Y+46, r25	; 0x2e
    33f0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    33f2:	8f a5       	ldd	r24, Y+47	; 0x2f
    33f4:	98 a9       	ldd	r25, Y+48	; 0x30
    33f6:	01 97       	sbiw	r24, 0x01	; 1
    33f8:	98 ab       	std	Y+48, r25	; 0x30
    33fa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    33fc:	8f a5       	ldd	r24, Y+47	; 0x2f
    33fe:	98 a9       	ldd	r25, Y+48	; 0x30
    3400:	00 97       	sbiw	r24, 0x00	; 0
    3402:	69 f7       	brne	.-38     	; 0x33de <LCD_enuInit+0xf2>
    3404:	14 c0       	rjmp	.+40     	; 0x342e <LCD_enuInit+0x142>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3406:	69 a9       	ldd	r22, Y+49	; 0x31
    3408:	7a a9       	ldd	r23, Y+50	; 0x32
    340a:	8b a9       	ldd	r24, Y+51	; 0x33
    340c:	9c a9       	ldd	r25, Y+52	; 0x34
    340e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3412:	dc 01       	movw	r26, r24
    3414:	cb 01       	movw	r24, r22
    3416:	98 ab       	std	Y+48, r25	; 0x30
    3418:	8f a7       	std	Y+47, r24	; 0x2f
    341a:	8f a5       	ldd	r24, Y+47	; 0x2f
    341c:	98 a9       	ldd	r25, Y+48	; 0x30
    341e:	9c a7       	std	Y+44, r25	; 0x2c
    3420:	8b a7       	std	Y+43, r24	; 0x2b
    3422:	8b a5       	ldd	r24, Y+43	; 0x2b
    3424:	9c a5       	ldd	r25, Y+44	; 0x2c
    3426:	01 97       	sbiw	r24, 0x01	; 1
    3428:	f1 f7       	brne	.-4      	; 0x3426 <LCD_enuInit+0x13a>
    342a:	9c a7       	std	Y+44, r25	; 0x2c
    342c:	8b a7       	std	Y+43, r24	; 0x2b

	_delay_ms(30);

#if LCD_MODE == EIGHT_BIT
	DIO_enumSetPinDirection(D3_PORT, D3_PIN, DIO_OUTPUT);
    342e:	82 e0       	ldi	r24, 0x02	; 2
    3430:	63 e0       	ldi	r22, 0x03	; 3
    3432:	41 e0       	ldi	r20, 0x01	; 1
    3434:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D2_PORT, D2_PIN, DIO_OUTPUT);
    3438:	82 e0       	ldi	r24, 0x02	; 2
    343a:	62 e0       	ldi	r22, 0x02	; 2
    343c:	41 e0       	ldi	r20, 0x01	; 1
    343e:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D1_PORT, D1_PIN, DIO_OUTPUT);
    3442:	82 e0       	ldi	r24, 0x02	; 2
    3444:	61 e0       	ldi	r22, 0x01	; 1
    3446:	41 e0       	ldi	r20, 0x01	; 1
    3448:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
	DIO_enumSetPinDirection(D0_PORT, D0_PIN, DIO_OUTPUT);
    344c:	82 e0       	ldi	r24, 0x02	; 2
    344e:	60 e0       	ldi	r22, 0x00	; 0
    3450:	41 e0       	ldi	r20, 0x01	; 1
    3452:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>

	//function set
	LCD_invidSendCommend(0x38);
    3456:	88 e3       	ldi	r24, 0x38	; 56
    3458:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
    345c:	80 e0       	ldi	r24, 0x00	; 0
    345e:	90 e0       	ldi	r25, 0x00	; 0
    3460:	a0 e8       	ldi	r26, 0x80	; 128
    3462:	bf e3       	ldi	r27, 0x3F	; 63
    3464:	8f a3       	std	Y+39, r24	; 0x27
    3466:	98 a7       	std	Y+40, r25	; 0x28
    3468:	a9 a7       	std	Y+41, r26	; 0x29
    346a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    346c:	6f a1       	ldd	r22, Y+39	; 0x27
    346e:	78 a5       	ldd	r23, Y+40	; 0x28
    3470:	89 a5       	ldd	r24, Y+41	; 0x29
    3472:	9a a5       	ldd	r25, Y+42	; 0x2a
    3474:	20 e0       	ldi	r18, 0x00	; 0
    3476:	30 e0       	ldi	r19, 0x00	; 0
    3478:	4a ef       	ldi	r20, 0xFA	; 250
    347a:	54 e4       	ldi	r21, 0x44	; 68
    347c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3480:	dc 01       	movw	r26, r24
    3482:	cb 01       	movw	r24, r22
    3484:	8b a3       	std	Y+35, r24	; 0x23
    3486:	9c a3       	std	Y+36, r25	; 0x24
    3488:	ad a3       	std	Y+37, r26	; 0x25
    348a:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    348c:	6b a1       	ldd	r22, Y+35	; 0x23
    348e:	7c a1       	ldd	r23, Y+36	; 0x24
    3490:	8d a1       	ldd	r24, Y+37	; 0x25
    3492:	9e a1       	ldd	r25, Y+38	; 0x26
    3494:	20 e0       	ldi	r18, 0x00	; 0
    3496:	30 e0       	ldi	r19, 0x00	; 0
    3498:	40 e8       	ldi	r20, 0x80	; 128
    349a:	5f e3       	ldi	r21, 0x3F	; 63
    349c:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    34a0:	88 23       	and	r24, r24
    34a2:	2c f4       	brge	.+10     	; 0x34ae <LCD_enuInit+0x1c2>
		__ticks = 1;
    34a4:	81 e0       	ldi	r24, 0x01	; 1
    34a6:	90 e0       	ldi	r25, 0x00	; 0
    34a8:	9a a3       	std	Y+34, r25	; 0x22
    34aa:	89 a3       	std	Y+33, r24	; 0x21
    34ac:	3f c0       	rjmp	.+126    	; 0x352c <LCD_enuInit+0x240>
	else if (__tmp > 65535)
    34ae:	6b a1       	ldd	r22, Y+35	; 0x23
    34b0:	7c a1       	ldd	r23, Y+36	; 0x24
    34b2:	8d a1       	ldd	r24, Y+37	; 0x25
    34b4:	9e a1       	ldd	r25, Y+38	; 0x26
    34b6:	20 e0       	ldi	r18, 0x00	; 0
    34b8:	3f ef       	ldi	r19, 0xFF	; 255
    34ba:	4f e7       	ldi	r20, 0x7F	; 127
    34bc:	57 e4       	ldi	r21, 0x47	; 71
    34be:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    34c2:	18 16       	cp	r1, r24
    34c4:	4c f5       	brge	.+82     	; 0x3518 <LCD_enuInit+0x22c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    34c6:	6f a1       	ldd	r22, Y+39	; 0x27
    34c8:	78 a5       	ldd	r23, Y+40	; 0x28
    34ca:	89 a5       	ldd	r24, Y+41	; 0x29
    34cc:	9a a5       	ldd	r25, Y+42	; 0x2a
    34ce:	20 e0       	ldi	r18, 0x00	; 0
    34d0:	30 e0       	ldi	r19, 0x00	; 0
    34d2:	40 e2       	ldi	r20, 0x20	; 32
    34d4:	51 e4       	ldi	r21, 0x41	; 65
    34d6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    34da:	dc 01       	movw	r26, r24
    34dc:	cb 01       	movw	r24, r22
    34de:	bc 01       	movw	r22, r24
    34e0:	cd 01       	movw	r24, r26
    34e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34e6:	dc 01       	movw	r26, r24
    34e8:	cb 01       	movw	r24, r22
    34ea:	9a a3       	std	Y+34, r25	; 0x22
    34ec:	89 a3       	std	Y+33, r24	; 0x21
    34ee:	0f c0       	rjmp	.+30     	; 0x350e <LCD_enuInit+0x222>
    34f0:	88 ec       	ldi	r24, 0xC8	; 200
    34f2:	90 e0       	ldi	r25, 0x00	; 0
    34f4:	98 a3       	std	Y+32, r25	; 0x20
    34f6:	8f 8f       	std	Y+31, r24	; 0x1f
    34f8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    34fa:	98 a1       	ldd	r25, Y+32	; 0x20
    34fc:	01 97       	sbiw	r24, 0x01	; 1
    34fe:	f1 f7       	brne	.-4      	; 0x34fc <LCD_enuInit+0x210>
    3500:	98 a3       	std	Y+32, r25	; 0x20
    3502:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3504:	89 a1       	ldd	r24, Y+33	; 0x21
    3506:	9a a1       	ldd	r25, Y+34	; 0x22
    3508:	01 97       	sbiw	r24, 0x01	; 1
    350a:	9a a3       	std	Y+34, r25	; 0x22
    350c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    350e:	89 a1       	ldd	r24, Y+33	; 0x21
    3510:	9a a1       	ldd	r25, Y+34	; 0x22
    3512:	00 97       	sbiw	r24, 0x00	; 0
    3514:	69 f7       	brne	.-38     	; 0x34f0 <LCD_enuInit+0x204>
    3516:	14 c0       	rjmp	.+40     	; 0x3540 <LCD_enuInit+0x254>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3518:	6b a1       	ldd	r22, Y+35	; 0x23
    351a:	7c a1       	ldd	r23, Y+36	; 0x24
    351c:	8d a1       	ldd	r24, Y+37	; 0x25
    351e:	9e a1       	ldd	r25, Y+38	; 0x26
    3520:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3524:	dc 01       	movw	r26, r24
    3526:	cb 01       	movw	r24, r22
    3528:	9a a3       	std	Y+34, r25	; 0x22
    352a:	89 a3       	std	Y+33, r24	; 0x21
    352c:	89 a1       	ldd	r24, Y+33	; 0x21
    352e:	9a a1       	ldd	r25, Y+34	; 0x22
    3530:	9e 8f       	std	Y+30, r25	; 0x1e
    3532:	8d 8f       	std	Y+29, r24	; 0x1d
    3534:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3536:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3538:	01 97       	sbiw	r24, 0x01	; 1
    353a:	f1 f7       	brne	.-4      	; 0x3538 <LCD_enuInit+0x24c>
    353c:	9e 8f       	std	Y+30, r25	; 0x1e
    353e:	8d 8f       	std	Y+29, r24	; 0x1d
#elif LCD_MODE == FOUR_BIT

#endif
	_delay_ms(1);
	//Display on off
	LCD_invidSendCommend(0x0f);
    3540:	8f e0       	ldi	r24, 0x0F	; 15
    3542:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
    3546:	80 e0       	ldi	r24, 0x00	; 0
    3548:	90 e0       	ldi	r25, 0x00	; 0
    354a:	a0 e8       	ldi	r26, 0x80	; 128
    354c:	bf e3       	ldi	r27, 0x3F	; 63
    354e:	89 8f       	std	Y+25, r24	; 0x19
    3550:	9a 8f       	std	Y+26, r25	; 0x1a
    3552:	ab 8f       	std	Y+27, r26	; 0x1b
    3554:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3556:	69 8d       	ldd	r22, Y+25	; 0x19
    3558:	7a 8d       	ldd	r23, Y+26	; 0x1a
    355a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    355c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    355e:	20 e0       	ldi	r18, 0x00	; 0
    3560:	30 e0       	ldi	r19, 0x00	; 0
    3562:	4a ef       	ldi	r20, 0xFA	; 250
    3564:	54 e4       	ldi	r21, 0x44	; 68
    3566:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    356a:	dc 01       	movw	r26, r24
    356c:	cb 01       	movw	r24, r22
    356e:	8d 8b       	std	Y+21, r24	; 0x15
    3570:	9e 8b       	std	Y+22, r25	; 0x16
    3572:	af 8b       	std	Y+23, r26	; 0x17
    3574:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3576:	6d 89       	ldd	r22, Y+21	; 0x15
    3578:	7e 89       	ldd	r23, Y+22	; 0x16
    357a:	8f 89       	ldd	r24, Y+23	; 0x17
    357c:	98 8d       	ldd	r25, Y+24	; 0x18
    357e:	20 e0       	ldi	r18, 0x00	; 0
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	40 e8       	ldi	r20, 0x80	; 128
    3584:	5f e3       	ldi	r21, 0x3F	; 63
    3586:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    358a:	88 23       	and	r24, r24
    358c:	2c f4       	brge	.+10     	; 0x3598 <LCD_enuInit+0x2ac>
		__ticks = 1;
    358e:	81 e0       	ldi	r24, 0x01	; 1
    3590:	90 e0       	ldi	r25, 0x00	; 0
    3592:	9c 8b       	std	Y+20, r25	; 0x14
    3594:	8b 8b       	std	Y+19, r24	; 0x13
    3596:	3f c0       	rjmp	.+126    	; 0x3616 <LCD_enuInit+0x32a>
	else if (__tmp > 65535)
    3598:	6d 89       	ldd	r22, Y+21	; 0x15
    359a:	7e 89       	ldd	r23, Y+22	; 0x16
    359c:	8f 89       	ldd	r24, Y+23	; 0x17
    359e:	98 8d       	ldd	r25, Y+24	; 0x18
    35a0:	20 e0       	ldi	r18, 0x00	; 0
    35a2:	3f ef       	ldi	r19, 0xFF	; 255
    35a4:	4f e7       	ldi	r20, 0x7F	; 127
    35a6:	57 e4       	ldi	r21, 0x47	; 71
    35a8:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    35ac:	18 16       	cp	r1, r24
    35ae:	4c f5       	brge	.+82     	; 0x3602 <LCD_enuInit+0x316>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35b0:	69 8d       	ldd	r22, Y+25	; 0x19
    35b2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35b4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35b6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35b8:	20 e0       	ldi	r18, 0x00	; 0
    35ba:	30 e0       	ldi	r19, 0x00	; 0
    35bc:	40 e2       	ldi	r20, 0x20	; 32
    35be:	51 e4       	ldi	r21, 0x41	; 65
    35c0:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    35c4:	dc 01       	movw	r26, r24
    35c6:	cb 01       	movw	r24, r22
    35c8:	bc 01       	movw	r22, r24
    35ca:	cd 01       	movw	r24, r26
    35cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d0:	dc 01       	movw	r26, r24
    35d2:	cb 01       	movw	r24, r22
    35d4:	9c 8b       	std	Y+20, r25	; 0x14
    35d6:	8b 8b       	std	Y+19, r24	; 0x13
    35d8:	0f c0       	rjmp	.+30     	; 0x35f8 <LCD_enuInit+0x30c>
    35da:	88 ec       	ldi	r24, 0xC8	; 200
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	9a 8b       	std	Y+18, r25	; 0x12
    35e0:	89 8b       	std	Y+17, r24	; 0x11
    35e2:	89 89       	ldd	r24, Y+17	; 0x11
    35e4:	9a 89       	ldd	r25, Y+18	; 0x12
    35e6:	01 97       	sbiw	r24, 0x01	; 1
    35e8:	f1 f7       	brne	.-4      	; 0x35e6 <LCD_enuInit+0x2fa>
    35ea:	9a 8b       	std	Y+18, r25	; 0x12
    35ec:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35ee:	8b 89       	ldd	r24, Y+19	; 0x13
    35f0:	9c 89       	ldd	r25, Y+20	; 0x14
    35f2:	01 97       	sbiw	r24, 0x01	; 1
    35f4:	9c 8b       	std	Y+20, r25	; 0x14
    35f6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35f8:	8b 89       	ldd	r24, Y+19	; 0x13
    35fa:	9c 89       	ldd	r25, Y+20	; 0x14
    35fc:	00 97       	sbiw	r24, 0x00	; 0
    35fe:	69 f7       	brne	.-38     	; 0x35da <LCD_enuInit+0x2ee>
    3600:	14 c0       	rjmp	.+40     	; 0x362a <LCD_enuInit+0x33e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3602:	6d 89       	ldd	r22, Y+21	; 0x15
    3604:	7e 89       	ldd	r23, Y+22	; 0x16
    3606:	8f 89       	ldd	r24, Y+23	; 0x17
    3608:	98 8d       	ldd	r25, Y+24	; 0x18
    360a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    360e:	dc 01       	movw	r26, r24
    3610:	cb 01       	movw	r24, r22
    3612:	9c 8b       	std	Y+20, r25	; 0x14
    3614:	8b 8b       	std	Y+19, r24	; 0x13
    3616:	8b 89       	ldd	r24, Y+19	; 0x13
    3618:	9c 89       	ldd	r25, Y+20	; 0x14
    361a:	98 8b       	std	Y+16, r25	; 0x10
    361c:	8f 87       	std	Y+15, r24	; 0x0f
    361e:	8f 85       	ldd	r24, Y+15	; 0x0f
    3620:	98 89       	ldd	r25, Y+16	; 0x10
    3622:	01 97       	sbiw	r24, 0x01	; 1
    3624:	f1 f7       	brne	.-4      	; 0x3622 <LCD_enuInit+0x336>
    3626:	98 8b       	std	Y+16, r25	; 0x10
    3628:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	//clear display
	LCD_invidSendCommend(0x01);
    362a:	81 e0       	ldi	r24, 0x01	; 1
    362c:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
    3630:	80 e0       	ldi	r24, 0x00	; 0
    3632:	90 e0       	ldi	r25, 0x00	; 0
    3634:	a0 e0       	ldi	r26, 0x00	; 0
    3636:	b0 e4       	ldi	r27, 0x40	; 64
    3638:	8b 87       	std	Y+11, r24	; 0x0b
    363a:	9c 87       	std	Y+12, r25	; 0x0c
    363c:	ad 87       	std	Y+13, r26	; 0x0d
    363e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3640:	6b 85       	ldd	r22, Y+11	; 0x0b
    3642:	7c 85       	ldd	r23, Y+12	; 0x0c
    3644:	8d 85       	ldd	r24, Y+13	; 0x0d
    3646:	9e 85       	ldd	r25, Y+14	; 0x0e
    3648:	20 e0       	ldi	r18, 0x00	; 0
    364a:	30 e0       	ldi	r19, 0x00	; 0
    364c:	4a ef       	ldi	r20, 0xFA	; 250
    364e:	54 e4       	ldi	r21, 0x44	; 68
    3650:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3654:	dc 01       	movw	r26, r24
    3656:	cb 01       	movw	r24, r22
    3658:	8f 83       	std	Y+7, r24	; 0x07
    365a:	98 87       	std	Y+8, r25	; 0x08
    365c:	a9 87       	std	Y+9, r26	; 0x09
    365e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3660:	6f 81       	ldd	r22, Y+7	; 0x07
    3662:	78 85       	ldd	r23, Y+8	; 0x08
    3664:	89 85       	ldd	r24, Y+9	; 0x09
    3666:	9a 85       	ldd	r25, Y+10	; 0x0a
    3668:	20 e0       	ldi	r18, 0x00	; 0
    366a:	30 e0       	ldi	r19, 0x00	; 0
    366c:	40 e8       	ldi	r20, 0x80	; 128
    366e:	5f e3       	ldi	r21, 0x3F	; 63
    3670:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    3674:	88 23       	and	r24, r24
    3676:	2c f4       	brge	.+10     	; 0x3682 <LCD_enuInit+0x396>
		__ticks = 1;
    3678:	81 e0       	ldi	r24, 0x01	; 1
    367a:	90 e0       	ldi	r25, 0x00	; 0
    367c:	9e 83       	std	Y+6, r25	; 0x06
    367e:	8d 83       	std	Y+5, r24	; 0x05
    3680:	3f c0       	rjmp	.+126    	; 0x3700 <LCD_enuInit+0x414>
	else if (__tmp > 65535)
    3682:	6f 81       	ldd	r22, Y+7	; 0x07
    3684:	78 85       	ldd	r23, Y+8	; 0x08
    3686:	89 85       	ldd	r24, Y+9	; 0x09
    3688:	9a 85       	ldd	r25, Y+10	; 0x0a
    368a:	20 e0       	ldi	r18, 0x00	; 0
    368c:	3f ef       	ldi	r19, 0xFF	; 255
    368e:	4f e7       	ldi	r20, 0x7F	; 127
    3690:	57 e4       	ldi	r21, 0x47	; 71
    3692:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3696:	18 16       	cp	r1, r24
    3698:	4c f5       	brge	.+82     	; 0x36ec <LCD_enuInit+0x400>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    369a:	6b 85       	ldd	r22, Y+11	; 0x0b
    369c:	7c 85       	ldd	r23, Y+12	; 0x0c
    369e:	8d 85       	ldd	r24, Y+13	; 0x0d
    36a0:	9e 85       	ldd	r25, Y+14	; 0x0e
    36a2:	20 e0       	ldi	r18, 0x00	; 0
    36a4:	30 e0       	ldi	r19, 0x00	; 0
    36a6:	40 e2       	ldi	r20, 0x20	; 32
    36a8:	51 e4       	ldi	r21, 0x41	; 65
    36aa:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    36ae:	dc 01       	movw	r26, r24
    36b0:	cb 01       	movw	r24, r22
    36b2:	bc 01       	movw	r22, r24
    36b4:	cd 01       	movw	r24, r26
    36b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36ba:	dc 01       	movw	r26, r24
    36bc:	cb 01       	movw	r24, r22
    36be:	9e 83       	std	Y+6, r25	; 0x06
    36c0:	8d 83       	std	Y+5, r24	; 0x05
    36c2:	0f c0       	rjmp	.+30     	; 0x36e2 <LCD_enuInit+0x3f6>
    36c4:	88 ec       	ldi	r24, 0xC8	; 200
    36c6:	90 e0       	ldi	r25, 0x00	; 0
    36c8:	9c 83       	std	Y+4, r25	; 0x04
    36ca:	8b 83       	std	Y+3, r24	; 0x03
    36cc:	8b 81       	ldd	r24, Y+3	; 0x03
    36ce:	9c 81       	ldd	r25, Y+4	; 0x04
    36d0:	01 97       	sbiw	r24, 0x01	; 1
    36d2:	f1 f7       	brne	.-4      	; 0x36d0 <LCD_enuInit+0x3e4>
    36d4:	9c 83       	std	Y+4, r25	; 0x04
    36d6:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36d8:	8d 81       	ldd	r24, Y+5	; 0x05
    36da:	9e 81       	ldd	r25, Y+6	; 0x06
    36dc:	01 97       	sbiw	r24, 0x01	; 1
    36de:	9e 83       	std	Y+6, r25	; 0x06
    36e0:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36e2:	8d 81       	ldd	r24, Y+5	; 0x05
    36e4:	9e 81       	ldd	r25, Y+6	; 0x06
    36e6:	00 97       	sbiw	r24, 0x00	; 0
    36e8:	69 f7       	brne	.-38     	; 0x36c4 <LCD_enuInit+0x3d8>
    36ea:	14 c0       	rjmp	.+40     	; 0x3714 <LCD_enuInit+0x428>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36ec:	6f 81       	ldd	r22, Y+7	; 0x07
    36ee:	78 85       	ldd	r23, Y+8	; 0x08
    36f0:	89 85       	ldd	r24, Y+9	; 0x09
    36f2:	9a 85       	ldd	r25, Y+10	; 0x0a
    36f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36f8:	dc 01       	movw	r26, r24
    36fa:	cb 01       	movw	r24, r22
    36fc:	9e 83       	std	Y+6, r25	; 0x06
    36fe:	8d 83       	std	Y+5, r24	; 0x05
    3700:	8d 81       	ldd	r24, Y+5	; 0x05
    3702:	9e 81       	ldd	r25, Y+6	; 0x06
    3704:	9a 83       	std	Y+2, r25	; 0x02
    3706:	89 83       	std	Y+1, r24	; 0x01
    3708:	89 81       	ldd	r24, Y+1	; 0x01
    370a:	9a 81       	ldd	r25, Y+2	; 0x02
    370c:	01 97       	sbiw	r24, 0x01	; 1
    370e:	f1 f7       	brne	.-4      	; 0x370c <LCD_enuInit+0x420>
    3710:	9a 83       	std	Y+2, r25	; 0x02
    3712:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
	//entry mode
	LCD_invidSendCommend(0x06);
    3714:	86 e0       	ldi	r24, 0x06	; 6
    3716:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>

	return LOC_enumState;
    371a:	89 ad       	ldd	r24, Y+57	; 0x39
}
    371c:	e9 96       	adiw	r28, 0x39	; 57
    371e:	0f b6       	in	r0, 0x3f	; 63
    3720:	f8 94       	cli
    3722:	de bf       	out	0x3e, r29	; 62
    3724:	0f be       	out	0x3f, r0	; 63
    3726:	cd bf       	out	0x3d, r28	; 61
    3728:	cf 91       	pop	r28
    372a:	df 91       	pop	r29
    372c:	08 95       	ret

0000372e <LCD_enuDisplayChar>:


DIO_ErrorStatus LCD_enuDisplayChar(u8 Copy_u8Data)
{
    372e:	df 93       	push	r29
    3730:	cf 93       	push	r28
    3732:	00 d0       	rcall	.+0      	; 0x3734 <LCD_enuDisplayChar+0x6>
    3734:	cd b7       	in	r28, 0x3d	; 61
    3736:	de b7       	in	r29, 0x3e	; 62
    3738:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumState  = DIO_OK;
    373a:	81 e0       	ldi	r24, 0x01	; 1
    373c:	89 83       	std	Y+1, r24	; 0x01

	//set RS as data
	DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_HIGH);
    373e:	83 e0       	ldi	r24, 0x03	; 3
    3740:	60 e0       	ldi	r22, 0x00	; 0
    3742:	41 e0       	ldi	r20, 0x01	; 1
    3744:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	LCD_voidSendData( Copy_u8Data);
    3748:	8a 81       	ldd	r24, Y+2	; 0x02
    374a:	0e 94 c3 1b 	call	0x3786	; 0x3786 <LCD_voidSendData>


	return LOC_enumState;
    374e:	89 81       	ldd	r24, Y+1	; 0x01
}
    3750:	0f 90       	pop	r0
    3752:	0f 90       	pop	r0
    3754:	cf 91       	pop	r28
    3756:	df 91       	pop	r29
    3758:	08 95       	ret

0000375a <LCD_enuSendCommand>:

DIO_ErrorStatus LCD_enuSendCommand(u8 Copy_u8Command)
{
    375a:	df 93       	push	r29
    375c:	cf 93       	push	r28
    375e:	00 d0       	rcall	.+0      	; 0x3760 <LCD_enuSendCommand+0x6>
    3760:	cd b7       	in	r28, 0x3d	; 61
    3762:	de b7       	in	r29, 0x3e	; 62
    3764:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumState  = DIO_OK;
    3766:	81 e0       	ldi	r24, 0x01	; 1
    3768:	89 83       	std	Y+1, r24	; 0x01
	//set RS as command
	DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_LOW);
    376a:	83 e0       	ldi	r24, 0x03	; 3
    376c:	60 e0       	ldi	r22, 0x00	; 0
    376e:	40 e0       	ldi	r20, 0x00	; 0
    3770:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>

	LCD_voidSendData( Copy_u8Command);
    3774:	8a 81       	ldd	r24, Y+2	; 0x02
    3776:	0e 94 c3 1b 	call	0x3786	; 0x3786 <LCD_voidSendData>

	return LOC_enumState;
    377a:	89 81       	ldd	r24, Y+1	; 0x01
}
    377c:	0f 90       	pop	r0
    377e:	0f 90       	pop	r0
    3780:	cf 91       	pop	r28
    3782:	df 91       	pop	r29
    3784:	08 95       	ret

00003786 <LCD_voidSendData>:

static void LCD_voidSendData(u8 copy_u8Data)
{
    3786:	df 93       	push	r29
    3788:	cf 93       	push	r28
    378a:	cd b7       	in	r28, 0x3d	; 61
    378c:	de b7       	in	r29, 0x3e	; 62
    378e:	2f 97       	sbiw	r28, 0x0f	; 15
    3790:	0f b6       	in	r0, 0x3f	; 63
    3792:	f8 94       	cli
    3794:	de bf       	out	0x3e, r29	; 62
    3796:	0f be       	out	0x3f, r0	; 63
    3798:	cd bf       	out	0x3d, r28	; 61
    379a:	8f 87       	std	Y+15, r24	; 0x0f


	// set RW as  write operation,EN LOW
	DIO_enumSetPinValue(RW_PORT, RW_PIN,DIO_LOW);
    379c:	83 e0       	ldi	r24, 0x03	; 3
    379e:	61 e0       	ldi	r22, 0x01	; 1
    37a0:	40 e0       	ldi	r20, 0x00	; 0
    37a2:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_LOW);
    37a6:	83 e0       	ldi	r24, 0x03	; 3
    37a8:	62 e0       	ldi	r22, 0x02	; 2
    37aa:	40 e0       	ldi	r20, 0x00	; 0
    37ac:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>

	// write data
	DIO_enumSetPinValue(D7_PORT, D7_PIN,(copy_u8Data>>7)&1);
    37b0:	8f 85       	ldd	r24, Y+15	; 0x0f
    37b2:	98 2f       	mov	r25, r24
    37b4:	99 1f       	adc	r25, r25
    37b6:	99 27       	eor	r25, r25
    37b8:	99 1f       	adc	r25, r25
    37ba:	82 e0       	ldi	r24, 0x02	; 2
    37bc:	67 e0       	ldi	r22, 0x07	; 7
    37be:	49 2f       	mov	r20, r25
    37c0:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D6_PORT, D6_PIN,(copy_u8Data>>6)&1);
    37c4:	8f 85       	ldd	r24, Y+15	; 0x0f
    37c6:	82 95       	swap	r24
    37c8:	86 95       	lsr	r24
    37ca:	86 95       	lsr	r24
    37cc:	83 70       	andi	r24, 0x03	; 3
    37ce:	98 2f       	mov	r25, r24
    37d0:	91 70       	andi	r25, 0x01	; 1
    37d2:	82 e0       	ldi	r24, 0x02	; 2
    37d4:	66 e0       	ldi	r22, 0x06	; 6
    37d6:	49 2f       	mov	r20, r25
    37d8:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D5_PORT, D5_PIN,(copy_u8Data>>5)&1);
    37dc:	8f 85       	ldd	r24, Y+15	; 0x0f
    37de:	82 95       	swap	r24
    37e0:	86 95       	lsr	r24
    37e2:	87 70       	andi	r24, 0x07	; 7
    37e4:	98 2f       	mov	r25, r24
    37e6:	91 70       	andi	r25, 0x01	; 1
    37e8:	82 e0       	ldi	r24, 0x02	; 2
    37ea:	65 e0       	ldi	r22, 0x05	; 5
    37ec:	49 2f       	mov	r20, r25
    37ee:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D4_PORT, D4_PIN,(copy_u8Data>>4)&1);
    37f2:	8f 85       	ldd	r24, Y+15	; 0x0f
    37f4:	82 95       	swap	r24
    37f6:	8f 70       	andi	r24, 0x0F	; 15
    37f8:	98 2f       	mov	r25, r24
    37fa:	91 70       	andi	r25, 0x01	; 1
    37fc:	82 e0       	ldi	r24, 0x02	; 2
    37fe:	64 e0       	ldi	r22, 0x04	; 4
    3800:	49 2f       	mov	r20, r25
    3802:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
#if LCD_MODE == EIGHT_BIT
	DIO_enumSetPinValue(D3_PORT, D3_PIN,(copy_u8Data>>3)&1);
    3806:	8f 85       	ldd	r24, Y+15	; 0x0f
    3808:	86 95       	lsr	r24
    380a:	86 95       	lsr	r24
    380c:	86 95       	lsr	r24
    380e:	98 2f       	mov	r25, r24
    3810:	91 70       	andi	r25, 0x01	; 1
    3812:	82 e0       	ldi	r24, 0x02	; 2
    3814:	63 e0       	ldi	r22, 0x03	; 3
    3816:	49 2f       	mov	r20, r25
    3818:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D2_PORT, D2_PIN,(copy_u8Data>>2)&1);
    381c:	8f 85       	ldd	r24, Y+15	; 0x0f
    381e:	86 95       	lsr	r24
    3820:	86 95       	lsr	r24
    3822:	98 2f       	mov	r25, r24
    3824:	91 70       	andi	r25, 0x01	; 1
    3826:	82 e0       	ldi	r24, 0x02	; 2
    3828:	62 e0       	ldi	r22, 0x02	; 2
    382a:	49 2f       	mov	r20, r25
    382c:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D1_PORT, D1_PIN,(copy_u8Data>>1)&1);
    3830:	8f 85       	ldd	r24, Y+15	; 0x0f
    3832:	86 95       	lsr	r24
    3834:	98 2f       	mov	r25, r24
    3836:	91 70       	andi	r25, 0x01	; 1
    3838:	82 e0       	ldi	r24, 0x02	; 2
    383a:	61 e0       	ldi	r22, 0x01	; 1
    383c:	49 2f       	mov	r20, r25
    383e:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D0_PORT, D0_PIN,(copy_u8Data>>0)&1);
    3842:	8f 85       	ldd	r24, Y+15	; 0x0f
    3844:	98 2f       	mov	r25, r24
    3846:	91 70       	andi	r25, 0x01	; 1
    3848:	82 e0       	ldi	r24, 0x02	; 2
    384a:	60 e0       	ldi	r22, 0x00	; 0
    384c:	49 2f       	mov	r20, r25
    384e:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D5_PORT, D5_PIN,(copy_u8Data>>1)&1);
	DIO_enumSetPinValue(D4_PORT, D4_PIN,(copy_u8Data>>0)&1);

#endif
	// falling edge
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_HIGH);
    3852:	83 e0       	ldi	r24, 0x03	; 3
    3854:	62 e0       	ldi	r22, 0x02	; 2
    3856:	41 e0       	ldi	r20, 0x01	; 1
    3858:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
    385c:	80 e0       	ldi	r24, 0x00	; 0
    385e:	90 e0       	ldi	r25, 0x00	; 0
    3860:	a0 e2       	ldi	r26, 0x20	; 32
    3862:	b1 e4       	ldi	r27, 0x41	; 65
    3864:	8b 87       	std	Y+11, r24	; 0x0b
    3866:	9c 87       	std	Y+12, r25	; 0x0c
    3868:	ad 87       	std	Y+13, r26	; 0x0d
    386a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    386c:	6b 85       	ldd	r22, Y+11	; 0x0b
    386e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3870:	8d 85       	ldd	r24, Y+13	; 0x0d
    3872:	9e 85       	ldd	r25, Y+14	; 0x0e
    3874:	20 e0       	ldi	r18, 0x00	; 0
    3876:	30 e0       	ldi	r19, 0x00	; 0
    3878:	4a ef       	ldi	r20, 0xFA	; 250
    387a:	54 e4       	ldi	r21, 0x44	; 68
    387c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3880:	dc 01       	movw	r26, r24
    3882:	cb 01       	movw	r24, r22
    3884:	8f 83       	std	Y+7, r24	; 0x07
    3886:	98 87       	std	Y+8, r25	; 0x08
    3888:	a9 87       	std	Y+9, r26	; 0x09
    388a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    388c:	6f 81       	ldd	r22, Y+7	; 0x07
    388e:	78 85       	ldd	r23, Y+8	; 0x08
    3890:	89 85       	ldd	r24, Y+9	; 0x09
    3892:	9a 85       	ldd	r25, Y+10	; 0x0a
    3894:	20 e0       	ldi	r18, 0x00	; 0
    3896:	30 e0       	ldi	r19, 0x00	; 0
    3898:	40 e8       	ldi	r20, 0x80	; 128
    389a:	5f e3       	ldi	r21, 0x3F	; 63
    389c:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    38a0:	88 23       	and	r24, r24
    38a2:	2c f4       	brge	.+10     	; 0x38ae <LCD_voidSendData+0x128>
		__ticks = 1;
    38a4:	81 e0       	ldi	r24, 0x01	; 1
    38a6:	90 e0       	ldi	r25, 0x00	; 0
    38a8:	9e 83       	std	Y+6, r25	; 0x06
    38aa:	8d 83       	std	Y+5, r24	; 0x05
    38ac:	3f c0       	rjmp	.+126    	; 0x392c <LCD_voidSendData+0x1a6>
	else if (__tmp > 65535)
    38ae:	6f 81       	ldd	r22, Y+7	; 0x07
    38b0:	78 85       	ldd	r23, Y+8	; 0x08
    38b2:	89 85       	ldd	r24, Y+9	; 0x09
    38b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    38b6:	20 e0       	ldi	r18, 0x00	; 0
    38b8:	3f ef       	ldi	r19, 0xFF	; 255
    38ba:	4f e7       	ldi	r20, 0x7F	; 127
    38bc:	57 e4       	ldi	r21, 0x47	; 71
    38be:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    38c2:	18 16       	cp	r1, r24
    38c4:	4c f5       	brge	.+82     	; 0x3918 <LCD_voidSendData+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    38c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    38ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    38cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    38ce:	20 e0       	ldi	r18, 0x00	; 0
    38d0:	30 e0       	ldi	r19, 0x00	; 0
    38d2:	40 e2       	ldi	r20, 0x20	; 32
    38d4:	51 e4       	ldi	r21, 0x41	; 65
    38d6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    38da:	dc 01       	movw	r26, r24
    38dc:	cb 01       	movw	r24, r22
    38de:	bc 01       	movw	r22, r24
    38e0:	cd 01       	movw	r24, r26
    38e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38e6:	dc 01       	movw	r26, r24
    38e8:	cb 01       	movw	r24, r22
    38ea:	9e 83       	std	Y+6, r25	; 0x06
    38ec:	8d 83       	std	Y+5, r24	; 0x05
    38ee:	0f c0       	rjmp	.+30     	; 0x390e <LCD_voidSendData+0x188>
    38f0:	88 ec       	ldi	r24, 0xC8	; 200
    38f2:	90 e0       	ldi	r25, 0x00	; 0
    38f4:	9c 83       	std	Y+4, r25	; 0x04
    38f6:	8b 83       	std	Y+3, r24	; 0x03
    38f8:	8b 81       	ldd	r24, Y+3	; 0x03
    38fa:	9c 81       	ldd	r25, Y+4	; 0x04
    38fc:	01 97       	sbiw	r24, 0x01	; 1
    38fe:	f1 f7       	brne	.-4      	; 0x38fc <LCD_voidSendData+0x176>
    3900:	9c 83       	std	Y+4, r25	; 0x04
    3902:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3904:	8d 81       	ldd	r24, Y+5	; 0x05
    3906:	9e 81       	ldd	r25, Y+6	; 0x06
    3908:	01 97       	sbiw	r24, 0x01	; 1
    390a:	9e 83       	std	Y+6, r25	; 0x06
    390c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    390e:	8d 81       	ldd	r24, Y+5	; 0x05
    3910:	9e 81       	ldd	r25, Y+6	; 0x06
    3912:	00 97       	sbiw	r24, 0x00	; 0
    3914:	69 f7       	brne	.-38     	; 0x38f0 <LCD_voidSendData+0x16a>
    3916:	14 c0       	rjmp	.+40     	; 0x3940 <LCD_voidSendData+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3918:	6f 81       	ldd	r22, Y+7	; 0x07
    391a:	78 85       	ldd	r23, Y+8	; 0x08
    391c:	89 85       	ldd	r24, Y+9	; 0x09
    391e:	9a 85       	ldd	r25, Y+10	; 0x0a
    3920:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3924:	dc 01       	movw	r26, r24
    3926:	cb 01       	movw	r24, r22
    3928:	9e 83       	std	Y+6, r25	; 0x06
    392a:	8d 83       	std	Y+5, r24	; 0x05
    392c:	8d 81       	ldd	r24, Y+5	; 0x05
    392e:	9e 81       	ldd	r25, Y+6	; 0x06
    3930:	9a 83       	std	Y+2, r25	; 0x02
    3932:	89 83       	std	Y+1, r24	; 0x01
    3934:	89 81       	ldd	r24, Y+1	; 0x01
    3936:	9a 81       	ldd	r25, Y+2	; 0x02
    3938:	01 97       	sbiw	r24, 0x01	; 1
    393a:	f1 f7       	brne	.-4      	; 0x3938 <LCD_voidSendData+0x1b2>
    393c:	9a 83       	std	Y+2, r25	; 0x02
    393e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_LOW);
    3940:	83 e0       	ldi	r24, 0x03	; 3
    3942:	62 e0       	ldi	r22, 0x02	; 2
    3944:	40 e0       	ldi	r20, 0x00	; 0
    3946:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>


}
    394a:	2f 96       	adiw	r28, 0x0f	; 15
    394c:	0f b6       	in	r0, 0x3f	; 63
    394e:	f8 94       	cli
    3950:	de bf       	out	0x3e, r29	; 62
    3952:	0f be       	out	0x3f, r0	; 63
    3954:	cd bf       	out	0x3d, r28	; 61
    3956:	cf 91       	pop	r28
    3958:	df 91       	pop	r29
    395a:	08 95       	ret

0000395c <LCD_invidSendCommend>:
static inline void LCD_invidSendCommend(u8 Copy_u8Command)
{
    395c:	df 93       	push	r29
    395e:	cf 93       	push	r28
    3960:	cd b7       	in	r28, 0x3d	; 61
    3962:	de b7       	in	r29, 0x3e	; 62
    3964:	2f 97       	sbiw	r28, 0x0f	; 15
    3966:	0f b6       	in	r0, 0x3f	; 63
    3968:	f8 94       	cli
    396a:	de bf       	out	0x3e, r29	; 62
    396c:	0f be       	out	0x3f, r0	; 63
    396e:	cd bf       	out	0x3d, r28	; 61
    3970:	8f 87       	std	Y+15, r24	; 0x0f
	//set RS as command
	DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_LOW);
    3972:	83 e0       	ldi	r24, 0x03	; 3
    3974:	60 e0       	ldi	r22, 0x00	; 0
    3976:	40 e0       	ldi	r20, 0x00	; 0
    3978:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>

	// set RW as  write operation,EN LOW
	DIO_enumSetPinValue(RW_PORT, RW_PIN,DIO_LOW);
    397c:	83 e0       	ldi	r24, 0x03	; 3
    397e:	61 e0       	ldi	r22, 0x01	; 1
    3980:	40 e0       	ldi	r20, 0x00	; 0
    3982:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_LOW);
    3986:	83 e0       	ldi	r24, 0x03	; 3
    3988:	62 e0       	ldi	r22, 0x02	; 2
    398a:	40 e0       	ldi	r20, 0x00	; 0
    398c:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>

	// write data
	DIO_enumSetPinValue(D7_PORT, D7_PIN,(Copy_u8Command>>7)&1);
    3990:	8f 85       	ldd	r24, Y+15	; 0x0f
    3992:	98 2f       	mov	r25, r24
    3994:	99 1f       	adc	r25, r25
    3996:	99 27       	eor	r25, r25
    3998:	99 1f       	adc	r25, r25
    399a:	82 e0       	ldi	r24, 0x02	; 2
    399c:	67 e0       	ldi	r22, 0x07	; 7
    399e:	49 2f       	mov	r20, r25
    39a0:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D6_PORT, D6_PIN,(Copy_u8Command>>6)&1);
    39a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    39a6:	82 95       	swap	r24
    39a8:	86 95       	lsr	r24
    39aa:	86 95       	lsr	r24
    39ac:	83 70       	andi	r24, 0x03	; 3
    39ae:	98 2f       	mov	r25, r24
    39b0:	91 70       	andi	r25, 0x01	; 1
    39b2:	82 e0       	ldi	r24, 0x02	; 2
    39b4:	66 e0       	ldi	r22, 0x06	; 6
    39b6:	49 2f       	mov	r20, r25
    39b8:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D5_PORT, D5_PIN,(Copy_u8Command>>5)&1);
    39bc:	8f 85       	ldd	r24, Y+15	; 0x0f
    39be:	82 95       	swap	r24
    39c0:	86 95       	lsr	r24
    39c2:	87 70       	andi	r24, 0x07	; 7
    39c4:	98 2f       	mov	r25, r24
    39c6:	91 70       	andi	r25, 0x01	; 1
    39c8:	82 e0       	ldi	r24, 0x02	; 2
    39ca:	65 e0       	ldi	r22, 0x05	; 5
    39cc:	49 2f       	mov	r20, r25
    39ce:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D4_PORT, D4_PIN,(Copy_u8Command>>4)&1);
    39d2:	8f 85       	ldd	r24, Y+15	; 0x0f
    39d4:	82 95       	swap	r24
    39d6:	8f 70       	andi	r24, 0x0F	; 15
    39d8:	98 2f       	mov	r25, r24
    39da:	91 70       	andi	r25, 0x01	; 1
    39dc:	82 e0       	ldi	r24, 0x02	; 2
    39de:	64 e0       	ldi	r22, 0x04	; 4
    39e0:	49 2f       	mov	r20, r25
    39e2:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>



#if LCD_MODE == EIGHT_BIT
	DIO_enumSetPinValue(D3_PORT, D3_PIN,(Copy_u8Command>>3)&1);
    39e6:	8f 85       	ldd	r24, Y+15	; 0x0f
    39e8:	86 95       	lsr	r24
    39ea:	86 95       	lsr	r24
    39ec:	86 95       	lsr	r24
    39ee:	98 2f       	mov	r25, r24
    39f0:	91 70       	andi	r25, 0x01	; 1
    39f2:	82 e0       	ldi	r24, 0x02	; 2
    39f4:	63 e0       	ldi	r22, 0x03	; 3
    39f6:	49 2f       	mov	r20, r25
    39f8:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D2_PORT, D2_PIN,(Copy_u8Command>>2)&1);
    39fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    39fe:	86 95       	lsr	r24
    3a00:	86 95       	lsr	r24
    3a02:	98 2f       	mov	r25, r24
    3a04:	91 70       	andi	r25, 0x01	; 1
    3a06:	82 e0       	ldi	r24, 0x02	; 2
    3a08:	62 e0       	ldi	r22, 0x02	; 2
    3a0a:	49 2f       	mov	r20, r25
    3a0c:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D1_PORT, D1_PIN,(Copy_u8Command>>1)&1);
    3a10:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a12:	86 95       	lsr	r24
    3a14:	98 2f       	mov	r25, r24
    3a16:	91 70       	andi	r25, 0x01	; 1
    3a18:	82 e0       	ldi	r24, 0x02	; 2
    3a1a:	61 e0       	ldi	r22, 0x01	; 1
    3a1c:	49 2f       	mov	r20, r25
    3a1e:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	DIO_enumSetPinValue(D0_PORT, D0_PIN,(Copy_u8Command>>0)&1);
    3a22:	8f 85       	ldd	r24, Y+15	; 0x0f
    3a24:	98 2f       	mov	r25, r24
    3a26:	91 70       	andi	r25, 0x01	; 1
    3a28:	82 e0       	ldi	r24, 0x02	; 2
    3a2a:	60 e0       	ldi	r22, 0x00	; 0
    3a2c:	49 2f       	mov	r20, r25
    3a2e:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
#else
#error wrong selection

#endif
	// falling edge
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_HIGH);
    3a32:	83 e0       	ldi	r24, 0x03	; 3
    3a34:	62 e0       	ldi	r22, 0x02	; 2
    3a36:	41 e0       	ldi	r20, 0x01	; 1
    3a38:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
    3a3c:	80 e0       	ldi	r24, 0x00	; 0
    3a3e:	90 e0       	ldi	r25, 0x00	; 0
    3a40:	a0 e2       	ldi	r26, 0x20	; 32
    3a42:	b1 e4       	ldi	r27, 0x41	; 65
    3a44:	8b 87       	std	Y+11, r24	; 0x0b
    3a46:	9c 87       	std	Y+12, r25	; 0x0c
    3a48:	ad 87       	std	Y+13, r26	; 0x0d
    3a4a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3a4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3a50:	8d 85       	ldd	r24, Y+13	; 0x0d
    3a52:	9e 85       	ldd	r25, Y+14	; 0x0e
    3a54:	20 e0       	ldi	r18, 0x00	; 0
    3a56:	30 e0       	ldi	r19, 0x00	; 0
    3a58:	4a ef       	ldi	r20, 0xFA	; 250
    3a5a:	54 e4       	ldi	r21, 0x44	; 68
    3a5c:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3a60:	dc 01       	movw	r26, r24
    3a62:	cb 01       	movw	r24, r22
    3a64:	8f 83       	std	Y+7, r24	; 0x07
    3a66:	98 87       	std	Y+8, r25	; 0x08
    3a68:	a9 87       	std	Y+9, r26	; 0x09
    3a6a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3a6c:	6f 81       	ldd	r22, Y+7	; 0x07
    3a6e:	78 85       	ldd	r23, Y+8	; 0x08
    3a70:	89 85       	ldd	r24, Y+9	; 0x09
    3a72:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a74:	20 e0       	ldi	r18, 0x00	; 0
    3a76:	30 e0       	ldi	r19, 0x00	; 0
    3a78:	40 e8       	ldi	r20, 0x80	; 128
    3a7a:	5f e3       	ldi	r21, 0x3F	; 63
    3a7c:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    3a80:	88 23       	and	r24, r24
    3a82:	2c f4       	brge	.+10     	; 0x3a8e <LCD_invidSendCommend+0x132>
		__ticks = 1;
    3a84:	81 e0       	ldi	r24, 0x01	; 1
    3a86:	90 e0       	ldi	r25, 0x00	; 0
    3a88:	9e 83       	std	Y+6, r25	; 0x06
    3a8a:	8d 83       	std	Y+5, r24	; 0x05
    3a8c:	3f c0       	rjmp	.+126    	; 0x3b0c <LCD_invidSendCommend+0x1b0>
	else if (__tmp > 65535)
    3a8e:	6f 81       	ldd	r22, Y+7	; 0x07
    3a90:	78 85       	ldd	r23, Y+8	; 0x08
    3a92:	89 85       	ldd	r24, Y+9	; 0x09
    3a94:	9a 85       	ldd	r25, Y+10	; 0x0a
    3a96:	20 e0       	ldi	r18, 0x00	; 0
    3a98:	3f ef       	ldi	r19, 0xFF	; 255
    3a9a:	4f e7       	ldi	r20, 0x7F	; 127
    3a9c:	57 e4       	ldi	r21, 0x47	; 71
    3a9e:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    3aa2:	18 16       	cp	r1, r24
    3aa4:	4c f5       	brge	.+82     	; 0x3af8 <LCD_invidSendCommend+0x19c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3aa6:	6b 85       	ldd	r22, Y+11	; 0x0b
    3aa8:	7c 85       	ldd	r23, Y+12	; 0x0c
    3aaa:	8d 85       	ldd	r24, Y+13	; 0x0d
    3aac:	9e 85       	ldd	r25, Y+14	; 0x0e
    3aae:	20 e0       	ldi	r18, 0x00	; 0
    3ab0:	30 e0       	ldi	r19, 0x00	; 0
    3ab2:	40 e2       	ldi	r20, 0x20	; 32
    3ab4:	51 e4       	ldi	r21, 0x41	; 65
    3ab6:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3aba:	dc 01       	movw	r26, r24
    3abc:	cb 01       	movw	r24, r22
    3abe:	bc 01       	movw	r22, r24
    3ac0:	cd 01       	movw	r24, r26
    3ac2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ac6:	dc 01       	movw	r26, r24
    3ac8:	cb 01       	movw	r24, r22
    3aca:	9e 83       	std	Y+6, r25	; 0x06
    3acc:	8d 83       	std	Y+5, r24	; 0x05
    3ace:	0f c0       	rjmp	.+30     	; 0x3aee <LCD_invidSendCommend+0x192>
    3ad0:	88 ec       	ldi	r24, 0xC8	; 200
    3ad2:	90 e0       	ldi	r25, 0x00	; 0
    3ad4:	9c 83       	std	Y+4, r25	; 0x04
    3ad6:	8b 83       	std	Y+3, r24	; 0x03
    3ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    3ada:	9c 81       	ldd	r25, Y+4	; 0x04
    3adc:	01 97       	sbiw	r24, 0x01	; 1
    3ade:	f1 f7       	brne	.-4      	; 0x3adc <LCD_invidSendCommend+0x180>
    3ae0:	9c 83       	std	Y+4, r25	; 0x04
    3ae2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3ae4:	8d 81       	ldd	r24, Y+5	; 0x05
    3ae6:	9e 81       	ldd	r25, Y+6	; 0x06
    3ae8:	01 97       	sbiw	r24, 0x01	; 1
    3aea:	9e 83       	std	Y+6, r25	; 0x06
    3aec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3aee:	8d 81       	ldd	r24, Y+5	; 0x05
    3af0:	9e 81       	ldd	r25, Y+6	; 0x06
    3af2:	00 97       	sbiw	r24, 0x00	; 0
    3af4:	69 f7       	brne	.-38     	; 0x3ad0 <LCD_invidSendCommend+0x174>
    3af6:	14 c0       	rjmp	.+40     	; 0x3b20 <LCD_invidSendCommend+0x1c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3af8:	6f 81       	ldd	r22, Y+7	; 0x07
    3afa:	78 85       	ldd	r23, Y+8	; 0x08
    3afc:	89 85       	ldd	r24, Y+9	; 0x09
    3afe:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b04:	dc 01       	movw	r26, r24
    3b06:	cb 01       	movw	r24, r22
    3b08:	9e 83       	std	Y+6, r25	; 0x06
    3b0a:	8d 83       	std	Y+5, r24	; 0x05
    3b0c:	8d 81       	ldd	r24, Y+5	; 0x05
    3b0e:	9e 81       	ldd	r25, Y+6	; 0x06
    3b10:	9a 83       	std	Y+2, r25	; 0x02
    3b12:	89 83       	std	Y+1, r24	; 0x01
    3b14:	89 81       	ldd	r24, Y+1	; 0x01
    3b16:	9a 81       	ldd	r25, Y+2	; 0x02
    3b18:	01 97       	sbiw	r24, 0x01	; 1
    3b1a:	f1 f7       	brne	.-4      	; 0x3b18 <LCD_invidSendCommend+0x1bc>
    3b1c:	9a 83       	std	Y+2, r25	; 0x02
    3b1e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);
	DIO_enumSetPinValue(EN_PORT, EN_PIN,DIO_LOW);
    3b20:	83 e0       	ldi	r24, 0x03	; 3
    3b22:	62 e0       	ldi	r22, 0x02	; 2
    3b24:	40 e0       	ldi	r20, 0x00	; 0
    3b26:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>




}
    3b2a:	2f 96       	adiw	r28, 0x0f	; 15
    3b2c:	0f b6       	in	r0, 0x3f	; 63
    3b2e:	f8 94       	cli
    3b30:	de bf       	out	0x3e, r29	; 62
    3b32:	0f be       	out	0x3f, r0	; 63
    3b34:	cd bf       	out	0x3d, r28	; 61
    3b36:	cf 91       	pop	r28
    3b38:	df 91       	pop	r29
    3b3a:	08 95       	ret

00003b3c <LCD_voidSendString>:


void LCD_voidSendString  ( u8 * Copy_u8ptrString )
{
    3b3c:	df 93       	push	r29
    3b3e:	cf 93       	push	r28
    3b40:	00 d0       	rcall	.+0      	; 0x3b42 <LCD_voidSendString+0x6>
    3b42:	0f 92       	push	r0
    3b44:	cd b7       	in	r28, 0x3d	; 61
    3b46:	de b7       	in	r29, 0x3e	; 62
    3b48:	9b 83       	std	Y+3, r25	; 0x03
    3b4a:	8a 83       	std	Y+2, r24	; 0x02


	u8 LOC_u8Iterator = 0 ;
    3b4c:	19 82       	std	Y+1, r1	; 0x01
    3b4e:	0e c0       	rjmp	.+28     	; 0x3b6c <LCD_voidSendString+0x30>

	while( Copy_u8ptrString[ LOC_u8Iterator ] != '\0' ){

		LCD_enuDisplayChar( Copy_u8ptrString[ LOC_u8Iterator ] );
    3b50:	89 81       	ldd	r24, Y+1	; 0x01
    3b52:	28 2f       	mov	r18, r24
    3b54:	30 e0       	ldi	r19, 0x00	; 0
    3b56:	8a 81       	ldd	r24, Y+2	; 0x02
    3b58:	9b 81       	ldd	r25, Y+3	; 0x03
    3b5a:	fc 01       	movw	r30, r24
    3b5c:	e2 0f       	add	r30, r18
    3b5e:	f3 1f       	adc	r31, r19
    3b60:	80 81       	ld	r24, Z
    3b62:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
		LOC_u8Iterator ++ ;
    3b66:	89 81       	ldd	r24, Y+1	; 0x01
    3b68:	8f 5f       	subi	r24, 0xFF	; 255
    3b6a:	89 83       	std	Y+1, r24	; 0x01
{


	u8 LOC_u8Iterator = 0 ;

	while( Copy_u8ptrString[ LOC_u8Iterator ] != '\0' ){
    3b6c:	89 81       	ldd	r24, Y+1	; 0x01
    3b6e:	28 2f       	mov	r18, r24
    3b70:	30 e0       	ldi	r19, 0x00	; 0
    3b72:	8a 81       	ldd	r24, Y+2	; 0x02
    3b74:	9b 81       	ldd	r25, Y+3	; 0x03
    3b76:	fc 01       	movw	r30, r24
    3b78:	e2 0f       	add	r30, r18
    3b7a:	f3 1f       	adc	r31, r19
    3b7c:	80 81       	ld	r24, Z
    3b7e:	88 23       	and	r24, r24
    3b80:	39 f7       	brne	.-50     	; 0x3b50 <LCD_voidSendString+0x14>
		LOC_u8Iterator ++ ;
	}



}
    3b82:	0f 90       	pop	r0
    3b84:	0f 90       	pop	r0
    3b86:	0f 90       	pop	r0
    3b88:	cf 91       	pop	r28
    3b8a:	df 91       	pop	r29
    3b8c:	08 95       	ret

00003b8e <LCD_voidSetPosition>:

void LCD_voidSetPosition ( u8 Copy_u8Row , u8 Copy_u8Col ){
    3b8e:	df 93       	push	r29
    3b90:	cf 93       	push	r28
    3b92:	00 d0       	rcall	.+0      	; 0x3b94 <LCD_voidSetPosition+0x6>
    3b94:	cd b7       	in	r28, 0x3d	; 61
    3b96:	de b7       	in	r29, 0x3e	; 62
    3b98:	89 83       	std	Y+1, r24	; 0x01
    3b9a:	6a 83       	std	Y+2, r22	; 0x02

	if( Copy_u8Row == LCD_ROW_1 ){
    3b9c:	89 81       	ldd	r24, Y+1	; 0x01
    3b9e:	81 30       	cpi	r24, 0x01	; 1
    3ba0:	29 f4       	brne	.+10     	; 0x3bac <LCD_voidSetPosition+0x1e>

		LCD_invidSendCommend( (0x80) + ( Copy_u8Col - 1 ) );
    3ba2:	8a 81       	ldd	r24, Y+2	; 0x02
    3ba4:	81 58       	subi	r24, 0x81	; 129
    3ba6:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
    3baa:	07 c0       	rjmp	.+14     	; 0x3bba <LCD_voidSetPosition+0x2c>

	}else if( Copy_u8Row == LCD_ROW_2  ){
    3bac:	89 81       	ldd	r24, Y+1	; 0x01
    3bae:	82 30       	cpi	r24, 0x02	; 2
    3bb0:	21 f4       	brne	.+8      	; 0x3bba <LCD_voidSetPosition+0x2c>

		LCD_invidSendCommend( (0x80) + 64 + ( Copy_u8Col - 1 ) );
    3bb2:	8a 81       	ldd	r24, Y+2	; 0x02
    3bb4:	81 54       	subi	r24, 0x41	; 65
    3bb6:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>

	}

}
    3bba:	0f 90       	pop	r0
    3bbc:	0f 90       	pop	r0
    3bbe:	cf 91       	pop	r28
    3bc0:	df 91       	pop	r29
    3bc2:	08 95       	ret

00003bc4 <LCD_voidSendINTNum>:

void LCD_voidSendINTNum(u32 copy_u32Num)
{
    3bc4:	df 93       	push	r29
    3bc6:	cf 93       	push	r28
    3bc8:	cd b7       	in	r28, 0x3d	; 61
    3bca:	de b7       	in	r29, 0x3e	; 62
    3bcc:	61 97       	sbiw	r28, 0x11	; 17
    3bce:	0f b6       	in	r0, 0x3f	; 63
    3bd0:	f8 94       	cli
    3bd2:	de bf       	out	0x3e, r29	; 62
    3bd4:	0f be       	out	0x3f, r0	; 63
    3bd6:	cd bf       	out	0x3d, r28	; 61
    3bd8:	6e 87       	std	Y+14, r22	; 0x0e
    3bda:	7f 87       	std	Y+15, r23	; 0x0f
    3bdc:	88 8b       	std	Y+16, r24	; 0x10
    3bde:	99 8b       	std	Y+17, r25	; 0x11

	u32 rev=0,rem, remmeber= copy_u32Num;
    3be0:	1a 86       	std	Y+10, r1	; 0x0a
    3be2:	1b 86       	std	Y+11, r1	; 0x0b
    3be4:	1c 86       	std	Y+12, r1	; 0x0c
    3be6:	1d 86       	std	Y+13, r1	; 0x0d
    3be8:	8e 85       	ldd	r24, Y+14	; 0x0e
    3bea:	9f 85       	ldd	r25, Y+15	; 0x0f
    3bec:	a8 89       	ldd	r26, Y+16	; 0x10
    3bee:	b9 89       	ldd	r27, Y+17	; 0x11
    3bf0:	8a 83       	std	Y+2, r24	; 0x02
    3bf2:	9b 83       	std	Y+3, r25	; 0x03
    3bf4:	ac 83       	std	Y+4, r26	; 0x04
    3bf6:	bd 83       	std	Y+5, r27	; 0x05
	u8 i;
	for(i=0; copy_u32Num!=0;i++)
    3bf8:	19 82       	std	Y+1, r1	; 0x01
    3bfa:	15 c0       	rjmp	.+42     	; 0x3c26 <LCD_voidSendINTNum+0x62>
	{
		copy_u32Num/=10;
    3bfc:	8e 85       	ldd	r24, Y+14	; 0x0e
    3bfe:	9f 85       	ldd	r25, Y+15	; 0x0f
    3c00:	a8 89       	ldd	r26, Y+16	; 0x10
    3c02:	b9 89       	ldd	r27, Y+17	; 0x11
    3c04:	2a e0       	ldi	r18, 0x0A	; 10
    3c06:	30 e0       	ldi	r19, 0x00	; 0
    3c08:	40 e0       	ldi	r20, 0x00	; 0
    3c0a:	50 e0       	ldi	r21, 0x00	; 0
    3c0c:	bc 01       	movw	r22, r24
    3c0e:	cd 01       	movw	r24, r26
    3c10:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    3c14:	da 01       	movw	r26, r20
    3c16:	c9 01       	movw	r24, r18
    3c18:	8e 87       	std	Y+14, r24	; 0x0e
    3c1a:	9f 87       	std	Y+15, r25	; 0x0f
    3c1c:	a8 8b       	std	Y+16, r26	; 0x10
    3c1e:	b9 8b       	std	Y+17, r27	; 0x11
void LCD_voidSendINTNum(u32 copy_u32Num)
{

	u32 rev=0,rem, remmeber= copy_u32Num;
	u8 i;
	for(i=0; copy_u32Num!=0;i++)
    3c20:	89 81       	ldd	r24, Y+1	; 0x01
    3c22:	8f 5f       	subi	r24, 0xFF	; 255
    3c24:	89 83       	std	Y+1, r24	; 0x01
    3c26:	8e 85       	ldd	r24, Y+14	; 0x0e
    3c28:	9f 85       	ldd	r25, Y+15	; 0x0f
    3c2a:	a8 89       	ldd	r26, Y+16	; 0x10
    3c2c:	b9 89       	ldd	r27, Y+17	; 0x11
    3c2e:	00 97       	sbiw	r24, 0x00	; 0
    3c30:	a1 05       	cpc	r26, r1
    3c32:	b1 05       	cpc	r27, r1
    3c34:	19 f7       	brne	.-58     	; 0x3bfc <LCD_voidSendINTNum+0x38>
	{
		copy_u32Num/=10;
	}
	copy_u32Num=remmeber;
    3c36:	8a 81       	ldd	r24, Y+2	; 0x02
    3c38:	9b 81       	ldd	r25, Y+3	; 0x03
    3c3a:	ac 81       	ldd	r26, Y+4	; 0x04
    3c3c:	bd 81       	ldd	r27, Y+5	; 0x05
    3c3e:	8e 87       	std	Y+14, r24	; 0x0e
    3c40:	9f 87       	std	Y+15, r25	; 0x0f
    3c42:	a8 8b       	std	Y+16, r26	; 0x10
    3c44:	b9 8b       	std	Y+17, r27	; 0x11
    3c46:	3e c0       	rjmp	.+124    	; 0x3cc4 <LCD_voidSendINTNum+0x100>
	while(copy_u32Num !=0)
	{
		rem=copy_u32Num%10;
    3c48:	8e 85       	ldd	r24, Y+14	; 0x0e
    3c4a:	9f 85       	ldd	r25, Y+15	; 0x0f
    3c4c:	a8 89       	ldd	r26, Y+16	; 0x10
    3c4e:	b9 89       	ldd	r27, Y+17	; 0x11
    3c50:	2a e0       	ldi	r18, 0x0A	; 10
    3c52:	30 e0       	ldi	r19, 0x00	; 0
    3c54:	40 e0       	ldi	r20, 0x00	; 0
    3c56:	50 e0       	ldi	r21, 0x00	; 0
    3c58:	bc 01       	movw	r22, r24
    3c5a:	cd 01       	movw	r24, r26
    3c5c:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    3c60:	dc 01       	movw	r26, r24
    3c62:	cb 01       	movw	r24, r22
    3c64:	8e 83       	std	Y+6, r24	; 0x06
    3c66:	9f 83       	std	Y+7, r25	; 0x07
    3c68:	a8 87       	std	Y+8, r26	; 0x08
    3c6a:	b9 87       	std	Y+9, r27	; 0x09
		rev=rev*10+rem;
    3c6c:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c6e:	9b 85       	ldd	r25, Y+11	; 0x0b
    3c70:	ac 85       	ldd	r26, Y+12	; 0x0c
    3c72:	bd 85       	ldd	r27, Y+13	; 0x0d
    3c74:	2a e0       	ldi	r18, 0x0A	; 10
    3c76:	30 e0       	ldi	r19, 0x00	; 0
    3c78:	40 e0       	ldi	r20, 0x00	; 0
    3c7a:	50 e0       	ldi	r21, 0x00	; 0
    3c7c:	bc 01       	movw	r22, r24
    3c7e:	cd 01       	movw	r24, r26
    3c80:	0e 94 ff 24 	call	0x49fe	; 0x49fe <__mulsi3>
    3c84:	9b 01       	movw	r18, r22
    3c86:	ac 01       	movw	r20, r24
    3c88:	8e 81       	ldd	r24, Y+6	; 0x06
    3c8a:	9f 81       	ldd	r25, Y+7	; 0x07
    3c8c:	a8 85       	ldd	r26, Y+8	; 0x08
    3c8e:	b9 85       	ldd	r27, Y+9	; 0x09
    3c90:	82 0f       	add	r24, r18
    3c92:	93 1f       	adc	r25, r19
    3c94:	a4 1f       	adc	r26, r20
    3c96:	b5 1f       	adc	r27, r21
    3c98:	8a 87       	std	Y+10, r24	; 0x0a
    3c9a:	9b 87       	std	Y+11, r25	; 0x0b
    3c9c:	ac 87       	std	Y+12, r26	; 0x0c
    3c9e:	bd 87       	std	Y+13, r27	; 0x0d
		copy_u32Num/=10;
    3ca0:	8e 85       	ldd	r24, Y+14	; 0x0e
    3ca2:	9f 85       	ldd	r25, Y+15	; 0x0f
    3ca4:	a8 89       	ldd	r26, Y+16	; 0x10
    3ca6:	b9 89       	ldd	r27, Y+17	; 0x11
    3ca8:	2a e0       	ldi	r18, 0x0A	; 10
    3caa:	30 e0       	ldi	r19, 0x00	; 0
    3cac:	40 e0       	ldi	r20, 0x00	; 0
    3cae:	50 e0       	ldi	r21, 0x00	; 0
    3cb0:	bc 01       	movw	r22, r24
    3cb2:	cd 01       	movw	r24, r26
    3cb4:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    3cb8:	da 01       	movw	r26, r20
    3cba:	c9 01       	movw	r24, r18
    3cbc:	8e 87       	std	Y+14, r24	; 0x0e
    3cbe:	9f 87       	std	Y+15, r25	; 0x0f
    3cc0:	a8 8b       	std	Y+16, r26	; 0x10
    3cc2:	b9 8b       	std	Y+17, r27	; 0x11
	for(i=0; copy_u32Num!=0;i++)
	{
		copy_u32Num/=10;
	}
	copy_u32Num=remmeber;
	while(copy_u32Num !=0)
    3cc4:	8e 85       	ldd	r24, Y+14	; 0x0e
    3cc6:	9f 85       	ldd	r25, Y+15	; 0x0f
    3cc8:	a8 89       	ldd	r26, Y+16	; 0x10
    3cca:	b9 89       	ldd	r27, Y+17	; 0x11
    3ccc:	00 97       	sbiw	r24, 0x00	; 0
    3cce:	a1 05       	cpc	r26, r1
    3cd0:	b1 05       	cpc	r27, r1
    3cd2:	09 f0       	breq	.+2      	; 0x3cd6 <LCD_voidSendINTNum+0x112>
    3cd4:	b9 cf       	rjmp	.-142    	; 0x3c48 <LCD_voidSendINTNum+0x84>
    3cd6:	2b c0       	rjmp	.+86     	; 0x3d2e <LCD_voidSendINTNum+0x16a>
		copy_u32Num/=10;
	}

	while(rev!=0 || i>0)
	{
		rem=rev%10;
    3cd8:	8a 85       	ldd	r24, Y+10	; 0x0a
    3cda:	9b 85       	ldd	r25, Y+11	; 0x0b
    3cdc:	ac 85       	ldd	r26, Y+12	; 0x0c
    3cde:	bd 85       	ldd	r27, Y+13	; 0x0d
    3ce0:	2a e0       	ldi	r18, 0x0A	; 10
    3ce2:	30 e0       	ldi	r19, 0x00	; 0
    3ce4:	40 e0       	ldi	r20, 0x00	; 0
    3ce6:	50 e0       	ldi	r21, 0x00	; 0
    3ce8:	bc 01       	movw	r22, r24
    3cea:	cd 01       	movw	r24, r26
    3cec:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    3cf0:	dc 01       	movw	r26, r24
    3cf2:	cb 01       	movw	r24, r22
    3cf4:	8e 83       	std	Y+6, r24	; 0x06
    3cf6:	9f 83       	std	Y+7, r25	; 0x07
    3cf8:	a8 87       	std	Y+8, r26	; 0x08
    3cfa:	b9 87       	std	Y+9, r27	; 0x09
		LCD_enuDisplayChar(rem+'0');
    3cfc:	8e 81       	ldd	r24, Y+6	; 0x06
    3cfe:	80 5d       	subi	r24, 0xD0	; 208
    3d00:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
		rev/=10;
    3d04:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d06:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d08:	ac 85       	ldd	r26, Y+12	; 0x0c
    3d0a:	bd 85       	ldd	r27, Y+13	; 0x0d
    3d0c:	2a e0       	ldi	r18, 0x0A	; 10
    3d0e:	30 e0       	ldi	r19, 0x00	; 0
    3d10:	40 e0       	ldi	r20, 0x00	; 0
    3d12:	50 e0       	ldi	r21, 0x00	; 0
    3d14:	bc 01       	movw	r22, r24
    3d16:	cd 01       	movw	r24, r26
    3d18:	0e 94 1e 25 	call	0x4a3c	; 0x4a3c <__udivmodsi4>
    3d1c:	da 01       	movw	r26, r20
    3d1e:	c9 01       	movw	r24, r18
    3d20:	8a 87       	std	Y+10, r24	; 0x0a
    3d22:	9b 87       	std	Y+11, r25	; 0x0b
    3d24:	ac 87       	std	Y+12, r26	; 0x0c
    3d26:	bd 87       	std	Y+13, r27	; 0x0d
		i--;
    3d28:	89 81       	ldd	r24, Y+1	; 0x01
    3d2a:	81 50       	subi	r24, 0x01	; 1
    3d2c:	89 83       	std	Y+1, r24	; 0x01
		rem=copy_u32Num%10;
		rev=rev*10+rem;
		copy_u32Num/=10;
	}

	while(rev!=0 || i>0)
    3d2e:	8a 85       	ldd	r24, Y+10	; 0x0a
    3d30:	9b 85       	ldd	r25, Y+11	; 0x0b
    3d32:	ac 85       	ldd	r26, Y+12	; 0x0c
    3d34:	bd 85       	ldd	r27, Y+13	; 0x0d
    3d36:	00 97       	sbiw	r24, 0x00	; 0
    3d38:	a1 05       	cpc	r26, r1
    3d3a:	b1 05       	cpc	r27, r1
    3d3c:	69 f6       	brne	.-102    	; 0x3cd8 <LCD_voidSendINTNum+0x114>
    3d3e:	89 81       	ldd	r24, Y+1	; 0x01
    3d40:	88 23       	and	r24, r24
    3d42:	51 f6       	brne	.-108    	; 0x3cd8 <LCD_voidSendINTNum+0x114>
		rev/=10;
		i--;

	}

}
    3d44:	61 96       	adiw	r28, 0x11	; 17
    3d46:	0f b6       	in	r0, 0x3f	; 63
    3d48:	f8 94       	cli
    3d4a:	de bf       	out	0x3e, r29	; 62
    3d4c:	0f be       	out	0x3f, r0	; 63
    3d4e:	cd bf       	out	0x3d, r28	; 61
    3d50:	cf 91       	pop	r28
    3d52:	df 91       	pop	r29
    3d54:	08 95       	ret

00003d56 <LCD_voidSendExtraChar>:



void LCD_voidSendExtraChar(u8 *copy_u8Parr,u8 copy_u8CharNum,u8 copy_u8position,u8 copy_u8EntryMode)
{
    3d56:	df 93       	push	r29
    3d58:	cf 93       	push	r28
    3d5a:	cd b7       	in	r28, 0x3d	; 61
    3d5c:	de b7       	in	r29, 0x3e	; 62
    3d5e:	27 97       	sbiw	r28, 0x07	; 7
    3d60:	0f b6       	in	r0, 0x3f	; 63
    3d62:	f8 94       	cli
    3d64:	de bf       	out	0x3e, r29	; 62
    3d66:	0f be       	out	0x3f, r0	; 63
    3d68:	cd bf       	out	0x3d, r28	; 61
    3d6a:	9c 83       	std	Y+4, r25	; 0x04
    3d6c:	8b 83       	std	Y+3, r24	; 0x03
    3d6e:	6d 83       	std	Y+5, r22	; 0x05
    3d70:	4e 83       	std	Y+6, r20	; 0x06
    3d72:	2f 83       	std	Y+7, r18	; 0x07
	DIO_ErrorStatus LOC_enumState  = DIO_OK;
    3d74:	81 e0       	ldi	r24, 0x01	; 1
    3d76:	8a 83       	std	Y+2, r24	; 0x02

	if(copy_u8CharNum<=8){
    3d78:	8d 81       	ldd	r24, Y+5	; 0x05
    3d7a:	89 30       	cpi	r24, 0x09	; 9
    3d7c:	08 f0       	brcs	.+2      	; 0x3d80 <LCD_voidSendExtraChar+0x2a>
    3d7e:	42 c0       	rjmp	.+132    	; 0x3e04 <LCD_voidSendExtraChar+0xae>
		//go to CGRAM
	LCD_invidSendCommend(0x40);
    3d80:	80 e4       	ldi	r24, 0x40	; 64
    3d82:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>

	u8 LOC_u8Iterator;
	DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_HIGH);
    3d86:	83 e0       	ldi	r24, 0x03	; 3
    3d88:	60 e0       	ldi	r22, 0x00	; 0
    3d8a:	41 e0       	ldi	r20, 0x01	; 1
    3d8c:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
	//Draw Character
	for(LOC_u8Iterator=0;LOC_u8Iterator<(copy_u8CharNum*8);LOC_u8Iterator++)
    3d90:	19 82       	std	Y+1, r1	; 0x01
    3d92:	0e c0       	rjmp	.+28     	; 0x3db0 <LCD_voidSendExtraChar+0x5a>
	{
		LCD_voidSendData(copy_u8Parr[LOC_u8Iterator]);
    3d94:	89 81       	ldd	r24, Y+1	; 0x01
    3d96:	28 2f       	mov	r18, r24
    3d98:	30 e0       	ldi	r19, 0x00	; 0
    3d9a:	8b 81       	ldd	r24, Y+3	; 0x03
    3d9c:	9c 81       	ldd	r25, Y+4	; 0x04
    3d9e:	fc 01       	movw	r30, r24
    3da0:	e2 0f       	add	r30, r18
    3da2:	f3 1f       	adc	r31, r19
    3da4:	80 81       	ld	r24, Z
    3da6:	0e 94 c3 1b 	call	0x3786	; 0x3786 <LCD_voidSendData>
	LCD_invidSendCommend(0x40);

	u8 LOC_u8Iterator;
	DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_HIGH);
	//Draw Character
	for(LOC_u8Iterator=0;LOC_u8Iterator<(copy_u8CharNum*8);LOC_u8Iterator++)
    3daa:	89 81       	ldd	r24, Y+1	; 0x01
    3dac:	8f 5f       	subi	r24, 0xFF	; 255
    3dae:	89 83       	std	Y+1, r24	; 0x01
    3db0:	89 81       	ldd	r24, Y+1	; 0x01
    3db2:	28 2f       	mov	r18, r24
    3db4:	30 e0       	ldi	r19, 0x00	; 0
    3db6:	8d 81       	ldd	r24, Y+5	; 0x05
    3db8:	88 2f       	mov	r24, r24
    3dba:	90 e0       	ldi	r25, 0x00	; 0
    3dbc:	88 0f       	add	r24, r24
    3dbe:	99 1f       	adc	r25, r25
    3dc0:	88 0f       	add	r24, r24
    3dc2:	99 1f       	adc	r25, r25
    3dc4:	88 0f       	add	r24, r24
    3dc6:	99 1f       	adc	r25, r25
    3dc8:	28 17       	cp	r18, r24
    3dca:	39 07       	cpc	r19, r25
    3dcc:	1c f3       	brlt	.-58     	; 0x3d94 <LCD_voidSendExtraChar+0x3e>
	{
		LCD_voidSendData(copy_u8Parr[LOC_u8Iterator]);
	}
	if(copy_u8EntryMode==0x04)
    3dce:	8f 81       	ldd	r24, Y+7	; 0x07
    3dd0:	84 30       	cpi	r24, 0x04	; 4
    3dd2:	31 f4       	brne	.+12     	; 0x3de0 <LCD_voidSendExtraChar+0x8a>
	{
         //return to DDRAM
		LCD_invidSendCommend(copy_u8position);
    3dd4:	8e 81       	ldd	r24, Y+6	; 0x06
    3dd6:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
		LCD_invidSendCommend(copy_u8EntryMode);
    3dda:	8f 81       	ldd	r24, Y+7	; 0x07
    3ddc:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>


	}
	for(LOC_u8Iterator=0;LOC_u8Iterator<copy_u8CharNum;LOC_u8Iterator++)
    3de0:	19 82       	std	Y+1, r1	; 0x01
    3de2:	0b c0       	rjmp	.+22     	; 0x3dfa <LCD_voidSendExtraChar+0xa4>
		{
		DIO_enumSetPinValue(RS_PORT, RS_PIN,DIO_HIGH);
    3de4:	83 e0       	ldi	r24, 0x03	; 3
    3de6:	60 e0       	ldi	r22, 0x00	; 0
    3de8:	41 e0       	ldi	r20, 0x01	; 1
    3dea:	0e 94 c3 17 	call	0x2f86	; 0x2f86 <DIO_enumSetPinValue>
		LCD_voidSendData(LOC_u8Iterator);
    3dee:	89 81       	ldd	r24, Y+1	; 0x01
    3df0:	0e 94 c3 1b 	call	0x3786	; 0x3786 <LCD_voidSendData>
		LCD_invidSendCommend(copy_u8position);
		LCD_invidSendCommend(copy_u8EntryMode);


	}
	for(LOC_u8Iterator=0;LOC_u8Iterator<copy_u8CharNum;LOC_u8Iterator++)
    3df4:	89 81       	ldd	r24, Y+1	; 0x01
    3df6:	8f 5f       	subi	r24, 0xFF	; 255
    3df8:	89 83       	std	Y+1, r24	; 0x01
    3dfa:	99 81       	ldd	r25, Y+1	; 0x01
    3dfc:	8d 81       	ldd	r24, Y+5	; 0x05
    3dfe:	98 17       	cp	r25, r24
    3e00:	88 f3       	brcs	.-30     	; 0x3de4 <LCD_voidSendExtraChar+0x8e>
    3e02:	01 c0       	rjmp	.+2      	; 0x3e06 <LCD_voidSendExtraChar+0xb0>
		}

	}
	else
	{
		 LOC_enumState  = DIO_NOK;
    3e04:	1a 82       	std	Y+2, r1	; 0x02

	}


}
    3e06:	27 96       	adiw	r28, 0x07	; 7
    3e08:	0f b6       	in	r0, 0x3f	; 63
    3e0a:	f8 94       	cli
    3e0c:	de bf       	out	0x3e, r29	; 62
    3e0e:	0f be       	out	0x3f, r0	; 63
    3e10:	cd bf       	out	0x3d, r28	; 61
    3e12:	cf 91       	pop	r28
    3e14:	df 91       	pop	r29
    3e16:	08 95       	ret

00003e18 <LCD_voidSendFloatNumber>:


void LCD_voidSendFloatNumber(f64 Copy_f32Number)
{
    3e18:	2f 92       	push	r2
    3e1a:	3f 92       	push	r3
    3e1c:	4f 92       	push	r4
    3e1e:	5f 92       	push	r5
    3e20:	6f 92       	push	r6
    3e22:	7f 92       	push	r7
    3e24:	8f 92       	push	r8
    3e26:	9f 92       	push	r9
    3e28:	af 92       	push	r10
    3e2a:	bf 92       	push	r11
    3e2c:	cf 92       	push	r12
    3e2e:	df 92       	push	r13
    3e30:	ef 92       	push	r14
    3e32:	ff 92       	push	r15
    3e34:	0f 93       	push	r16
    3e36:	1f 93       	push	r17
    3e38:	df 93       	push	r29
    3e3a:	cf 93       	push	r28
    3e3c:	cd b7       	in	r28, 0x3d	; 61
    3e3e:	de b7       	in	r29, 0x3e	; 62
    3e40:	ef 97       	sbiw	r28, 0x3f	; 63
    3e42:	0f b6       	in	r0, 0x3f	; 63
    3e44:	f8 94       	cli
    3e46:	de bf       	out	0x3e, r29	; 62
    3e48:	0f be       	out	0x3f, r0	; 63
    3e4a:	cd bf       	out	0x3d, r28	; 61
    3e4c:	69 87       	std	Y+9, r22	; 0x09
    3e4e:	7a 87       	std	Y+10, r23	; 0x0a
    3e50:	8b 87       	std	Y+11, r24	; 0x0b
    3e52:	9c 87       	std	Y+12, r25	; 0x0c
	// Cast the float Number to Integer value (ex: 25.6942325 --> 25)
	LCD_voidSendINTNum((u64)Copy_f32Number ); // Send the integer Number to the LCD
    3e54:	69 85       	ldd	r22, Y+9	; 0x09
    3e56:	7a 85       	ldd	r23, Y+10	; 0x0a
    3e58:	8b 85       	ldd	r24, Y+11	; 0x0b
    3e5a:	9c 85       	ldd	r25, Y+12	; 0x0c
    3e5c:	0e 94 6d 00 	call	0xda	; 0xda <__fixunssfdi>
    3e60:	a2 2e       	mov	r10, r18
    3e62:	b3 2e       	mov	r11, r19
    3e64:	c4 2e       	mov	r12, r20
    3e66:	d5 2e       	mov	r13, r21
    3e68:	e6 2e       	mov	r14, r22
    3e6a:	f7 2e       	mov	r15, r23
    3e6c:	08 2f       	mov	r16, r24
    3e6e:	19 2f       	mov	r17, r25
    3e70:	d6 01       	movw	r26, r12
    3e72:	c5 01       	movw	r24, r10
    3e74:	bc 01       	movw	r22, r24
    3e76:	cd 01       	movw	r24, r26
    3e78:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
	LCD_enuDisplayChar('.'); // Send the decimal point
    3e7c:	8e e2       	ldi	r24, 0x2E	; 46
    3e7e:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>

	// Multiply the Float Number by 10^6 so the decimal number becomes part of the number
	//(ex: 25.6942325--> 25694232.5
	// save the result as integer"saved in u64" (ex: 25.6942325--> 25694232
	u64 Local_u64tempNumber = Copy_f32Number*1000000;
    3e82:	69 85       	ldd	r22, Y+9	; 0x09
    3e84:	7a 85       	ldd	r23, Y+10	; 0x0a
    3e86:	8b 85       	ldd	r24, Y+11	; 0x0b
    3e88:	9c 85       	ldd	r25, Y+12	; 0x0c
    3e8a:	20 e0       	ldi	r18, 0x00	; 0
    3e8c:	34 e2       	ldi	r19, 0x24	; 36
    3e8e:	44 e7       	ldi	r20, 0x74	; 116
    3e90:	59 e4       	ldi	r21, 0x49	; 73
    3e92:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    3e96:	dc 01       	movw	r26, r24
    3e98:	cb 01       	movw	r24, r22
    3e9a:	bc 01       	movw	r22, r24
    3e9c:	cd 01       	movw	r24, r26
    3e9e:	0e 94 6d 00 	call	0xda	; 0xda <__fixunssfdi>
    3ea2:	a2 2e       	mov	r10, r18
    3ea4:	b3 2e       	mov	r11, r19
    3ea6:	c4 2e       	mov	r12, r20
    3ea8:	d5 2e       	mov	r13, r21
    3eaa:	e6 2e       	mov	r14, r22
    3eac:	f7 2e       	mov	r15, r23
    3eae:	08 2f       	mov	r16, r24
    3eb0:	19 2f       	mov	r17, r25
    3eb2:	a9 82       	std	Y+1, r10	; 0x01
    3eb4:	ba 82       	std	Y+2, r11	; 0x02
    3eb6:	cb 82       	std	Y+3, r12	; 0x03
    3eb8:	dc 82       	std	Y+4, r13	; 0x04
    3eba:	ed 82       	std	Y+5, r14	; 0x05
    3ebc:	fe 82       	std	Y+6, r15	; 0x06
    3ebe:	0f 83       	std	Y+7, r16	; 0x07
    3ec0:	18 87       	std	Y+8, r17	; 0x08

	// if the first digit is greater than or equal 5
	if( Local_u64tempNumber%10 >=5 )
    3ec2:	a9 80       	ldd	r10, Y+1	; 0x01
    3ec4:	ba 80       	ldd	r11, Y+2	; 0x02
    3ec6:	cb 80       	ldd	r12, Y+3	; 0x03
    3ec8:	dc 80       	ldd	r13, Y+4	; 0x04
    3eca:	ed 80       	ldd	r14, Y+5	; 0x05
    3ecc:	fe 80       	ldd	r15, Y+6	; 0x06
    3ece:	0f 81       	ldd	r16, Y+7	; 0x07
    3ed0:	18 85       	ldd	r17, Y+8	; 0x08
    3ed2:	2a 2d       	mov	r18, r10
    3ed4:	3b 2d       	mov	r19, r11
    3ed6:	4c 2d       	mov	r20, r12
    3ed8:	5d 2d       	mov	r21, r13
    3eda:	6e 2d       	mov	r22, r14
    3edc:	7f 2d       	mov	r23, r15
    3ede:	80 2f       	mov	r24, r16
    3ee0:	91 2f       	mov	r25, r17
    3ee2:	0f 2e       	mov	r0, r31
    3ee4:	fa e0       	ldi	r31, 0x0A	; 10
    3ee6:	af 2e       	mov	r10, r31
    3ee8:	f0 2d       	mov	r31, r0
    3eea:	bb 24       	eor	r11, r11
    3eec:	cc 24       	eor	r12, r12
    3eee:	dd 24       	eor	r13, r13
    3ef0:	ee 24       	eor	r14, r14
    3ef2:	ff 24       	eor	r15, r15
    3ef4:	00 e0       	ldi	r16, 0x00	; 0
    3ef6:	10 e0       	ldi	r17, 0x00	; 0
    3ef8:	0e 94 8a 07 	call	0xf14	; 0xf14 <__umoddi3>
    3efc:	a2 2e       	mov	r10, r18
    3efe:	b3 2e       	mov	r11, r19
    3f00:	c4 2e       	mov	r12, r20
    3f02:	d5 2e       	mov	r13, r21
    3f04:	e6 2e       	mov	r14, r22
    3f06:	f7 2e       	mov	r15, r23
    3f08:	08 2f       	mov	r16, r24
    3f0a:	19 2f       	mov	r17, r25
    3f0c:	ad 8a       	std	Y+21, r10	; 0x15
    3f0e:	be 8a       	std	Y+22, r11	; 0x16
    3f10:	cf 8a       	std	Y+23, r12	; 0x17
    3f12:	d8 8e       	std	Y+24, r13	; 0x18
    3f14:	e9 8e       	std	Y+25, r14	; 0x19
    3f16:	fa 8e       	std	Y+26, r15	; 0x1a
    3f18:	0b 8f       	std	Y+27, r16	; 0x1b
    3f1a:	1c 8f       	std	Y+28, r17	; 0x1c
    3f1c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3f1e:	88 23       	and	r24, r24
    3f20:	91 f5       	brne	.+100    	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f22:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f24:	99 23       	and	r25, r25
    3f26:	09 f0       	breq	.+2      	; 0x3f2a <LCD_voidSendFloatNumber+0x112>
    3f28:	57 c1       	rjmp	.+686    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f2a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f2c:	88 23       	and	r24, r24
    3f2e:	59 f5       	brne	.+86     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f30:	9b 8d       	ldd	r25, Y+27	; 0x1b
    3f32:	99 23       	and	r25, r25
    3f34:	09 f0       	breq	.+2      	; 0x3f38 <LCD_voidSendFloatNumber+0x120>
    3f36:	50 c1       	rjmp	.+672    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f38:	8a 8d       	ldd	r24, Y+26	; 0x1a
    3f3a:	88 23       	and	r24, r24
    3f3c:	21 f5       	brne	.+72     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f3e:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3f40:	99 23       	and	r25, r25
    3f42:	09 f0       	breq	.+2      	; 0x3f46 <LCD_voidSendFloatNumber+0x12e>
    3f44:	49 c1       	rjmp	.+658    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f46:	89 8d       	ldd	r24, Y+25	; 0x19
    3f48:	88 23       	and	r24, r24
    3f4a:	e9 f4       	brne	.+58     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f4c:	99 8d       	ldd	r25, Y+25	; 0x19
    3f4e:	99 23       	and	r25, r25
    3f50:	09 f0       	breq	.+2      	; 0x3f54 <LCD_voidSendFloatNumber+0x13c>
    3f52:	42 c1       	rjmp	.+644    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f54:	88 8d       	ldd	r24, Y+24	; 0x18
    3f56:	88 23       	and	r24, r24
    3f58:	b1 f4       	brne	.+44     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f5a:	98 8d       	ldd	r25, Y+24	; 0x18
    3f5c:	99 23       	and	r25, r25
    3f5e:	09 f0       	breq	.+2      	; 0x3f62 <LCD_voidSendFloatNumber+0x14a>
    3f60:	3b c1       	rjmp	.+630    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f62:	8f 89       	ldd	r24, Y+23	; 0x17
    3f64:	88 23       	and	r24, r24
    3f66:	79 f4       	brne	.+30     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f68:	9f 89       	ldd	r25, Y+23	; 0x17
    3f6a:	99 23       	and	r25, r25
    3f6c:	09 f0       	breq	.+2      	; 0x3f70 <LCD_voidSendFloatNumber+0x158>
    3f6e:	34 c1       	rjmp	.+616    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f70:	8e 89       	ldd	r24, Y+22	; 0x16
    3f72:	88 23       	and	r24, r24
    3f74:	41 f4       	brne	.+16     	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f76:	9e 89       	ldd	r25, Y+22	; 0x16
    3f78:	99 23       	and	r25, r25
    3f7a:	09 f0       	breq	.+2      	; 0x3f7e <LCD_voidSendFloatNumber+0x166>
    3f7c:	2d c1       	rjmp	.+602    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
    3f7e:	8d 89       	ldd	r24, Y+21	; 0x15
    3f80:	85 30       	cpi	r24, 0x05	; 5
    3f82:	08 f4       	brcc	.+2      	; 0x3f86 <LCD_voidSendFloatNumber+0x16e>
    3f84:	29 c1       	rjmp	.+594    	; 0x41d8 <LCD_voidSendFloatNumber+0x3c0>
	{
		// then divide the number by 10  (ex : 25694236 ---> 2569423 )
		// add 1 to the number to round the number up
		//then module the number by 100000  (ex : 2569423 ---> 69424 )
		LCD_voidSendINTNum((u64)((( Local_u64tempNumber/10)+1) % 100000));
    3f86:	a9 80       	ldd	r10, Y+1	; 0x01
    3f88:	ba 80       	ldd	r11, Y+2	; 0x02
    3f8a:	cb 80       	ldd	r12, Y+3	; 0x03
    3f8c:	dc 80       	ldd	r13, Y+4	; 0x04
    3f8e:	ed 80       	ldd	r14, Y+5	; 0x05
    3f90:	fe 80       	ldd	r15, Y+6	; 0x06
    3f92:	0f 81       	ldd	r16, Y+7	; 0x07
    3f94:	18 85       	ldd	r17, Y+8	; 0x08
    3f96:	2a 2d       	mov	r18, r10
    3f98:	3b 2d       	mov	r19, r11
    3f9a:	4c 2d       	mov	r20, r12
    3f9c:	5d 2d       	mov	r21, r13
    3f9e:	6e 2d       	mov	r22, r14
    3fa0:	7f 2d       	mov	r23, r15
    3fa2:	80 2f       	mov	r24, r16
    3fa4:	91 2f       	mov	r25, r17
    3fa6:	0f 2e       	mov	r0, r31
    3fa8:	fa e0       	ldi	r31, 0x0A	; 10
    3faa:	af 2e       	mov	r10, r31
    3fac:	f0 2d       	mov	r31, r0
    3fae:	bb 24       	eor	r11, r11
    3fb0:	cc 24       	eor	r12, r12
    3fb2:	dd 24       	eor	r13, r13
    3fb4:	ee 24       	eor	r14, r14
    3fb6:	ff 24       	eor	r15, r15
    3fb8:	00 e0       	ldi	r16, 0x00	; 0
    3fba:	10 e0       	ldi	r17, 0x00	; 0
    3fbc:	0e 94 15 01 	call	0x22a	; 0x22a <__udivdi3>
    3fc0:	a2 2e       	mov	r10, r18
    3fc2:	b3 2e       	mov	r11, r19
    3fc4:	c4 2e       	mov	r12, r20
    3fc6:	d5 2e       	mov	r13, r21
    3fc8:	e6 2e       	mov	r14, r22
    3fca:	f7 2e       	mov	r15, r23
    3fcc:	08 2f       	mov	r16, r24
    3fce:	19 2f       	mov	r17, r25
    3fd0:	ad 86       	std	Y+13, r10	; 0x0d
    3fd2:	be 86       	std	Y+14, r11	; 0x0e
    3fd4:	cf 86       	std	Y+15, r12	; 0x0f
    3fd6:	d8 8a       	std	Y+16, r13	; 0x10
    3fd8:	e9 8a       	std	Y+17, r14	; 0x11
    3fda:	fa 8a       	std	Y+18, r15	; 0x12
    3fdc:	0b 8b       	std	Y+19, r16	; 0x13
    3fde:	1c 8b       	std	Y+20, r17	; 0x14
    3fe0:	91 e0       	ldi	r25, 0x01	; 1
    3fe2:	9d 8f       	std	Y+29, r25	; 0x1d
    3fe4:	1e 8e       	std	Y+30, r1	; 0x1e
    3fe6:	1f 8e       	std	Y+31, r1	; 0x1f
    3fe8:	18 a2       	std	Y+32, r1	; 0x20
    3fea:	19 a2       	std	Y+33, r1	; 0x21
    3fec:	1a a2       	std	Y+34, r1	; 0x22
    3fee:	1b a2       	std	Y+35, r1	; 0x23
    3ff0:	1c a2       	std	Y+36, r1	; 0x24
    3ff2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ff4:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3ff6:	89 0f       	add	r24, r25
    3ff8:	8d a3       	std	Y+37, r24	; 0x25
    3ffa:	81 e0       	ldi	r24, 0x01	; 1
    3ffc:	8d a7       	std	Y+45, r24	; 0x2d
    3ffe:	9d a1       	ldd	r25, Y+37	; 0x25
    4000:	8d 85       	ldd	r24, Y+13	; 0x0d
    4002:	98 17       	cp	r25, r24
    4004:	08 f0       	brcs	.+2      	; 0x4008 <LCD_voidSendFloatNumber+0x1f0>
    4006:	1d a6       	std	Y+45, r1	; 0x2d
    4008:	9e 85       	ldd	r25, Y+14	; 0x0e
    400a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    400c:	98 0f       	add	r25, r24
    400e:	9e a3       	std	Y+38, r25	; 0x26
    4010:	91 e0       	ldi	r25, 0x01	; 1
    4012:	9e a7       	std	Y+46, r25	; 0x2e
    4014:	8e a1       	ldd	r24, Y+38	; 0x26
    4016:	9e 85       	ldd	r25, Y+14	; 0x0e
    4018:	89 17       	cp	r24, r25
    401a:	08 f0       	brcs	.+2      	; 0x401e <LCD_voidSendFloatNumber+0x206>
    401c:	1e a6       	std	Y+46, r1	; 0x2e
    401e:	8d a5       	ldd	r24, Y+45	; 0x2d
    4020:	9e a1       	ldd	r25, Y+38	; 0x26
    4022:	89 0f       	add	r24, r25
    4024:	8f a7       	std	Y+47, r24	; 0x2f
    4026:	81 e0       	ldi	r24, 0x01	; 1
    4028:	88 ab       	std	Y+48, r24	; 0x30
    402a:	9f a5       	ldd	r25, Y+47	; 0x2f
    402c:	8e a1       	ldd	r24, Y+38	; 0x26
    402e:	98 17       	cp	r25, r24
    4030:	08 f0       	brcs	.+2      	; 0x4034 <LCD_voidSendFloatNumber+0x21c>
    4032:	18 aa       	std	Y+48, r1	; 0x30
    4034:	9e a5       	ldd	r25, Y+46	; 0x2e
    4036:	88 a9       	ldd	r24, Y+48	; 0x30
    4038:	98 2b       	or	r25, r24
    403a:	9e a7       	std	Y+46, r25	; 0x2e
    403c:	9f a5       	ldd	r25, Y+47	; 0x2f
    403e:	9e a3       	std	Y+38, r25	; 0x26
    4040:	8f 85       	ldd	r24, Y+15	; 0x0f
    4042:	9f 8d       	ldd	r25, Y+31	; 0x1f
    4044:	89 0f       	add	r24, r25
    4046:	8f a3       	std	Y+39, r24	; 0x27
    4048:	81 e0       	ldi	r24, 0x01	; 1
    404a:	89 ab       	std	Y+49, r24	; 0x31
    404c:	9f a1       	ldd	r25, Y+39	; 0x27
    404e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4050:	98 17       	cp	r25, r24
    4052:	08 f0       	brcs	.+2      	; 0x4056 <LCD_voidSendFloatNumber+0x23e>
    4054:	19 aa       	std	Y+49, r1	; 0x31
    4056:	9e a5       	ldd	r25, Y+46	; 0x2e
    4058:	8f a1       	ldd	r24, Y+39	; 0x27
    405a:	98 0f       	add	r25, r24
    405c:	9a ab       	std	Y+50, r25	; 0x32
    405e:	91 e0       	ldi	r25, 0x01	; 1
    4060:	9b ab       	std	Y+51, r25	; 0x33
    4062:	8a a9       	ldd	r24, Y+50	; 0x32
    4064:	9f a1       	ldd	r25, Y+39	; 0x27
    4066:	89 17       	cp	r24, r25
    4068:	08 f0       	brcs	.+2      	; 0x406c <LCD_voidSendFloatNumber+0x254>
    406a:	1b aa       	std	Y+51, r1	; 0x33
    406c:	89 a9       	ldd	r24, Y+49	; 0x31
    406e:	9b a9       	ldd	r25, Y+51	; 0x33
    4070:	89 2b       	or	r24, r25
    4072:	89 ab       	std	Y+49, r24	; 0x31
    4074:	8a a9       	ldd	r24, Y+50	; 0x32
    4076:	8f a3       	std	Y+39, r24	; 0x27
    4078:	98 89       	ldd	r25, Y+16	; 0x10
    407a:	88 a1       	ldd	r24, Y+32	; 0x20
    407c:	98 0f       	add	r25, r24
    407e:	98 a7       	std	Y+40, r25	; 0x28
    4080:	91 e0       	ldi	r25, 0x01	; 1
    4082:	9c ab       	std	Y+52, r25	; 0x34
    4084:	88 a5       	ldd	r24, Y+40	; 0x28
    4086:	98 89       	ldd	r25, Y+16	; 0x10
    4088:	89 17       	cp	r24, r25
    408a:	08 f0       	brcs	.+2      	; 0x408e <LCD_voidSendFloatNumber+0x276>
    408c:	1c aa       	std	Y+52, r1	; 0x34
    408e:	89 a9       	ldd	r24, Y+49	; 0x31
    4090:	98 a5       	ldd	r25, Y+40	; 0x28
    4092:	89 0f       	add	r24, r25
    4094:	8d ab       	std	Y+53, r24	; 0x35
    4096:	81 e0       	ldi	r24, 0x01	; 1
    4098:	8e ab       	std	Y+54, r24	; 0x36
    409a:	9d a9       	ldd	r25, Y+53	; 0x35
    409c:	88 a5       	ldd	r24, Y+40	; 0x28
    409e:	98 17       	cp	r25, r24
    40a0:	08 f0       	brcs	.+2      	; 0x40a4 <LCD_voidSendFloatNumber+0x28c>
    40a2:	1e aa       	std	Y+54, r1	; 0x36
    40a4:	9c a9       	ldd	r25, Y+52	; 0x34
    40a6:	8e a9       	ldd	r24, Y+54	; 0x36
    40a8:	98 2b       	or	r25, r24
    40aa:	9c ab       	std	Y+52, r25	; 0x34
    40ac:	9d a9       	ldd	r25, Y+53	; 0x35
    40ae:	98 a7       	std	Y+40, r25	; 0x28
    40b0:	89 89       	ldd	r24, Y+17	; 0x11
    40b2:	99 a1       	ldd	r25, Y+33	; 0x21
    40b4:	89 0f       	add	r24, r25
    40b6:	89 a7       	std	Y+41, r24	; 0x29
    40b8:	81 e0       	ldi	r24, 0x01	; 1
    40ba:	8f ab       	std	Y+55, r24	; 0x37
    40bc:	99 a5       	ldd	r25, Y+41	; 0x29
    40be:	89 89       	ldd	r24, Y+17	; 0x11
    40c0:	98 17       	cp	r25, r24
    40c2:	08 f0       	brcs	.+2      	; 0x40c6 <LCD_voidSendFloatNumber+0x2ae>
    40c4:	1f aa       	std	Y+55, r1	; 0x37
    40c6:	9c a9       	ldd	r25, Y+52	; 0x34
    40c8:	89 a5       	ldd	r24, Y+41	; 0x29
    40ca:	98 0f       	add	r25, r24
    40cc:	98 af       	std	Y+56, r25	; 0x38
    40ce:	91 e0       	ldi	r25, 0x01	; 1
    40d0:	99 af       	std	Y+57, r25	; 0x39
    40d2:	88 ad       	ldd	r24, Y+56	; 0x38
    40d4:	99 a5       	ldd	r25, Y+41	; 0x29
    40d6:	89 17       	cp	r24, r25
    40d8:	08 f0       	brcs	.+2      	; 0x40dc <LCD_voidSendFloatNumber+0x2c4>
    40da:	19 ae       	std	Y+57, r1	; 0x39
    40dc:	8f a9       	ldd	r24, Y+55	; 0x37
    40de:	99 ad       	ldd	r25, Y+57	; 0x39
    40e0:	89 2b       	or	r24, r25
    40e2:	8f ab       	std	Y+55, r24	; 0x37
    40e4:	88 ad       	ldd	r24, Y+56	; 0x38
    40e6:	89 a7       	std	Y+41, r24	; 0x29
    40e8:	9a 89       	ldd	r25, Y+18	; 0x12
    40ea:	8a a1       	ldd	r24, Y+34	; 0x22
    40ec:	98 0f       	add	r25, r24
    40ee:	9a a7       	std	Y+42, r25	; 0x2a
    40f0:	91 e0       	ldi	r25, 0x01	; 1
    40f2:	9a af       	std	Y+58, r25	; 0x3a
    40f4:	8a a5       	ldd	r24, Y+42	; 0x2a
    40f6:	9a 89       	ldd	r25, Y+18	; 0x12
    40f8:	89 17       	cp	r24, r25
    40fa:	08 f0       	brcs	.+2      	; 0x40fe <LCD_voidSendFloatNumber+0x2e6>
    40fc:	1a ae       	std	Y+58, r1	; 0x3a
    40fe:	8f a9       	ldd	r24, Y+55	; 0x37
    4100:	9a a5       	ldd	r25, Y+42	; 0x2a
    4102:	89 0f       	add	r24, r25
    4104:	8b af       	std	Y+59, r24	; 0x3b
    4106:	81 e0       	ldi	r24, 0x01	; 1
    4108:	8c af       	std	Y+60, r24	; 0x3c
    410a:	9b ad       	ldd	r25, Y+59	; 0x3b
    410c:	8a a5       	ldd	r24, Y+42	; 0x2a
    410e:	98 17       	cp	r25, r24
    4110:	08 f0       	brcs	.+2      	; 0x4114 <LCD_voidSendFloatNumber+0x2fc>
    4112:	1c ae       	std	Y+60, r1	; 0x3c
    4114:	9a ad       	ldd	r25, Y+58	; 0x3a
    4116:	8c ad       	ldd	r24, Y+60	; 0x3c
    4118:	98 2b       	or	r25, r24
    411a:	9a af       	std	Y+58, r25	; 0x3a
    411c:	9b ad       	ldd	r25, Y+59	; 0x3b
    411e:	9a a7       	std	Y+42, r25	; 0x2a
    4120:	8b 89       	ldd	r24, Y+19	; 0x13
    4122:	9b a1       	ldd	r25, Y+35	; 0x23
    4124:	89 0f       	add	r24, r25
    4126:	8b a7       	std	Y+43, r24	; 0x2b
    4128:	81 e0       	ldi	r24, 0x01	; 1
    412a:	8d af       	std	Y+61, r24	; 0x3d
    412c:	9b a5       	ldd	r25, Y+43	; 0x2b
    412e:	8b 89       	ldd	r24, Y+19	; 0x13
    4130:	98 17       	cp	r25, r24
    4132:	08 f0       	brcs	.+2      	; 0x4136 <LCD_voidSendFloatNumber+0x31e>
    4134:	1d ae       	std	Y+61, r1	; 0x3d
    4136:	9a ad       	ldd	r25, Y+58	; 0x3a
    4138:	8b a5       	ldd	r24, Y+43	; 0x2b
    413a:	98 0f       	add	r25, r24
    413c:	9e af       	std	Y+62, r25	; 0x3e
    413e:	91 e0       	ldi	r25, 0x01	; 1
    4140:	9f af       	std	Y+63, r25	; 0x3f
    4142:	8e ad       	ldd	r24, Y+62	; 0x3e
    4144:	9b a5       	ldd	r25, Y+43	; 0x2b
    4146:	89 17       	cp	r24, r25
    4148:	08 f0       	brcs	.+2      	; 0x414c <LCD_voidSendFloatNumber+0x334>
    414a:	1f ae       	std	Y+63, r1	; 0x3f
    414c:	8d ad       	ldd	r24, Y+61	; 0x3d
    414e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4150:	89 2b       	or	r24, r25
    4152:	8d af       	std	Y+61, r24	; 0x3d
    4154:	8e ad       	ldd	r24, Y+62	; 0x3e
    4156:	8b a7       	std	Y+43, r24	; 0x2b
    4158:	9c 89       	ldd	r25, Y+20	; 0x14
    415a:	8c a1       	ldd	r24, Y+36	; 0x24
    415c:	98 0f       	add	r25, r24
    415e:	9c a7       	std	Y+44, r25	; 0x2c
    4160:	8d ad       	ldd	r24, Y+61	; 0x3d
    4162:	9c a5       	ldd	r25, Y+44	; 0x2c
    4164:	89 0f       	add	r24, r25
    4166:	8c a7       	std	Y+44, r24	; 0x2c
    4168:	ad a0       	ldd	r10, Y+37	; 0x25
    416a:	be a0       	ldd	r11, Y+38	; 0x26
    416c:	cf a0       	ldd	r12, Y+39	; 0x27
    416e:	d8 a4       	ldd	r13, Y+40	; 0x28
    4170:	e9 a4       	ldd	r14, Y+41	; 0x29
    4172:	fa a4       	ldd	r15, Y+42	; 0x2a
    4174:	0b a5       	ldd	r16, Y+43	; 0x2b
    4176:	1c a5       	ldd	r17, Y+44	; 0x2c
    4178:	2a 2d       	mov	r18, r10
    417a:	3b 2d       	mov	r19, r11
    417c:	4c 2d       	mov	r20, r12
    417e:	5d 2d       	mov	r21, r13
    4180:	6e 2d       	mov	r22, r14
    4182:	7f 2d       	mov	r23, r15
    4184:	80 2f       	mov	r24, r16
    4186:	91 2f       	mov	r25, r17
    4188:	0f 2e       	mov	r0, r31
    418a:	f0 ea       	ldi	r31, 0xA0	; 160
    418c:	af 2e       	mov	r10, r31
    418e:	f0 2d       	mov	r31, r0
    4190:	0f 2e       	mov	r0, r31
    4192:	f6 e8       	ldi	r31, 0x86	; 134
    4194:	bf 2e       	mov	r11, r31
    4196:	f0 2d       	mov	r31, r0
    4198:	cc 24       	eor	r12, r12
    419a:	c3 94       	inc	r12
    419c:	dd 24       	eor	r13, r13
    419e:	ee 24       	eor	r14, r14
    41a0:	ff 24       	eor	r15, r15
    41a2:	00 e0       	ldi	r16, 0x00	; 0
    41a4:	10 e0       	ldi	r17, 0x00	; 0
    41a6:	0e 94 8a 07 	call	0xf14	; 0xf14 <__umoddi3>
    41aa:	a2 2e       	mov	r10, r18
    41ac:	b3 2e       	mov	r11, r19
    41ae:	c4 2e       	mov	r12, r20
    41b0:	d5 2e       	mov	r13, r21
    41b2:	e6 2e       	mov	r14, r22
    41b4:	f7 2e       	mov	r15, r23
    41b6:	08 2f       	mov	r16, r24
    41b8:	19 2f       	mov	r17, r25
    41ba:	2a 2d       	mov	r18, r10
    41bc:	3b 2d       	mov	r19, r11
    41be:	4c 2d       	mov	r20, r12
    41c0:	5d 2d       	mov	r21, r13
    41c2:	6e 2d       	mov	r22, r14
    41c4:	7f 2d       	mov	r23, r15
    41c6:	80 2f       	mov	r24, r16
    41c8:	91 2f       	mov	r25, r17
    41ca:	da 01       	movw	r26, r20
    41cc:	c9 01       	movw	r24, r18
    41ce:	bc 01       	movw	r22, r24
    41d0:	cd 01       	movw	r24, r26
    41d2:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
    41d6:	5c c0       	rjmp	.+184    	; 0x4290 <LCD_voidSendFloatNumber+0x478>
	else
	{
		// then divide the number by 10  (ex : 25694232 ---> 2569423)
		// then module the number by 100000  (ex : 25694232 ---> 69423
		// Display the number
		LCD_voidSendINTNum((u64)(( Local_u64tempNumber/10) % 100000)); // Function to send the integer number
    41d8:	a9 80       	ldd	r10, Y+1	; 0x01
    41da:	ba 80       	ldd	r11, Y+2	; 0x02
    41dc:	cb 80       	ldd	r12, Y+3	; 0x03
    41de:	dc 80       	ldd	r13, Y+4	; 0x04
    41e0:	ed 80       	ldd	r14, Y+5	; 0x05
    41e2:	fe 80       	ldd	r15, Y+6	; 0x06
    41e4:	0f 81       	ldd	r16, Y+7	; 0x07
    41e6:	18 85       	ldd	r17, Y+8	; 0x08
    41e8:	2a 2d       	mov	r18, r10
    41ea:	3b 2d       	mov	r19, r11
    41ec:	4c 2d       	mov	r20, r12
    41ee:	5d 2d       	mov	r21, r13
    41f0:	6e 2d       	mov	r22, r14
    41f2:	7f 2d       	mov	r23, r15
    41f4:	80 2f       	mov	r24, r16
    41f6:	91 2f       	mov	r25, r17
    41f8:	0f 2e       	mov	r0, r31
    41fa:	fa e0       	ldi	r31, 0x0A	; 10
    41fc:	af 2e       	mov	r10, r31
    41fe:	f0 2d       	mov	r31, r0
    4200:	bb 24       	eor	r11, r11
    4202:	cc 24       	eor	r12, r12
    4204:	dd 24       	eor	r13, r13
    4206:	ee 24       	eor	r14, r14
    4208:	ff 24       	eor	r15, r15
    420a:	00 e0       	ldi	r16, 0x00	; 0
    420c:	10 e0       	ldi	r17, 0x00	; 0
    420e:	0e 94 15 01 	call	0x22a	; 0x22a <__udivdi3>
    4212:	22 2e       	mov	r2, r18
    4214:	33 2e       	mov	r3, r19
    4216:	44 2e       	mov	r4, r20
    4218:	55 2e       	mov	r5, r21
    421a:	66 2e       	mov	r6, r22
    421c:	77 2e       	mov	r7, r23
    421e:	88 2e       	mov	r8, r24
    4220:	99 2e       	mov	r9, r25
    4222:	a2 2c       	mov	r10, r2
    4224:	b3 2c       	mov	r11, r3
    4226:	c4 2c       	mov	r12, r4
    4228:	d5 2c       	mov	r13, r5
    422a:	e6 2c       	mov	r14, r6
    422c:	f7 2c       	mov	r15, r7
    422e:	08 2d       	mov	r16, r8
    4230:	19 2d       	mov	r17, r9
    4232:	2a 2d       	mov	r18, r10
    4234:	3b 2d       	mov	r19, r11
    4236:	4c 2d       	mov	r20, r12
    4238:	5d 2d       	mov	r21, r13
    423a:	6e 2d       	mov	r22, r14
    423c:	7f 2d       	mov	r23, r15
    423e:	80 2f       	mov	r24, r16
    4240:	91 2f       	mov	r25, r17
    4242:	0f 2e       	mov	r0, r31
    4244:	f0 ea       	ldi	r31, 0xA0	; 160
    4246:	af 2e       	mov	r10, r31
    4248:	f0 2d       	mov	r31, r0
    424a:	0f 2e       	mov	r0, r31
    424c:	f6 e8       	ldi	r31, 0x86	; 134
    424e:	bf 2e       	mov	r11, r31
    4250:	f0 2d       	mov	r31, r0
    4252:	cc 24       	eor	r12, r12
    4254:	c3 94       	inc	r12
    4256:	dd 24       	eor	r13, r13
    4258:	ee 24       	eor	r14, r14
    425a:	ff 24       	eor	r15, r15
    425c:	00 e0       	ldi	r16, 0x00	; 0
    425e:	10 e0       	ldi	r17, 0x00	; 0
    4260:	0e 94 8a 07 	call	0xf14	; 0xf14 <__umoddi3>
    4264:	a2 2e       	mov	r10, r18
    4266:	b3 2e       	mov	r11, r19
    4268:	c4 2e       	mov	r12, r20
    426a:	d5 2e       	mov	r13, r21
    426c:	e6 2e       	mov	r14, r22
    426e:	f7 2e       	mov	r15, r23
    4270:	08 2f       	mov	r16, r24
    4272:	19 2f       	mov	r17, r25
    4274:	2a 2d       	mov	r18, r10
    4276:	3b 2d       	mov	r19, r11
    4278:	4c 2d       	mov	r20, r12
    427a:	5d 2d       	mov	r21, r13
    427c:	6e 2d       	mov	r22, r14
    427e:	7f 2d       	mov	r23, r15
    4280:	80 2f       	mov	r24, r16
    4282:	91 2f       	mov	r25, r17
    4284:	da 01       	movw	r26, r20
    4286:	c9 01       	movw	r24, r18
    4288:	bc 01       	movw	r22, r24
    428a:	cd 01       	movw	r24, r26
    428c:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
	}

}
    4290:	ef 96       	adiw	r28, 0x3f	; 63
    4292:	0f b6       	in	r0, 0x3f	; 63
    4294:	f8 94       	cli
    4296:	de bf       	out	0x3e, r29	; 62
    4298:	0f be       	out	0x3f, r0	; 63
    429a:	cd bf       	out	0x3d, r28	; 61
    429c:	cf 91       	pop	r28
    429e:	df 91       	pop	r29
    42a0:	1f 91       	pop	r17
    42a2:	0f 91       	pop	r16
    42a4:	ff 90       	pop	r15
    42a6:	ef 90       	pop	r14
    42a8:	df 90       	pop	r13
    42aa:	cf 90       	pop	r12
    42ac:	bf 90       	pop	r11
    42ae:	af 90       	pop	r10
    42b0:	9f 90       	pop	r9
    42b2:	8f 90       	pop	r8
    42b4:	7f 90       	pop	r7
    42b6:	6f 90       	pop	r6
    42b8:	5f 90       	pop	r5
    42ba:	4f 90       	pop	r4
    42bc:	3f 90       	pop	r3
    42be:	2f 90       	pop	r2
    42c0:	08 95       	ret

000042c2 <LCD_voidClearScreen>:
void LCD_voidClearScreen(void)
{
    42c2:	df 93       	push	r29
    42c4:	cf 93       	push	r28
    42c6:	cd b7       	in	r28, 0x3d	; 61
    42c8:	de b7       	in	r29, 0x3e	; 62
    42ca:	2e 97       	sbiw	r28, 0x0e	; 14
    42cc:	0f b6       	in	r0, 0x3f	; 63
    42ce:	f8 94       	cli
    42d0:	de bf       	out	0x3e, r29	; 62
    42d2:	0f be       	out	0x3f, r0	; 63
    42d4:	cd bf       	out	0x3d, r28	; 61
	LCD_invidSendCommend(CLCD_DISPLAY_CLEAR);
    42d6:	81 e0       	ldi	r24, 0x01	; 1
    42d8:	0e 94 ae 1c 	call	0x395c	; 0x395c <LCD_invidSendCommend>
    42dc:	80 e0       	ldi	r24, 0x00	; 0
    42de:	90 e0       	ldi	r25, 0x00	; 0
    42e0:	a0 e0       	ldi	r26, 0x00	; 0
    42e2:	b0 e4       	ldi	r27, 0x40	; 64
    42e4:	8b 87       	std	Y+11, r24	; 0x0b
    42e6:	9c 87       	std	Y+12, r25	; 0x0c
    42e8:	ad 87       	std	Y+13, r26	; 0x0d
    42ea:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    42ec:	6b 85       	ldd	r22, Y+11	; 0x0b
    42ee:	7c 85       	ldd	r23, Y+12	; 0x0c
    42f0:	8d 85       	ldd	r24, Y+13	; 0x0d
    42f2:	9e 85       	ldd	r25, Y+14	; 0x0e
    42f4:	20 e0       	ldi	r18, 0x00	; 0
    42f6:	30 e0       	ldi	r19, 0x00	; 0
    42f8:	4a ef       	ldi	r20, 0xFA	; 250
    42fa:	54 e4       	ldi	r21, 0x44	; 68
    42fc:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4300:	dc 01       	movw	r26, r24
    4302:	cb 01       	movw	r24, r22
    4304:	8f 83       	std	Y+7, r24	; 0x07
    4306:	98 87       	std	Y+8, r25	; 0x08
    4308:	a9 87       	std	Y+9, r26	; 0x09
    430a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    430c:	6f 81       	ldd	r22, Y+7	; 0x07
    430e:	78 85       	ldd	r23, Y+8	; 0x08
    4310:	89 85       	ldd	r24, Y+9	; 0x09
    4312:	9a 85       	ldd	r25, Y+10	; 0x0a
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	40 e8       	ldi	r20, 0x80	; 128
    431a:	5f e3       	ldi	r21, 0x3F	; 63
    431c:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4320:	88 23       	and	r24, r24
    4322:	2c f4       	brge	.+10     	; 0x432e <LCD_voidClearScreen+0x6c>
		__ticks = 1;
    4324:	81 e0       	ldi	r24, 0x01	; 1
    4326:	90 e0       	ldi	r25, 0x00	; 0
    4328:	9e 83       	std	Y+6, r25	; 0x06
    432a:	8d 83       	std	Y+5, r24	; 0x05
    432c:	3f c0       	rjmp	.+126    	; 0x43ac <LCD_voidClearScreen+0xea>
	else if (__tmp > 65535)
    432e:	6f 81       	ldd	r22, Y+7	; 0x07
    4330:	78 85       	ldd	r23, Y+8	; 0x08
    4332:	89 85       	ldd	r24, Y+9	; 0x09
    4334:	9a 85       	ldd	r25, Y+10	; 0x0a
    4336:	20 e0       	ldi	r18, 0x00	; 0
    4338:	3f ef       	ldi	r19, 0xFF	; 255
    433a:	4f e7       	ldi	r20, 0x7F	; 127
    433c:	57 e4       	ldi	r21, 0x47	; 71
    433e:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4342:	18 16       	cp	r1, r24
    4344:	4c f5       	brge	.+82     	; 0x4398 <LCD_voidClearScreen+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4346:	6b 85       	ldd	r22, Y+11	; 0x0b
    4348:	7c 85       	ldd	r23, Y+12	; 0x0c
    434a:	8d 85       	ldd	r24, Y+13	; 0x0d
    434c:	9e 85       	ldd	r25, Y+14	; 0x0e
    434e:	20 e0       	ldi	r18, 0x00	; 0
    4350:	30 e0       	ldi	r19, 0x00	; 0
    4352:	40 e2       	ldi	r20, 0x20	; 32
    4354:	51 e4       	ldi	r21, 0x41	; 65
    4356:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    435a:	dc 01       	movw	r26, r24
    435c:	cb 01       	movw	r24, r22
    435e:	bc 01       	movw	r22, r24
    4360:	cd 01       	movw	r24, r26
    4362:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4366:	dc 01       	movw	r26, r24
    4368:	cb 01       	movw	r24, r22
    436a:	9e 83       	std	Y+6, r25	; 0x06
    436c:	8d 83       	std	Y+5, r24	; 0x05
    436e:	0f c0       	rjmp	.+30     	; 0x438e <LCD_voidClearScreen+0xcc>
    4370:	88 ec       	ldi	r24, 0xC8	; 200
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	9c 83       	std	Y+4, r25	; 0x04
    4376:	8b 83       	std	Y+3, r24	; 0x03
    4378:	8b 81       	ldd	r24, Y+3	; 0x03
    437a:	9c 81       	ldd	r25, Y+4	; 0x04
    437c:	01 97       	sbiw	r24, 0x01	; 1
    437e:	f1 f7       	brne	.-4      	; 0x437c <LCD_voidClearScreen+0xba>
    4380:	9c 83       	std	Y+4, r25	; 0x04
    4382:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4384:	8d 81       	ldd	r24, Y+5	; 0x05
    4386:	9e 81       	ldd	r25, Y+6	; 0x06
    4388:	01 97       	sbiw	r24, 0x01	; 1
    438a:	9e 83       	std	Y+6, r25	; 0x06
    438c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    438e:	8d 81       	ldd	r24, Y+5	; 0x05
    4390:	9e 81       	ldd	r25, Y+6	; 0x06
    4392:	00 97       	sbiw	r24, 0x00	; 0
    4394:	69 f7       	brne	.-38     	; 0x4370 <LCD_voidClearScreen+0xae>
    4396:	14 c0       	rjmp	.+40     	; 0x43c0 <LCD_voidClearScreen+0xfe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4398:	6f 81       	ldd	r22, Y+7	; 0x07
    439a:	78 85       	ldd	r23, Y+8	; 0x08
    439c:	89 85       	ldd	r24, Y+9	; 0x09
    439e:	9a 85       	ldd	r25, Y+10	; 0x0a
    43a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43a4:	dc 01       	movw	r26, r24
    43a6:	cb 01       	movw	r24, r22
    43a8:	9e 83       	std	Y+6, r25	; 0x06
    43aa:	8d 83       	std	Y+5, r24	; 0x05
    43ac:	8d 81       	ldd	r24, Y+5	; 0x05
    43ae:	9e 81       	ldd	r25, Y+6	; 0x06
    43b0:	9a 83       	std	Y+2, r25	; 0x02
    43b2:	89 83       	std	Y+1, r24	; 0x01
    43b4:	89 81       	ldd	r24, Y+1	; 0x01
    43b6:	9a 81       	ldd	r25, Y+2	; 0x02
    43b8:	01 97       	sbiw	r24, 0x01	; 1
    43ba:	f1 f7       	brne	.-4      	; 0x43b8 <LCD_voidClearScreen+0xf6>
    43bc:	9a 83       	std	Y+2, r25	; 0x02
    43be:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);
}
    43c0:	2e 96       	adiw	r28, 0x0e	; 14
    43c2:	0f b6       	in	r0, 0x3f	; 63
    43c4:	f8 94       	cli
    43c6:	de bf       	out	0x3e, r29	; 62
    43c8:	0f be       	out	0x3f, r0	; 63
    43ca:	cd bf       	out	0x3d, r28	; 61
    43cc:	cf 91       	pop	r28
    43ce:	df 91       	pop	r29
    43d0:	08 95       	ret

000043d2 <FLEX_SENSOR_voidInit>:

#include "SENSOR_private.h"
#include "SENSOR_config.h"

void FLEX_SENSOR_voidInit(u8 Copy_u8ChannelNumber)
{
    43d2:	df 93       	push	r29
    43d4:	cf 93       	push	r28
    43d6:	0f 92       	push	r0
    43d8:	cd b7       	in	r28, 0x3d	; 61
    43da:	de b7       	in	r29, 0x3e	; 62
    43dc:	89 83       	std	Y+1, r24	; 0x01
	DIO_enumSetPinDirection(DIO_PORTA, Copy_u8ChannelNumber, DIO_INPUT);
    43de:	80 e0       	ldi	r24, 0x00	; 0
    43e0:	69 81       	ldd	r22, Y+1	; 0x01
    43e2:	40 e0       	ldi	r20, 0x00	; 0
    43e4:	0e 94 bc 16 	call	0x2d78	; 0x2d78 <DIO_enumSetPinDirection>
}
    43e8:	0f 90       	pop	r0
    43ea:	cf 91       	pop	r28
    43ec:	df 91       	pop	r29
    43ee:	08 95       	ret

000043f0 <FLEX_SNESOR_u8Read>:
u8 FLEX_SNESOR_u8Read(u8 Copy_u8ChannelNumber)
{
    43f0:	af 92       	push	r10
    43f2:	bf 92       	push	r11
    43f4:	cf 92       	push	r12
    43f6:	df 92       	push	r13
    43f8:	ef 92       	push	r14
    43fa:	ff 92       	push	r15
    43fc:	0f 93       	push	r16
    43fe:	1f 93       	push	r17
    4400:	df 93       	push	r29
    4402:	cf 93       	push	r28
    4404:	cd b7       	in	r28, 0x3d	; 61
    4406:	de b7       	in	r29, 0x3e	; 62
    4408:	28 97       	sbiw	r28, 0x08	; 8
    440a:	0f b6       	in	r0, 0x3f	; 63
    440c:	f8 94       	cli
    440e:	de bf       	out	0x3e, r29	; 62
    4410:	0f be       	out	0x3f, r0	; 63
    4412:	cd bf       	out	0x3d, r28	; 61
    4414:	88 87       	std	Y+8, r24	; 0x08
	u16 Local_u16ADCValue = 0;
    4416:	1f 82       	std	Y+7, r1	; 0x07
    4418:	1e 82       	std	Y+6, r1	; 0x06
	f32 Local_f32AnalogVolt= 0;
    441a:	80 e0       	ldi	r24, 0x00	; 0
    441c:	90 e0       	ldi	r25, 0x00	; 0
    441e:	a0 e0       	ldi	r26, 0x00	; 0
    4420:	b0 e0       	ldi	r27, 0x00	; 0
    4422:	8a 83       	std	Y+2, r24	; 0x02
    4424:	9b 83       	std	Y+3, r25	; 0x03
    4426:	ac 83       	std	Y+4, r26	; 0x04
    4428:	bd 83       	std	Y+5, r27	; 0x05
	u8 Local_u8Angle = 0;
    442a:	19 82       	std	Y+1, r1	; 0x01
	Local_u16ADCValue = ADC_16ReadChannelADC(Copy_u8ChannelNumber);
    442c:	88 85       	ldd	r24, Y+8	; 0x08
    442e:	0e 94 30 15 	call	0x2a60	; 0x2a60 <ADC_16ReadChannelADC>
    4432:	9f 83       	std	Y+7, r25	; 0x07
    4434:	8e 83       	std	Y+6, r24	; 0x06
	Local_f32AnalogVolt = (Local_u16ADCValue * ADC_VCC)/1024.0;
    4436:	8e 81       	ldd	r24, Y+6	; 0x06
    4438:	9f 81       	ldd	r25, Y+7	; 0x07
    443a:	cc 01       	movw	r24, r24
    443c:	a0 e0       	ldi	r26, 0x00	; 0
    443e:	b0 e0       	ldi	r27, 0x00	; 0
    4440:	bc 01       	movw	r22, r24
    4442:	cd 01       	movw	r24, r26
    4444:	0e 94 2e 12 	call	0x245c	; 0x245c <__floatunsisf>
    4448:	dc 01       	movw	r26, r24
    444a:	cb 01       	movw	r24, r22
    444c:	bc 01       	movw	r22, r24
    444e:	cd 01       	movw	r24, r26
    4450:	20 e0       	ldi	r18, 0x00	; 0
    4452:	30 e0       	ldi	r19, 0x00	; 0
    4454:	40 ea       	ldi	r20, 0xA0	; 160
    4456:	50 e4       	ldi	r21, 0x40	; 64
    4458:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    445c:	dc 01       	movw	r26, r24
    445e:	cb 01       	movw	r24, r22
    4460:	bc 01       	movw	r22, r24
    4462:	cd 01       	movw	r24, r26
    4464:	20 e0       	ldi	r18, 0x00	; 0
    4466:	30 e0       	ldi	r19, 0x00	; 0
    4468:	40 e8       	ldi	r20, 0x80	; 128
    446a:	54 e4       	ldi	r21, 0x44	; 68
    446c:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3>
    4470:	dc 01       	movw	r26, r24
    4472:	cb 01       	movw	r24, r22
    4474:	8a 83       	std	Y+2, r24	; 0x02
    4476:	9b 83       	std	Y+3, r25	; 0x03
    4478:	ac 83       	std	Y+4, r26	; 0x04
    447a:	bd 83       	std	Y+5, r27	; 0x05
	Local_u8Angle = MAP(Local_f32AnalogVolt, 0, ADC_VCC, 0, 90.0 );
    447c:	00 d0       	rcall	.+0      	; 0x447e <FLEX_SNESOR_u8Read+0x8e>
    447e:	00 d0       	rcall	.+0      	; 0x4480 <FLEX_SNESOR_u8Read+0x90>
    4480:	ed b7       	in	r30, 0x3d	; 61
    4482:	fe b7       	in	r31, 0x3e	; 62
    4484:	31 96       	adiw	r30, 0x01	; 1
    4486:	2a 81       	ldd	r18, Y+2	; 0x02
    4488:	3b 81       	ldd	r19, Y+3	; 0x03
    448a:	4c 81       	ldd	r20, Y+4	; 0x04
    448c:	5d 81       	ldd	r21, Y+5	; 0x05
    448e:	80 e0       	ldi	r24, 0x00	; 0
    4490:	90 e0       	ldi	r25, 0x00	; 0
    4492:	a4 eb       	ldi	r26, 0xB4	; 180
    4494:	b2 e4       	ldi	r27, 0x42	; 66
    4496:	80 83       	st	Z, r24
    4498:	91 83       	std	Z+1, r25	; 0x01
    449a:	a2 83       	std	Z+2, r26	; 0x02
    449c:	b3 83       	std	Z+3, r27	; 0x03
    449e:	ca 01       	movw	r24, r20
    44a0:	b9 01       	movw	r22, r18
    44a2:	20 e0       	ldi	r18, 0x00	; 0
    44a4:	30 e0       	ldi	r19, 0x00	; 0
    44a6:	40 e0       	ldi	r20, 0x00	; 0
    44a8:	50 e0       	ldi	r21, 0x00	; 0
    44aa:	0f 2e       	mov	r0, r31
    44ac:	f0 e0       	ldi	r31, 0x00	; 0
    44ae:	ef 2e       	mov	r14, r31
    44b0:	f0 e0       	ldi	r31, 0x00	; 0
    44b2:	ff 2e       	mov	r15, r31
    44b4:	f0 ea       	ldi	r31, 0xA0	; 160
    44b6:	0f 2f       	mov	r16, r31
    44b8:	f0 e4       	ldi	r31, 0x40	; 64
    44ba:	1f 2f       	mov	r17, r31
    44bc:	f0 2d       	mov	r31, r0
    44be:	0f 2e       	mov	r0, r31
    44c0:	f0 e0       	ldi	r31, 0x00	; 0
    44c2:	af 2e       	mov	r10, r31
    44c4:	f0 e0       	ldi	r31, 0x00	; 0
    44c6:	bf 2e       	mov	r11, r31
    44c8:	f0 e0       	ldi	r31, 0x00	; 0
    44ca:	cf 2e       	mov	r12, r31
    44cc:	f0 e0       	ldi	r31, 0x00	; 0
    44ce:	df 2e       	mov	r13, r31
    44d0:	f0 2d       	mov	r31, r0
    44d2:	0e 94 8a 22 	call	0x4514	; 0x4514 <MAP>
    44d6:	0f 90       	pop	r0
    44d8:	0f 90       	pop	r0
    44da:	0f 90       	pop	r0
    44dc:	0f 90       	pop	r0
    44de:	dc 01       	movw	r26, r24
    44e0:	cb 01       	movw	r24, r22
    44e2:	bc 01       	movw	r22, r24
    44e4:	cd 01       	movw	r24, r26
    44e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44ea:	dc 01       	movw	r26, r24
    44ec:	cb 01       	movw	r24, r22
    44ee:	89 83       	std	Y+1, r24	; 0x01
	return Local_u8Angle;
    44f0:	89 81       	ldd	r24, Y+1	; 0x01
}
    44f2:	28 96       	adiw	r28, 0x08	; 8
    44f4:	0f b6       	in	r0, 0x3f	; 63
    44f6:	f8 94       	cli
    44f8:	de bf       	out	0x3e, r29	; 62
    44fa:	0f be       	out	0x3f, r0	; 63
    44fc:	cd bf       	out	0x3d, r28	; 61
    44fe:	cf 91       	pop	r28
    4500:	df 91       	pop	r29
    4502:	1f 91       	pop	r17
    4504:	0f 91       	pop	r16
    4506:	ff 90       	pop	r15
    4508:	ef 90       	pop	r14
    450a:	df 90       	pop	r13
    450c:	cf 90       	pop	r12
    450e:	bf 90       	pop	r11
    4510:	af 90       	pop	r10
    4512:	08 95       	ret

00004514 <MAP>:

f32  static MAP(f32 Copy_f32Value, f32 Copy_f32INStart, f32 Copy_f32INEnd, f32 Copy_f32OutStart, f32 Copy_f3OutEnd)
{
    4514:	af 92       	push	r10
    4516:	bf 92       	push	r11
    4518:	cf 92       	push	r12
    451a:	df 92       	push	r13
    451c:	ef 92       	push	r14
    451e:	ff 92       	push	r15
    4520:	0f 93       	push	r16
    4522:	1f 93       	push	r17
    4524:	df 93       	push	r29
    4526:	cf 93       	push	r28
    4528:	cd b7       	in	r28, 0x3d	; 61
    452a:	de b7       	in	r29, 0x3e	; 62
    452c:	60 97       	sbiw	r28, 0x10	; 16
    452e:	0f b6       	in	r0, 0x3f	; 63
    4530:	f8 94       	cli
    4532:	de bf       	out	0x3e, r29	; 62
    4534:	0f be       	out	0x3f, r0	; 63
    4536:	cd bf       	out	0x3d, r28	; 61
    4538:	69 83       	std	Y+1, r22	; 0x01
    453a:	7a 83       	std	Y+2, r23	; 0x02
    453c:	8b 83       	std	Y+3, r24	; 0x03
    453e:	9c 83       	std	Y+4, r25	; 0x04
    4540:	2d 83       	std	Y+5, r18	; 0x05
    4542:	3e 83       	std	Y+6, r19	; 0x06
    4544:	4f 83       	std	Y+7, r20	; 0x07
    4546:	58 87       	std	Y+8, r21	; 0x08
    4548:	e9 86       	std	Y+9, r14	; 0x09
    454a:	fa 86       	std	Y+10, r15	; 0x0a
    454c:	0b 87       	std	Y+11, r16	; 0x0b
    454e:	1c 87       	std	Y+12, r17	; 0x0c
    4550:	ad 86       	std	Y+13, r10	; 0x0d
    4552:	be 86       	std	Y+14, r11	; 0x0e
    4554:	cf 86       	std	Y+15, r12	; 0x0f
    4556:	d8 8a       	std	Y+16, r13	; 0x10
	return ((Copy_f32Value - Copy_f32INStart ) * (Copy_f3OutEnd - Copy_f32OutStart )/(Copy_f32INEnd -Copy_f32INStart ) +Copy_f32OutStart);
    4558:	69 81       	ldd	r22, Y+1	; 0x01
    455a:	7a 81       	ldd	r23, Y+2	; 0x02
    455c:	8b 81       	ldd	r24, Y+3	; 0x03
    455e:	9c 81       	ldd	r25, Y+4	; 0x04
    4560:	2d 81       	ldd	r18, Y+5	; 0x05
    4562:	3e 81       	ldd	r19, Y+6	; 0x06
    4564:	4f 81       	ldd	r20, Y+7	; 0x07
    4566:	58 85       	ldd	r21, Y+8	; 0x08
    4568:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__subsf3>
    456c:	dc 01       	movw	r26, r24
    456e:	cb 01       	movw	r24, r22
    4570:	7c 01       	movw	r14, r24
    4572:	8d 01       	movw	r16, r26
    4574:	6d 8d       	ldd	r22, Y+29	; 0x1d
    4576:	7e 8d       	ldd	r23, Y+30	; 0x1e
    4578:	8f 8d       	ldd	r24, Y+31	; 0x1f
    457a:	98 a1       	ldd	r25, Y+32	; 0x20
    457c:	2d 85       	ldd	r18, Y+13	; 0x0d
    457e:	3e 85       	ldd	r19, Y+14	; 0x0e
    4580:	4f 85       	ldd	r20, Y+15	; 0x0f
    4582:	58 89       	ldd	r21, Y+16	; 0x10
    4584:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__subsf3>
    4588:	dc 01       	movw	r26, r24
    458a:	cb 01       	movw	r24, r22
    458c:	9c 01       	movw	r18, r24
    458e:	ad 01       	movw	r20, r26
    4590:	c8 01       	movw	r24, r16
    4592:	b7 01       	movw	r22, r14
    4594:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4598:	dc 01       	movw	r26, r24
    459a:	cb 01       	movw	r24, r22
    459c:	7c 01       	movw	r14, r24
    459e:	8d 01       	movw	r16, r26
    45a0:	69 85       	ldd	r22, Y+9	; 0x09
    45a2:	7a 85       	ldd	r23, Y+10	; 0x0a
    45a4:	8b 85       	ldd	r24, Y+11	; 0x0b
    45a6:	9c 85       	ldd	r25, Y+12	; 0x0c
    45a8:	2d 81       	ldd	r18, Y+5	; 0x05
    45aa:	3e 81       	ldd	r19, Y+6	; 0x06
    45ac:	4f 81       	ldd	r20, Y+7	; 0x07
    45ae:	58 85       	ldd	r21, Y+8	; 0x08
    45b0:	0e 94 46 0f 	call	0x1e8c	; 0x1e8c <__subsf3>
    45b4:	dc 01       	movw	r26, r24
    45b6:	cb 01       	movw	r24, r22
    45b8:	9c 01       	movw	r18, r24
    45ba:	ad 01       	movw	r20, r26
    45bc:	c8 01       	movw	r24, r16
    45be:	b7 01       	movw	r22, r14
    45c0:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3>
    45c4:	dc 01       	movw	r26, r24
    45c6:	cb 01       	movw	r24, r22
    45c8:	bc 01       	movw	r22, r24
    45ca:	cd 01       	movw	r24, r26
    45cc:	2d 85       	ldd	r18, Y+13	; 0x0d
    45ce:	3e 85       	ldd	r19, Y+14	; 0x0e
    45d0:	4f 85       	ldd	r20, Y+15	; 0x0f
    45d2:	58 89       	ldd	r21, Y+16	; 0x10
    45d4:	0e 94 77 0f 	call	0x1eee	; 0x1eee <__addsf3>
    45d8:	dc 01       	movw	r26, r24
    45da:	cb 01       	movw	r24, r22
}
    45dc:	bc 01       	movw	r22, r24
    45de:	cd 01       	movw	r24, r26
    45e0:	60 96       	adiw	r28, 0x10	; 16
    45e2:	0f b6       	in	r0, 0x3f	; 63
    45e4:	f8 94       	cli
    45e6:	de bf       	out	0x3e, r29	; 62
    45e8:	0f be       	out	0x3f, r0	; 63
    45ea:	cd bf       	out	0x3d, r28	; 61
    45ec:	cf 91       	pop	r28
    45ee:	df 91       	pop	r29
    45f0:	1f 91       	pop	r17
    45f2:	0f 91       	pop	r16
    45f4:	ff 90       	pop	r15
    45f6:	ef 90       	pop	r14
    45f8:	df 90       	pop	r13
    45fa:	cf 90       	pop	r12
    45fc:	bf 90       	pop	r11
    45fe:	af 90       	pop	r10
    4600:	08 95       	ret

00004602 <Gloves_VoidStartWork>:
#include "DIO_interface.h"
#include "LCD_interface.h"
#include "Speach.h"

void Gloves_VoidStartWork(u8 Copy_ADC1 ,u8 Copy_ADC2,u8 Copy_ADC3,u8 Copy_ADC4 ,u8 Copy_ADC5)
{
    4602:	0f 93       	push	r16
    4604:	df 93       	push	r29
    4606:	cf 93       	push	r28
    4608:	00 d0       	rcall	.+0      	; 0x460a <Gloves_VoidStartWork+0x8>
    460a:	00 d0       	rcall	.+0      	; 0x460c <Gloves_VoidStartWork+0xa>
    460c:	0f 92       	push	r0
    460e:	cd b7       	in	r28, 0x3d	; 61
    4610:	de b7       	in	r29, 0x3e	; 62
    4612:	89 83       	std	Y+1, r24	; 0x01
    4614:	6a 83       	std	Y+2, r22	; 0x02
    4616:	4b 83       	std	Y+3, r20	; 0x03
    4618:	2c 83       	std	Y+4, r18	; 0x04
    461a:	0d 83       	std	Y+5, r16	; 0x05
	if(Copy_ADC1> 55 && Copy_ADC2 > 55 && Copy_ADC3 >80 && Copy_ADC4 >80 && Copy_ADC5 > 80)
    461c:	89 81       	ldd	r24, Y+1	; 0x01
    461e:	88 33       	cpi	r24, 0x38	; 56
    4620:	88 f0       	brcs	.+34     	; 0x4644 <Gloves_VoidStartWork+0x42>
    4622:	8a 81       	ldd	r24, Y+2	; 0x02
    4624:	88 33       	cpi	r24, 0x38	; 56
    4626:	70 f0       	brcs	.+28     	; 0x4644 <Gloves_VoidStartWork+0x42>
    4628:	8b 81       	ldd	r24, Y+3	; 0x03
    462a:	81 35       	cpi	r24, 0x51	; 81
    462c:	58 f0       	brcs	.+22     	; 0x4644 <Gloves_VoidStartWork+0x42>
    462e:	8c 81       	ldd	r24, Y+4	; 0x04
    4630:	81 35       	cpi	r24, 0x51	; 81
    4632:	40 f0       	brcs	.+16     	; 0x4644 <Gloves_VoidStartWork+0x42>
    4634:	8d 81       	ldd	r24, Y+5	; 0x05
    4636:	81 35       	cpi	r24, 0x51	; 81
    4638:	28 f0       	brcs	.+10     	; 0x4644 <Gloves_VoidStartWork+0x42>
	{
		LCD_voidSendString(MASSAGE1);
    463a:	80 e6       	ldi	r24, 0x60	; 96
    463c:	90 e0       	ldi	r25, 0x00	; 0
    463e:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_voidSendString>
    4642:	40 c0       	rjmp	.+128    	; 0x46c4 <Gloves_VoidStartWork+0xc2>
	}
	else if(Copy_ADC1> 80 && Copy_ADC2 > 80 && Copy_ADC3 >80 && Copy_ADC4 >35 && Copy_ADC5 >35)
    4644:	89 81       	ldd	r24, Y+1	; 0x01
    4646:	81 35       	cpi	r24, 0x51	; 81
    4648:	88 f0       	brcs	.+34     	; 0x466c <Gloves_VoidStartWork+0x6a>
    464a:	8a 81       	ldd	r24, Y+2	; 0x02
    464c:	81 35       	cpi	r24, 0x51	; 81
    464e:	70 f0       	brcs	.+28     	; 0x466c <Gloves_VoidStartWork+0x6a>
    4650:	8b 81       	ldd	r24, Y+3	; 0x03
    4652:	81 35       	cpi	r24, 0x51	; 81
    4654:	58 f0       	brcs	.+22     	; 0x466c <Gloves_VoidStartWork+0x6a>
    4656:	8c 81       	ldd	r24, Y+4	; 0x04
    4658:	84 32       	cpi	r24, 0x24	; 36
    465a:	40 f0       	brcs	.+16     	; 0x466c <Gloves_VoidStartWork+0x6a>
    465c:	8d 81       	ldd	r24, Y+5	; 0x05
    465e:	84 32       	cpi	r24, 0x24	; 36
    4660:	28 f0       	brcs	.+10     	; 0x466c <Gloves_VoidStartWork+0x6a>
	{
		LCD_voidSendString(MASSAGE2);
    4662:	88 e6       	ldi	r24, 0x68	; 104
    4664:	90 e0       	ldi	r25, 0x00	; 0
    4666:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_voidSendString>
    466a:	2c c0       	rjmp	.+88     	; 0x46c4 <Gloves_VoidStartWork+0xc2>
	}
	else if(Copy_ADC1> 35 && Copy_ADC2 > 80 && Copy_ADC3 >80 && Copy_ADC4 >35 && Copy_ADC5 >35)
    466c:	89 81       	ldd	r24, Y+1	; 0x01
    466e:	84 32       	cpi	r24, 0x24	; 36
    4670:	88 f0       	brcs	.+34     	; 0x4694 <Gloves_VoidStartWork+0x92>
    4672:	8a 81       	ldd	r24, Y+2	; 0x02
    4674:	81 35       	cpi	r24, 0x51	; 81
    4676:	70 f0       	brcs	.+28     	; 0x4694 <Gloves_VoidStartWork+0x92>
    4678:	8b 81       	ldd	r24, Y+3	; 0x03
    467a:	81 35       	cpi	r24, 0x51	; 81
    467c:	58 f0       	brcs	.+22     	; 0x4694 <Gloves_VoidStartWork+0x92>
    467e:	8c 81       	ldd	r24, Y+4	; 0x04
    4680:	84 32       	cpi	r24, 0x24	; 36
    4682:	40 f0       	brcs	.+16     	; 0x4694 <Gloves_VoidStartWork+0x92>
    4684:	8d 81       	ldd	r24, Y+5	; 0x05
    4686:	84 32       	cpi	r24, 0x24	; 36
    4688:	28 f0       	brcs	.+10     	; 0x4694 <Gloves_VoidStartWork+0x92>
	{
		LCD_voidSendString(MASSAGE3);
    468a:	8f e6       	ldi	r24, 0x6F	; 111
    468c:	90 e0       	ldi	r25, 0x00	; 0
    468e:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_voidSendString>
    4692:	18 c0       	rjmp	.+48     	; 0x46c4 <Gloves_VoidStartWork+0xc2>
	}
	else if(Copy_ADC1> 50 && Copy_ADC2 > 50 && Copy_ADC3 >35 && Copy_ADC4 >35 && Copy_ADC5 >35)
    4694:	89 81       	ldd	r24, Y+1	; 0x01
    4696:	83 33       	cpi	r24, 0x33	; 51
    4698:	88 f0       	brcs	.+34     	; 0x46bc <Gloves_VoidStartWork+0xba>
    469a:	8a 81       	ldd	r24, Y+2	; 0x02
    469c:	83 33       	cpi	r24, 0x33	; 51
    469e:	70 f0       	brcs	.+28     	; 0x46bc <Gloves_VoidStartWork+0xba>
    46a0:	8b 81       	ldd	r24, Y+3	; 0x03
    46a2:	84 32       	cpi	r24, 0x24	; 36
    46a4:	58 f0       	brcs	.+22     	; 0x46bc <Gloves_VoidStartWork+0xba>
    46a6:	8c 81       	ldd	r24, Y+4	; 0x04
    46a8:	84 32       	cpi	r24, 0x24	; 36
    46aa:	40 f0       	brcs	.+16     	; 0x46bc <Gloves_VoidStartWork+0xba>
    46ac:	8d 81       	ldd	r24, Y+5	; 0x05
    46ae:	84 32       	cpi	r24, 0x24	; 36
    46b0:	28 f0       	brcs	.+10     	; 0x46bc <Gloves_VoidStartWork+0xba>
	{
		LCD_voidSendString(MASSAGE4);
    46b2:	87 e7       	ldi	r24, 0x77	; 119
    46b4:	90 e0       	ldi	r25, 0x00	; 0
    46b6:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_voidSendString>
    46ba:	04 c0       	rjmp	.+8      	; 0x46c4 <Gloves_VoidStartWork+0xc2>
	}
	else
	{
		LCD_voidSendString(MASSAGE5);
    46bc:	8c e7       	ldi	r24, 0x7C	; 124
    46be:	90 e0       	ldi	r25, 0x00	; 0
    46c0:	0e 94 9e 1d 	call	0x3b3c	; 0x3b3c <LCD_voidSendString>
	}
}
    46c4:	0f 90       	pop	r0
    46c6:	0f 90       	pop	r0
    46c8:	0f 90       	pop	r0
    46ca:	0f 90       	pop	r0
    46cc:	0f 90       	pop	r0
    46ce:	cf 91       	pop	r28
    46d0:	df 91       	pop	r29
    46d2:	0f 91       	pop	r16
    46d4:	08 95       	ret

000046d6 <Display_SignalValue>:
void Display_SignalValue(u8 Copy_ADC1 ,u8 Copy_ADC2,u8 Copy_ADC3,u8 Copy_ADC4 ,u8 Copy_ADC5)
{
    46d6:	0f 93       	push	r16
    46d8:	df 93       	push	r29
    46da:	cf 93       	push	r28
    46dc:	00 d0       	rcall	.+0      	; 0x46de <Display_SignalValue+0x8>
    46de:	00 d0       	rcall	.+0      	; 0x46e0 <Display_SignalValue+0xa>
    46e0:	0f 92       	push	r0
    46e2:	cd b7       	in	r28, 0x3d	; 61
    46e4:	de b7       	in	r29, 0x3e	; 62
    46e6:	89 83       	std	Y+1, r24	; 0x01
    46e8:	6a 83       	std	Y+2, r22	; 0x02
    46ea:	4b 83       	std	Y+3, r20	; 0x03
    46ec:	2c 83       	std	Y+4, r18	; 0x04
    46ee:	0d 83       	std	Y+5, r16	; 0x05
	LCD_voidSendINTNum(Copy_ADC1);
    46f0:	89 81       	ldd	r24, Y+1	; 0x01
    46f2:	88 2f       	mov	r24, r24
    46f4:	90 e0       	ldi	r25, 0x00	; 0
    46f6:	a0 e0       	ldi	r26, 0x00	; 0
    46f8:	b0 e0       	ldi	r27, 0x00	; 0
    46fa:	bc 01       	movw	r22, r24
    46fc:	cd 01       	movw	r24, r26
    46fe:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
			LCD_enuDisplayChar(' ');
    4702:	80 e2       	ldi	r24, 0x20	; 32
    4704:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
			LCD_voidSendINTNum(Copy_ADC2);
    4708:	8a 81       	ldd	r24, Y+2	; 0x02
    470a:	88 2f       	mov	r24, r24
    470c:	90 e0       	ldi	r25, 0x00	; 0
    470e:	a0 e0       	ldi	r26, 0x00	; 0
    4710:	b0 e0       	ldi	r27, 0x00	; 0
    4712:	bc 01       	movw	r22, r24
    4714:	cd 01       	movw	r24, r26
    4716:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
			LCD_enuDisplayChar(' ');
    471a:	80 e2       	ldi	r24, 0x20	; 32
    471c:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
			LCD_voidSendINTNum(Copy_ADC3);
    4720:	8b 81       	ldd	r24, Y+3	; 0x03
    4722:	88 2f       	mov	r24, r24
    4724:	90 e0       	ldi	r25, 0x00	; 0
    4726:	a0 e0       	ldi	r26, 0x00	; 0
    4728:	b0 e0       	ldi	r27, 0x00	; 0
    472a:	bc 01       	movw	r22, r24
    472c:	cd 01       	movw	r24, r26
    472e:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
			LCD_enuDisplayChar(' ');
    4732:	80 e2       	ldi	r24, 0x20	; 32
    4734:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
			LCD_voidSendINTNum(Copy_ADC4);
    4738:	8c 81       	ldd	r24, Y+4	; 0x04
    473a:	88 2f       	mov	r24, r24
    473c:	90 e0       	ldi	r25, 0x00	; 0
    473e:	a0 e0       	ldi	r26, 0x00	; 0
    4740:	b0 e0       	ldi	r27, 0x00	; 0
    4742:	bc 01       	movw	r22, r24
    4744:	cd 01       	movw	r24, r26
    4746:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
			LCD_enuDisplayChar(' ');
    474a:	80 e2       	ldi	r24, 0x20	; 32
    474c:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
			LCD_voidSendINTNum(Copy_ADC5);
    4750:	8d 81       	ldd	r24, Y+5	; 0x05
    4752:	88 2f       	mov	r24, r24
    4754:	90 e0       	ldi	r25, 0x00	; 0
    4756:	a0 e0       	ldi	r26, 0x00	; 0
    4758:	b0 e0       	ldi	r27, 0x00	; 0
    475a:	bc 01       	movw	r22, r24
    475c:	cd 01       	movw	r24, r26
    475e:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <LCD_voidSendINTNum>
			LCD_enuDisplayChar(' ');
    4762:	80 e2       	ldi	r24, 0x20	; 32
    4764:	0e 94 97 1b 	call	0x372e	; 0x372e <LCD_enuDisplayChar>
			LCD_voidSetPosition(2,1);
    4768:	82 e0       	ldi	r24, 0x02	; 2
    476a:	61 e0       	ldi	r22, 0x01	; 1
    476c:	0e 94 c7 1d 	call	0x3b8e	; 0x3b8e <LCD_voidSetPosition>
}
    4770:	0f 90       	pop	r0
    4772:	0f 90       	pop	r0
    4774:	0f 90       	pop	r0
    4776:	0f 90       	pop	r0
    4778:	0f 90       	pop	r0
    477a:	cf 91       	pop	r28
    477c:	df 91       	pop	r29
    477e:	0f 91       	pop	r16
    4780:	08 95       	ret

00004782 <main>:
#include "SENSOR_interface.h"
#include "LCD_interface.h"
#include "glove_Interface.h"
#include "util/delay.h"
int main(void)
{
    4782:	ef 92       	push	r14
    4784:	ff 92       	push	r15
    4786:	0f 93       	push	r16
    4788:	1f 93       	push	r17
    478a:	df 93       	push	r29
    478c:	cf 93       	push	r28
    478e:	cd b7       	in	r28, 0x3d	; 61
    4790:	de b7       	in	r29, 0x3e	; 62
    4792:	6c 97       	sbiw	r28, 0x1c	; 28
    4794:	0f b6       	in	r0, 0x3f	; 63
    4796:	f8 94       	cli
    4798:	de bf       	out	0x3e, r29	; 62
    479a:	0f be       	out	0x3f, r0	; 63
    479c:	cd bf       	out	0x3d, r28	; 61

	ADC_voidInit();
    479e:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <ADC_voidInit>
	LCD_enuInit();
    47a2:	0e 94 76 19 	call	0x32ec	; 0x32ec <LCD_enuInit>
	FLEX_SENSOR_voidInit(ADC_0);
    47a6:	80 e0       	ldi	r24, 0x00	; 0
    47a8:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <FLEX_SENSOR_voidInit>
	FLEX_SENSOR_voidInit(ADC_1);
    47ac:	81 e0       	ldi	r24, 0x01	; 1
    47ae:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <FLEX_SENSOR_voidInit>
	FLEX_SENSOR_voidInit(ADC_2);
    47b2:	82 e0       	ldi	r24, 0x02	; 2
    47b4:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <FLEX_SENSOR_voidInit>
	FLEX_SENSOR_voidInit(ADC_3);
    47b8:	83 e0       	ldi	r24, 0x03	; 3
    47ba:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <FLEX_SENSOR_voidInit>
	FLEX_SENSOR_voidInit(ADC_4);
    47be:	84 e0       	ldi	r24, 0x04	; 4
    47c0:	0e 94 e9 21 	call	0x43d2	; 0x43d2 <FLEX_SENSOR_voidInit>
	while(1)
	{
		Display_SignalValue(
    47c4:	80 e0       	ldi	r24, 0x00	; 0
    47c6:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    47ca:	f8 2e       	mov	r15, r24
    47cc:	81 e0       	ldi	r24, 0x01	; 1
    47ce:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    47d2:	e8 2e       	mov	r14, r24
    47d4:	82 e0       	ldi	r24, 0x02	; 2
    47d6:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    47da:	18 2f       	mov	r17, r24
    47dc:	83 e0       	ldi	r24, 0x03	; 3
    47de:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    47e2:	08 2f       	mov	r16, r24
    47e4:	84 e0       	ldi	r24, 0x04	; 4
    47e6:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    47ea:	98 2f       	mov	r25, r24
    47ec:	8f 2d       	mov	r24, r15
    47ee:	6e 2d       	mov	r22, r14
    47f0:	41 2f       	mov	r20, r17
    47f2:	20 2f       	mov	r18, r16
    47f4:	09 2f       	mov	r16, r25
    47f6:	0e 94 6b 23 	call	0x46d6	; 0x46d6 <Display_SignalValue>
				FLEX_SNESOR_u8Read(ADC_0),
				FLEX_SNESOR_u8Read(ADC_1),
				FLEX_SNESOR_u8Read(ADC_2),
				FLEX_SNESOR_u8Read(ADC_3),
				FLEX_SNESOR_u8Read(ADC_4));
		Gloves_VoidStartWork(
    47fa:	80 e0       	ldi	r24, 0x00	; 0
    47fc:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    4800:	f8 2e       	mov	r15, r24
    4802:	81 e0       	ldi	r24, 0x01	; 1
    4804:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    4808:	e8 2e       	mov	r14, r24
    480a:	82 e0       	ldi	r24, 0x02	; 2
    480c:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    4810:	18 2f       	mov	r17, r24
    4812:	83 e0       	ldi	r24, 0x03	; 3
    4814:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    4818:	08 2f       	mov	r16, r24
    481a:	84 e0       	ldi	r24, 0x04	; 4
    481c:	0e 94 f8 21 	call	0x43f0	; 0x43f0 <FLEX_SNESOR_u8Read>
    4820:	98 2f       	mov	r25, r24
    4822:	8f 2d       	mov	r24, r15
    4824:	6e 2d       	mov	r22, r14
    4826:	41 2f       	mov	r20, r17
    4828:	20 2f       	mov	r18, r16
    482a:	09 2f       	mov	r16, r25
    482c:	0e 94 01 23 	call	0x4602	; 0x4602 <Gloves_VoidStartWork>
    4830:	80 e0       	ldi	r24, 0x00	; 0
    4832:	90 e0       	ldi	r25, 0x00	; 0
    4834:	aa ef       	ldi	r26, 0xFA	; 250
    4836:	b3 e4       	ldi	r27, 0x43	; 67
    4838:	89 8f       	std	Y+25, r24	; 0x19
    483a:	9a 8f       	std	Y+26, r25	; 0x1a
    483c:	ab 8f       	std	Y+27, r26	; 0x1b
    483e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4840:	69 8d       	ldd	r22, Y+25	; 0x19
    4842:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4844:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4846:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4848:	20 e0       	ldi	r18, 0x00	; 0
    484a:	30 e0       	ldi	r19, 0x00	; 0
    484c:	4a ef       	ldi	r20, 0xFA	; 250
    484e:	54 e4       	ldi	r21, 0x44	; 68
    4850:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4854:	dc 01       	movw	r26, r24
    4856:	cb 01       	movw	r24, r22
    4858:	8d 8b       	std	Y+21, r24	; 0x15
    485a:	9e 8b       	std	Y+22, r25	; 0x16
    485c:	af 8b       	std	Y+23, r26	; 0x17
    485e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4860:	6d 89       	ldd	r22, Y+21	; 0x15
    4862:	7e 89       	ldd	r23, Y+22	; 0x16
    4864:	8f 89       	ldd	r24, Y+23	; 0x17
    4866:	98 8d       	ldd	r25, Y+24	; 0x18
    4868:	20 e0       	ldi	r18, 0x00	; 0
    486a:	30 e0       	ldi	r19, 0x00	; 0
    486c:	40 e8       	ldi	r20, 0x80	; 128
    486e:	5f e3       	ldi	r21, 0x3F	; 63
    4870:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    4874:	88 23       	and	r24, r24
    4876:	2c f4       	brge	.+10     	; 0x4882 <main+0x100>
		__ticks = 1;
    4878:	81 e0       	ldi	r24, 0x01	; 1
    487a:	90 e0       	ldi	r25, 0x00	; 0
    487c:	9c 8b       	std	Y+20, r25	; 0x14
    487e:	8b 8b       	std	Y+19, r24	; 0x13
    4880:	3f c0       	rjmp	.+126    	; 0x4900 <main+0x17e>
	else if (__tmp > 65535)
    4882:	6d 89       	ldd	r22, Y+21	; 0x15
    4884:	7e 89       	ldd	r23, Y+22	; 0x16
    4886:	8f 89       	ldd	r24, Y+23	; 0x17
    4888:	98 8d       	ldd	r25, Y+24	; 0x18
    488a:	20 e0       	ldi	r18, 0x00	; 0
    488c:	3f ef       	ldi	r19, 0xFF	; 255
    488e:	4f e7       	ldi	r20, 0x7F	; 127
    4890:	57 e4       	ldi	r21, 0x47	; 71
    4892:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    4896:	18 16       	cp	r1, r24
    4898:	4c f5       	brge	.+82     	; 0x48ec <main+0x16a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    489a:	69 8d       	ldd	r22, Y+25	; 0x19
    489c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    489e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    48a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    48a2:	20 e0       	ldi	r18, 0x00	; 0
    48a4:	30 e0       	ldi	r19, 0x00	; 0
    48a6:	40 e2       	ldi	r20, 0x20	; 32
    48a8:	51 e4       	ldi	r21, 0x41	; 65
    48aa:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    48ae:	dc 01       	movw	r26, r24
    48b0:	cb 01       	movw	r24, r22
    48b2:	bc 01       	movw	r22, r24
    48b4:	cd 01       	movw	r24, r26
    48b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48ba:	dc 01       	movw	r26, r24
    48bc:	cb 01       	movw	r24, r22
    48be:	9c 8b       	std	Y+20, r25	; 0x14
    48c0:	8b 8b       	std	Y+19, r24	; 0x13
    48c2:	0f c0       	rjmp	.+30     	; 0x48e2 <main+0x160>
    48c4:	88 ec       	ldi	r24, 0xC8	; 200
    48c6:	90 e0       	ldi	r25, 0x00	; 0
    48c8:	9a 8b       	std	Y+18, r25	; 0x12
    48ca:	89 8b       	std	Y+17, r24	; 0x11
    48cc:	89 89       	ldd	r24, Y+17	; 0x11
    48ce:	9a 89       	ldd	r25, Y+18	; 0x12
    48d0:	01 97       	sbiw	r24, 0x01	; 1
    48d2:	f1 f7       	brne	.-4      	; 0x48d0 <main+0x14e>
    48d4:	9a 8b       	std	Y+18, r25	; 0x12
    48d6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    48d8:	8b 89       	ldd	r24, Y+19	; 0x13
    48da:	9c 89       	ldd	r25, Y+20	; 0x14
    48dc:	01 97       	sbiw	r24, 0x01	; 1
    48de:	9c 8b       	std	Y+20, r25	; 0x14
    48e0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    48e2:	8b 89       	ldd	r24, Y+19	; 0x13
    48e4:	9c 89       	ldd	r25, Y+20	; 0x14
    48e6:	00 97       	sbiw	r24, 0x00	; 0
    48e8:	69 f7       	brne	.-38     	; 0x48c4 <main+0x142>
    48ea:	14 c0       	rjmp	.+40     	; 0x4914 <main+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    48ec:	6d 89       	ldd	r22, Y+21	; 0x15
    48ee:	7e 89       	ldd	r23, Y+22	; 0x16
    48f0:	8f 89       	ldd	r24, Y+23	; 0x17
    48f2:	98 8d       	ldd	r25, Y+24	; 0x18
    48f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    48f8:	dc 01       	movw	r26, r24
    48fa:	cb 01       	movw	r24, r22
    48fc:	9c 8b       	std	Y+20, r25	; 0x14
    48fe:	8b 8b       	std	Y+19, r24	; 0x13
    4900:	8b 89       	ldd	r24, Y+19	; 0x13
    4902:	9c 89       	ldd	r25, Y+20	; 0x14
    4904:	98 8b       	std	Y+16, r25	; 0x10
    4906:	8f 87       	std	Y+15, r24	; 0x0f
    4908:	8f 85       	ldd	r24, Y+15	; 0x0f
    490a:	98 89       	ldd	r25, Y+16	; 0x10
    490c:	01 97       	sbiw	r24, 0x01	; 1
    490e:	f1 f7       	brne	.-4      	; 0x490c <main+0x18a>
    4910:	98 8b       	std	Y+16, r25	; 0x10
    4912:	8f 87       	std	Y+15, r24	; 0x0f
				FLEX_SNESOR_u8Read(ADC_1),
				FLEX_SNESOR_u8Read(ADC_2),
				FLEX_SNESOR_u8Read(ADC_3),
				FLEX_SNESOR_u8Read(ADC_4));
		_delay_ms(500);
		LCD_voidClearScreen();
    4914:	0e 94 61 21 	call	0x42c2	; 0x42c2 <LCD_voidClearScreen>
    4918:	80 e0       	ldi	r24, 0x00	; 0
    491a:	90 e0       	ldi	r25, 0x00	; 0
    491c:	aa ef       	ldi	r26, 0xFA	; 250
    491e:	b3 e4       	ldi	r27, 0x43	; 67
    4920:	8b 87       	std	Y+11, r24	; 0x0b
    4922:	9c 87       	std	Y+12, r25	; 0x0c
    4924:	ad 87       	std	Y+13, r26	; 0x0d
    4926:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4928:	6b 85       	ldd	r22, Y+11	; 0x0b
    492a:	7c 85       	ldd	r23, Y+12	; 0x0c
    492c:	8d 85       	ldd	r24, Y+13	; 0x0d
    492e:	9e 85       	ldd	r25, Y+14	; 0x0e
    4930:	20 e0       	ldi	r18, 0x00	; 0
    4932:	30 e0       	ldi	r19, 0x00	; 0
    4934:	4a ef       	ldi	r20, 0xFA	; 250
    4936:	54 e4       	ldi	r21, 0x44	; 68
    4938:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    493c:	dc 01       	movw	r26, r24
    493e:	cb 01       	movw	r24, r22
    4940:	8f 83       	std	Y+7, r24	; 0x07
    4942:	98 87       	std	Y+8, r25	; 0x08
    4944:	a9 87       	std	Y+9, r26	; 0x09
    4946:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4948:	6f 81       	ldd	r22, Y+7	; 0x07
    494a:	78 85       	ldd	r23, Y+8	; 0x08
    494c:	89 85       	ldd	r24, Y+9	; 0x09
    494e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4950:	20 e0       	ldi	r18, 0x00	; 0
    4952:	30 e0       	ldi	r19, 0x00	; 0
    4954:	40 e8       	ldi	r20, 0x80	; 128
    4956:	5f e3       	ldi	r21, 0x3F	; 63
    4958:	0e 94 aa 11 	call	0x2354	; 0x2354 <__ltsf2>
    495c:	88 23       	and	r24, r24
    495e:	2c f4       	brge	.+10     	; 0x496a <main+0x1e8>
		__ticks = 1;
    4960:	81 e0       	ldi	r24, 0x01	; 1
    4962:	90 e0       	ldi	r25, 0x00	; 0
    4964:	9e 83       	std	Y+6, r25	; 0x06
    4966:	8d 83       	std	Y+5, r24	; 0x05
    4968:	3f c0       	rjmp	.+126    	; 0x49e8 <main+0x266>
	else if (__tmp > 65535)
    496a:	6f 81       	ldd	r22, Y+7	; 0x07
    496c:	78 85       	ldd	r23, Y+8	; 0x08
    496e:	89 85       	ldd	r24, Y+9	; 0x09
    4970:	9a 85       	ldd	r25, Y+10	; 0x0a
    4972:	20 e0       	ldi	r18, 0x00	; 0
    4974:	3f ef       	ldi	r19, 0xFF	; 255
    4976:	4f e7       	ldi	r20, 0x7F	; 127
    4978:	57 e4       	ldi	r21, 0x47	; 71
    497a:	0e 94 4a 11 	call	0x2294	; 0x2294 <__gtsf2>
    497e:	18 16       	cp	r1, r24
    4980:	4c f5       	brge	.+82     	; 0x49d4 <main+0x252>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4982:	6b 85       	ldd	r22, Y+11	; 0x0b
    4984:	7c 85       	ldd	r23, Y+12	; 0x0c
    4986:	8d 85       	ldd	r24, Y+13	; 0x0d
    4988:	9e 85       	ldd	r25, Y+14	; 0x0e
    498a:	20 e0       	ldi	r18, 0x00	; 0
    498c:	30 e0       	ldi	r19, 0x00	; 0
    498e:	40 e2       	ldi	r20, 0x20	; 32
    4990:	51 e4       	ldi	r21, 0x41	; 65
    4992:	0e 94 a4 0f 	call	0x1f48	; 0x1f48 <__mulsf3>
    4996:	dc 01       	movw	r26, r24
    4998:	cb 01       	movw	r24, r22
    499a:	bc 01       	movw	r22, r24
    499c:	cd 01       	movw	r24, r26
    499e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    49a2:	dc 01       	movw	r26, r24
    49a4:	cb 01       	movw	r24, r22
    49a6:	9e 83       	std	Y+6, r25	; 0x06
    49a8:	8d 83       	std	Y+5, r24	; 0x05
    49aa:	0f c0       	rjmp	.+30     	; 0x49ca <main+0x248>
    49ac:	88 ec       	ldi	r24, 0xC8	; 200
    49ae:	90 e0       	ldi	r25, 0x00	; 0
    49b0:	9c 83       	std	Y+4, r25	; 0x04
    49b2:	8b 83       	std	Y+3, r24	; 0x03
    49b4:	8b 81       	ldd	r24, Y+3	; 0x03
    49b6:	9c 81       	ldd	r25, Y+4	; 0x04
    49b8:	01 97       	sbiw	r24, 0x01	; 1
    49ba:	f1 f7       	brne	.-4      	; 0x49b8 <main+0x236>
    49bc:	9c 83       	std	Y+4, r25	; 0x04
    49be:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    49c0:	8d 81       	ldd	r24, Y+5	; 0x05
    49c2:	9e 81       	ldd	r25, Y+6	; 0x06
    49c4:	01 97       	sbiw	r24, 0x01	; 1
    49c6:	9e 83       	std	Y+6, r25	; 0x06
    49c8:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    49ca:	8d 81       	ldd	r24, Y+5	; 0x05
    49cc:	9e 81       	ldd	r25, Y+6	; 0x06
    49ce:	00 97       	sbiw	r24, 0x00	; 0
    49d0:	69 f7       	brne	.-38     	; 0x49ac <main+0x22a>
    49d2:	f8 ce       	rjmp	.-528    	; 0x47c4 <main+0x42>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    49d4:	6f 81       	ldd	r22, Y+7	; 0x07
    49d6:	78 85       	ldd	r23, Y+8	; 0x08
    49d8:	89 85       	ldd	r24, Y+9	; 0x09
    49da:	9a 85       	ldd	r25, Y+10	; 0x0a
    49dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    49e0:	dc 01       	movw	r26, r24
    49e2:	cb 01       	movw	r24, r22
    49e4:	9e 83       	std	Y+6, r25	; 0x06
    49e6:	8d 83       	std	Y+5, r24	; 0x05
    49e8:	8d 81       	ldd	r24, Y+5	; 0x05
    49ea:	9e 81       	ldd	r25, Y+6	; 0x06
    49ec:	9a 83       	std	Y+2, r25	; 0x02
    49ee:	89 83       	std	Y+1, r24	; 0x01
    49f0:	89 81       	ldd	r24, Y+1	; 0x01
    49f2:	9a 81       	ldd	r25, Y+2	; 0x02
    49f4:	01 97       	sbiw	r24, 0x01	; 1
    49f6:	f1 f7       	brne	.-4      	; 0x49f4 <main+0x272>
    49f8:	9a 83       	std	Y+2, r25	; 0x02
    49fa:	89 83       	std	Y+1, r24	; 0x01
    49fc:	e3 ce       	rjmp	.-570    	; 0x47c4 <main+0x42>

000049fe <__mulsi3>:
    49fe:	62 9f       	mul	r22, r18
    4a00:	d0 01       	movw	r26, r0
    4a02:	73 9f       	mul	r23, r19
    4a04:	f0 01       	movw	r30, r0
    4a06:	82 9f       	mul	r24, r18
    4a08:	e0 0d       	add	r30, r0
    4a0a:	f1 1d       	adc	r31, r1
    4a0c:	64 9f       	mul	r22, r20
    4a0e:	e0 0d       	add	r30, r0
    4a10:	f1 1d       	adc	r31, r1
    4a12:	92 9f       	mul	r25, r18
    4a14:	f0 0d       	add	r31, r0
    4a16:	83 9f       	mul	r24, r19
    4a18:	f0 0d       	add	r31, r0
    4a1a:	74 9f       	mul	r23, r20
    4a1c:	f0 0d       	add	r31, r0
    4a1e:	65 9f       	mul	r22, r21
    4a20:	f0 0d       	add	r31, r0
    4a22:	99 27       	eor	r25, r25
    4a24:	72 9f       	mul	r23, r18
    4a26:	b0 0d       	add	r27, r0
    4a28:	e1 1d       	adc	r30, r1
    4a2a:	f9 1f       	adc	r31, r25
    4a2c:	63 9f       	mul	r22, r19
    4a2e:	b0 0d       	add	r27, r0
    4a30:	e1 1d       	adc	r30, r1
    4a32:	f9 1f       	adc	r31, r25
    4a34:	bd 01       	movw	r22, r26
    4a36:	cf 01       	movw	r24, r30
    4a38:	11 24       	eor	r1, r1
    4a3a:	08 95       	ret

00004a3c <__udivmodsi4>:
    4a3c:	a1 e2       	ldi	r26, 0x21	; 33
    4a3e:	1a 2e       	mov	r1, r26
    4a40:	aa 1b       	sub	r26, r26
    4a42:	bb 1b       	sub	r27, r27
    4a44:	fd 01       	movw	r30, r26
    4a46:	0d c0       	rjmp	.+26     	; 0x4a62 <__udivmodsi4_ep>

00004a48 <__udivmodsi4_loop>:
    4a48:	aa 1f       	adc	r26, r26
    4a4a:	bb 1f       	adc	r27, r27
    4a4c:	ee 1f       	adc	r30, r30
    4a4e:	ff 1f       	adc	r31, r31
    4a50:	a2 17       	cp	r26, r18
    4a52:	b3 07       	cpc	r27, r19
    4a54:	e4 07       	cpc	r30, r20
    4a56:	f5 07       	cpc	r31, r21
    4a58:	20 f0       	brcs	.+8      	; 0x4a62 <__udivmodsi4_ep>
    4a5a:	a2 1b       	sub	r26, r18
    4a5c:	b3 0b       	sbc	r27, r19
    4a5e:	e4 0b       	sbc	r30, r20
    4a60:	f5 0b       	sbc	r31, r21

00004a62 <__udivmodsi4_ep>:
    4a62:	66 1f       	adc	r22, r22
    4a64:	77 1f       	adc	r23, r23
    4a66:	88 1f       	adc	r24, r24
    4a68:	99 1f       	adc	r25, r25
    4a6a:	1a 94       	dec	r1
    4a6c:	69 f7       	brne	.-38     	; 0x4a48 <__udivmodsi4_loop>
    4a6e:	60 95       	com	r22
    4a70:	70 95       	com	r23
    4a72:	80 95       	com	r24
    4a74:	90 95       	com	r25
    4a76:	9b 01       	movw	r18, r22
    4a78:	ac 01       	movw	r20, r24
    4a7a:	bd 01       	movw	r22, r26
    4a7c:	cf 01       	movw	r24, r30
    4a7e:	08 95       	ret

00004a80 <__prologue_saves__>:
    4a80:	2f 92       	push	r2
    4a82:	3f 92       	push	r3
    4a84:	4f 92       	push	r4
    4a86:	5f 92       	push	r5
    4a88:	6f 92       	push	r6
    4a8a:	7f 92       	push	r7
    4a8c:	8f 92       	push	r8
    4a8e:	9f 92       	push	r9
    4a90:	af 92       	push	r10
    4a92:	bf 92       	push	r11
    4a94:	cf 92       	push	r12
    4a96:	df 92       	push	r13
    4a98:	ef 92       	push	r14
    4a9a:	ff 92       	push	r15
    4a9c:	0f 93       	push	r16
    4a9e:	1f 93       	push	r17
    4aa0:	cf 93       	push	r28
    4aa2:	df 93       	push	r29
    4aa4:	cd b7       	in	r28, 0x3d	; 61
    4aa6:	de b7       	in	r29, 0x3e	; 62
    4aa8:	ca 1b       	sub	r28, r26
    4aaa:	db 0b       	sbc	r29, r27
    4aac:	0f b6       	in	r0, 0x3f	; 63
    4aae:	f8 94       	cli
    4ab0:	de bf       	out	0x3e, r29	; 62
    4ab2:	0f be       	out	0x3f, r0	; 63
    4ab4:	cd bf       	out	0x3d, r28	; 61
    4ab6:	09 94       	ijmp

00004ab8 <__epilogue_restores__>:
    4ab8:	2a 88       	ldd	r2, Y+18	; 0x12
    4aba:	39 88       	ldd	r3, Y+17	; 0x11
    4abc:	48 88       	ldd	r4, Y+16	; 0x10
    4abe:	5f 84       	ldd	r5, Y+15	; 0x0f
    4ac0:	6e 84       	ldd	r6, Y+14	; 0x0e
    4ac2:	7d 84       	ldd	r7, Y+13	; 0x0d
    4ac4:	8c 84       	ldd	r8, Y+12	; 0x0c
    4ac6:	9b 84       	ldd	r9, Y+11	; 0x0b
    4ac8:	aa 84       	ldd	r10, Y+10	; 0x0a
    4aca:	b9 84       	ldd	r11, Y+9	; 0x09
    4acc:	c8 84       	ldd	r12, Y+8	; 0x08
    4ace:	df 80       	ldd	r13, Y+7	; 0x07
    4ad0:	ee 80       	ldd	r14, Y+6	; 0x06
    4ad2:	fd 80       	ldd	r15, Y+5	; 0x05
    4ad4:	0c 81       	ldd	r16, Y+4	; 0x04
    4ad6:	1b 81       	ldd	r17, Y+3	; 0x03
    4ad8:	aa 81       	ldd	r26, Y+2	; 0x02
    4ada:	b9 81       	ldd	r27, Y+1	; 0x01
    4adc:	ce 0f       	add	r28, r30
    4ade:	d1 1d       	adc	r29, r1
    4ae0:	0f b6       	in	r0, 0x3f	; 63
    4ae2:	f8 94       	cli
    4ae4:	de bf       	out	0x3e, r29	; 62
    4ae6:	0f be       	out	0x3f, r0	; 63
    4ae8:	cd bf       	out	0x3d, r28	; 61
    4aea:	ed 01       	movw	r28, r26
    4aec:	08 95       	ret

00004aee <_exit>:
    4aee:	f8 94       	cli

00004af0 <__stop_program>:
    4af0:	ff cf       	rjmp	.-2      	; 0x4af0 <__stop_program>
